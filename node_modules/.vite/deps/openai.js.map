{"version":3,"file":"openai.js","names":["crypto","str","str","str","parseResponse","Page","client","process","fetch","str","path","Messages","isAutoParsableTool","hasAutoParseableInput","parseToolCall","inputTool","_EventStream_handleError","isAutoParsableTool","content","name","_AbstractChatCompletionRunner_getFinalContent","_AbstractChatCompletionRunner_getFinalMessage","_AbstractChatCompletionRunner_getFinalFunctionToolCall","_AbstractChatCompletionRunner_getFinalFunctionToolCallResult","_AbstractChatCompletionRunner_calculateTotalUsage","_AbstractChatCompletionRunner_validateParams","_AbstractChatCompletionRunner_stringifyFunctionCallResult","escape","e","_ChatCompletionStream_beginRequest","_ChatCompletionStream_getChoiceEventState","_ChatCompletionStream_addChunk","_ChatCompletionStream_emitToolCallDoneEvent","isAutoParsableTool","_ChatCompletionStream_emitContentDoneEvents","_ChatCompletionStream_endRequest","_ChatCompletionStream_getAutoParseableResponseFormat","_ChatCompletionStream_accumulateChatCompletion","_a","rest","content","refusal","hasAutoParseableInput","index","id","assertNever","Completions","MessagesAPI.Messages","Messages","CompletionsAPI.Completions","Completions","TranscriptionsAPI.Transcriptions","TranslationsAPI.Translations","SpeechAPI.Speech","Realtime","SessionsAPI.Sessions","TranscriptionSessionsAPI.TranscriptionSessions","_a","_AssistantStream_addEvent","_AssistantStream_endRequest","_AssistantStream_handleMessage","_AssistantStream_handleRunStep","_AssistantStream_handleEvent","_AssistantStream_accumulateRunStep","_AssistantStream_accumulateMessage","_AssistantStream_accumulateContent","_AssistantStream_handleRun","Runs","StepsAPI.Steps","RunsAPI.Runs","MessagesAPI.Messages","Runs","RealtimeAPI.Realtime","AssistantsAPI.Assistants","ThreadsAPI.Threads","Realtime","Files","ContentAPI.Content","FilesAPI.Files","Files","ItemsAPI.Items","response","OutputItemsAPI.OutputItems","RunsAPI.Runs","Graders","GradersAPI.Graders","Graders","PermissionsAPI.Permissions","Checkpoints","CheckpointsAPI.Checkpoints","Checkpoints","MethodsAPI.Methods","JobsAPI.Jobs","CheckpointsAPI.Checkpoints","AlphaAPI.Alpha","GraderModelsAPI.GraderModels","ClientSecretsAPI.ClientSecrets","content","output","_ResponseStream_beginRequest","_ResponseStream_addEvent","event","_ResponseStream_endRequest","_ResponseStream_accumulateResponse","InputItemsAPI.InputItems","PartsAPI.Parts","Files","FilesAPI.Files","FileBatchesAPI.FileBatches","Files","_Webhooks_validateSecret","_Webhooks_getRequiredHeader","API.Completions","API.Chat","API.Embeddings","API.Files","API.Images","API.Audio","API.Moderations","API.Models","API.FineTuning","API.Graders","API.VectorStores","API.Webhooks","API.Beta","API.Batches","API.Uploads","API.Responses","API.Realtime","API.Conversations","API.Evals","API.Containers","Errors.OpenAIError","Shims.getDefaultFetch","Opts.FallbackEncoder","qs.stringify","path","opts","Errors.APIUserAbortError","Errors.APIConnectionTimeoutError","Errors.APIConnectionError","retryMessage","Shims.CancelReadableStream","Page","Pagination.PagePromise","Shims.ReadableStreamFrom","_OpenAI_baseURLOverridden","Errors.APIError","Errors.NotFoundError","Errors.ConflictError","Errors.RateLimitError","Errors.BadRequestError","Errors.AuthenticationError","Errors.InternalServerError","Errors.PermissionDeniedError","Errors.UnprocessableEntityError","Errors.InvalidWebhookSignatureError","Uploads.toFile","UploadsAPIUploads","Errors.OpenAIError"],"sources":["../../openai/internal/tslib.mjs","../../openai/internal/utils/uuid.mjs","../../openai/internal/errors.mjs","../../openai/core/error.mjs","../../openai/internal/utils/values.mjs","../../openai/internal/utils/sleep.mjs","../../openai/version.mjs","../../openai/internal/detect-platform.mjs","../../openai/internal/shims.mjs","../../openai/internal/request-options.mjs","../../openai/internal/qs/formats.mjs","../../openai/internal/qs/utils.mjs","../../openai/internal/qs/stringify.mjs","../../openai/internal/utils/bytes.mjs","../../openai/internal/decoders/line.mjs","../../openai/internal/utils/log.mjs","../../openai/core/streaming.mjs","../../openai/internal/parse.mjs","../../openai/core/api-promise.mjs","../../openai/core/pagination.mjs","../../openai/internal/uploads.mjs","../../openai/internal/to-file.mjs","../../openai/core/resource.mjs","../../openai/internal/utils/path.mjs","../../openai/resources/chat/completions/messages.mjs","../../openai/lib/parser.mjs","../../openai/lib/chatCompletionUtils.mjs","../../openai/lib/EventStream.mjs","../../openai/lib/RunnableFunction.mjs","../../openai/lib/AbstractChatCompletionRunner.mjs","../../openai/lib/ChatCompletionRunner.mjs","../../openai/_vendor/partial-json-parser/parser.mjs","../../openai/lib/ChatCompletionStream.mjs","../../openai/lib/ChatCompletionStreamingRunner.mjs","../../openai/resources/chat/completions/completions.mjs","../../openai/resources/chat/chat.mjs","../../openai/internal/headers.mjs","../../openai/resources/audio/speech.mjs","../../openai/resources/audio/transcriptions.mjs","../../openai/resources/audio/translations.mjs","../../openai/resources/audio/audio.mjs","../../openai/resources/batches.mjs","../../openai/resources/beta/assistants.mjs","../../openai/resources/beta/realtime/sessions.mjs","../../openai/resources/beta/realtime/transcription-sessions.mjs","../../openai/resources/beta/realtime/realtime.mjs","../../openai/resources/beta/threads/messages.mjs","../../openai/resources/beta/threads/runs/steps.mjs","../../openai/internal/utils/base64.mjs","../../openai/internal/utils/env.mjs","../../openai/lib/AssistantStream.mjs","../../openai/resources/beta/threads/runs/runs.mjs","../../openai/resources/beta/threads/threads.mjs","../../openai/resources/beta/beta.mjs","../../openai/resources/completions.mjs","../../openai/resources/containers/files/content.mjs","../../openai/resources/containers/files/files.mjs","../../openai/resources/containers/containers.mjs","../../openai/resources/conversations/items.mjs","../../openai/resources/conversations/conversations.mjs","../../openai/resources/embeddings.mjs","../../openai/resources/evals/runs/output-items.mjs","../../openai/resources/evals/runs/runs.mjs","../../openai/resources/evals/evals.mjs","../../openai/resources/files.mjs","../../openai/resources/fine-tuning/methods.mjs","../../openai/resources/fine-tuning/alpha/graders.mjs","../../openai/resources/fine-tuning/alpha/alpha.mjs","../../openai/resources/fine-tuning/checkpoints/permissions.mjs","../../openai/resources/fine-tuning/checkpoints/checkpoints.mjs","../../openai/resources/fine-tuning/jobs/checkpoints.mjs","../../openai/resources/fine-tuning/jobs/jobs.mjs","../../openai/resources/fine-tuning/fine-tuning.mjs","../../openai/resources/graders/grader-models.mjs","../../openai/resources/graders/graders.mjs","../../openai/resources/images.mjs","../../openai/resources/models.mjs","../../openai/resources/moderations.mjs","../../openai/resources/realtime/client-secrets.mjs","../../openai/resources/realtime/realtime.mjs","../../openai/lib/ResponsesParser.mjs","../../openai/lib/responses/ResponseStream.mjs","../../openai/resources/responses/input-items.mjs","../../openai/resources/responses/responses.mjs","../../openai/resources/uploads/parts.mjs","../../openai/resources/uploads/uploads.mjs","../../openai/lib/Util.mjs","../../openai/resources/vector-stores/file-batches.mjs","../../openai/resources/vector-stores/files.mjs","../../openai/resources/vector-stores/vector-stores.mjs","../../openai/resources/webhooks.mjs","../../openai/client.mjs","../../openai/azure.mjs"],"sourcesContent":["function __classPrivateFieldSet(receiver, state, value, kind, f) {\n    if (kind === \"m\")\n        throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f)\n        throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver))\n        throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return kind === \"a\" ? f.call(receiver, value) : f ? (f.value = value) : state.set(receiver, value), value;\n}\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\n    if (kind === \"a\" && !f)\n        throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver))\n        throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\nexport { __classPrivateFieldSet, __classPrivateFieldGet };\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n/**\n * https://stackoverflow.com/a/2117523\n */\nexport let uuid4 = function () {\n    const { crypto } = globalThis;\n    if (crypto?.randomUUID) {\n        uuid4 = crypto.randomUUID.bind(crypto);\n        return crypto.randomUUID();\n    }\n    const u8 = new Uint8Array(1);\n    const randomByte = crypto ? () => crypto.getRandomValues(u8)[0] : () => (Math.random() * 0xff) & 0xff;\n    return '10000000-1000-4000-8000-100000000000'.replace(/[018]/g, (c) => (+c ^ (randomByte() & (15 >> (+c / 4)))).toString(16));\n};\n//# sourceMappingURL=uuid.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nexport function isAbortError(err) {\n    return (typeof err === 'object' &&\n        err !== null &&\n        // Spec-compliant fetch implementations\n        (('name' in err && err.name === 'AbortError') ||\n            // Expo fetch\n            ('message' in err && String(err.message).includes('FetchRequestCanceledException'))));\n}\nexport const castToError = (err) => {\n    if (err instanceof Error)\n        return err;\n    if (typeof err === 'object' && err !== null) {\n        try {\n            if (Object.prototype.toString.call(err) === '[object Error]') {\n                // @ts-ignore - not all envs have native support for cause yet\n                const error = new Error(err.message, err.cause ? { cause: err.cause } : {});\n                if (err.stack)\n                    error.stack = err.stack;\n                // @ts-ignore - not all envs have native support for cause yet\n                if (err.cause && !error.cause)\n                    error.cause = err.cause;\n                if (err.name)\n                    error.name = err.name;\n                return error;\n            }\n        }\n        catch { }\n        try {\n            return new Error(JSON.stringify(err));\n        }\n        catch { }\n    }\n    return new Error(err);\n};\n//# sourceMappingURL=errors.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { castToError } from \"../internal/errors.mjs\";\nexport class OpenAIError extends Error {\n}\nexport class APIError extends OpenAIError {\n    constructor(status, error, message, headers) {\n        super(`${APIError.makeMessage(status, error, message)}`);\n        this.status = status;\n        this.headers = headers;\n        this.requestID = headers?.get('x-request-id');\n        this.error = error;\n        const data = error;\n        this.code = data?.['code'];\n        this.param = data?.['param'];\n        this.type = data?.['type'];\n    }\n    static makeMessage(status, error, message) {\n        const msg = error?.message ?\n            typeof error.message === 'string' ?\n                error.message\n                : JSON.stringify(error.message)\n            : error ? JSON.stringify(error)\n                : message;\n        if (status && msg) {\n            return `${status} ${msg}`;\n        }\n        if (status) {\n            return `${status} status code (no body)`;\n        }\n        if (msg) {\n            return msg;\n        }\n        return '(no status code or body)';\n    }\n    static generate(status, errorResponse, message, headers) {\n        if (!status || !headers) {\n            return new APIConnectionError({ message, cause: castToError(errorResponse) });\n        }\n        const error = errorResponse?.['error'];\n        if (status === 400) {\n            return new BadRequestError(status, error, message, headers);\n        }\n        if (status === 401) {\n            return new AuthenticationError(status, error, message, headers);\n        }\n        if (status === 403) {\n            return new PermissionDeniedError(status, error, message, headers);\n        }\n        if (status === 404) {\n            return new NotFoundError(status, error, message, headers);\n        }\n        if (status === 409) {\n            return new ConflictError(status, error, message, headers);\n        }\n        if (status === 422) {\n            return new UnprocessableEntityError(status, error, message, headers);\n        }\n        if (status === 429) {\n            return new RateLimitError(status, error, message, headers);\n        }\n        if (status >= 500) {\n            return new InternalServerError(status, error, message, headers);\n        }\n        return new APIError(status, error, message, headers);\n    }\n}\nexport class APIUserAbortError extends APIError {\n    constructor({ message } = {}) {\n        super(undefined, undefined, message || 'Request was aborted.', undefined);\n    }\n}\nexport class APIConnectionError extends APIError {\n    constructor({ message, cause }) {\n        super(undefined, undefined, message || 'Connection error.', undefined);\n        // in some environments the 'cause' property is already declared\n        // @ts-ignore\n        if (cause)\n            this.cause = cause;\n    }\n}\nexport class APIConnectionTimeoutError extends APIConnectionError {\n    constructor({ message } = {}) {\n        super({ message: message ?? 'Request timed out.' });\n    }\n}\nexport class BadRequestError extends APIError {\n}\nexport class AuthenticationError extends APIError {\n}\nexport class PermissionDeniedError extends APIError {\n}\nexport class NotFoundError extends APIError {\n}\nexport class ConflictError extends APIError {\n}\nexport class UnprocessableEntityError extends APIError {\n}\nexport class RateLimitError extends APIError {\n}\nexport class InternalServerError extends APIError {\n}\nexport class LengthFinishReasonError extends OpenAIError {\n    constructor() {\n        super(`Could not parse response content as the length limit was reached`);\n    }\n}\nexport class ContentFilterFinishReasonError extends OpenAIError {\n    constructor() {\n        super(`Could not parse response content as the request was rejected by the content filter`);\n    }\n}\nexport class InvalidWebhookSignatureError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\n//# sourceMappingURL=error.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { OpenAIError } from \"../../core/error.mjs\";\n// https://url.spec.whatwg.org/#url-scheme-string\nconst startsWithSchemeRegexp = /^[a-z][a-z0-9+.-]*:/i;\nexport const isAbsoluteURL = (url) => {\n    return startsWithSchemeRegexp.test(url);\n};\nexport let isArray = (val) => ((isArray = Array.isArray), isArray(val));\nexport let isReadonlyArray = isArray;\n/** Returns an object if the given value isn't an object, otherwise returns as-is */\nexport function maybeObj(x) {\n    if (typeof x !== 'object') {\n        return {};\n    }\n    return x ?? {};\n}\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj) {\n    if (!obj)\n        return true;\n    for (const _k in obj)\n        return false;\n    return true;\n}\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\nexport function isObj(obj) {\n    return obj != null && typeof obj === 'object' && !Array.isArray(obj);\n}\nexport const ensurePresent = (value) => {\n    if (value == null) {\n        throw new OpenAIError(`Expected a value to be given but received ${value} instead.`);\n    }\n    return value;\n};\nexport const validatePositiveInteger = (name, n) => {\n    if (typeof n !== 'number' || !Number.isInteger(n)) {\n        throw new OpenAIError(`${name} must be an integer`);\n    }\n    if (n < 0) {\n        throw new OpenAIError(`${name} must be a positive integer`);\n    }\n    return n;\n};\nexport const coerceInteger = (value) => {\n    if (typeof value === 'number')\n        return Math.round(value);\n    if (typeof value === 'string')\n        return parseInt(value, 10);\n    throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceFloat = (value) => {\n    if (typeof value === 'number')\n        return value;\n    if (typeof value === 'string')\n        return parseFloat(value);\n    throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceBoolean = (value) => {\n    if (typeof value === 'boolean')\n        return value;\n    if (typeof value === 'string')\n        return value === 'true';\n    return Boolean(value);\n};\nexport const maybeCoerceInteger = (value) => {\n    if (value == null) {\n        return undefined;\n    }\n    return coerceInteger(value);\n};\nexport const maybeCoerceFloat = (value) => {\n    if (value == null) {\n        return undefined;\n    }\n    return coerceFloat(value);\n};\nexport const maybeCoerceBoolean = (value) => {\n    if (value == null) {\n        return undefined;\n    }\n    return coerceBoolean(value);\n};\nexport const safeJSON = (text) => {\n    try {\n        return JSON.parse(text);\n    }\n    catch (err) {\n        return undefined;\n    }\n};\n//# sourceMappingURL=values.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nexport const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n//# sourceMappingURL=sleep.mjs.map","export const VERSION = '6.0.0'; // x-release-please-version\n//# sourceMappingURL=version.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { VERSION } from \"../version.mjs\";\nexport const isRunningInBrowser = () => {\n    return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n        // @ts-ignore\n        typeof window.document !== 'undefined' &&\n        // @ts-ignore\n        typeof navigator !== 'undefined');\n};\n/**\n * Note this does not detect 'browser'; for that, use getBrowserInfo().\n */\nfunction getDetectedPlatform() {\n    if (typeof Deno !== 'undefined' && Deno.build != null) {\n        return 'deno';\n    }\n    if (typeof EdgeRuntime !== 'undefined') {\n        return 'edge';\n    }\n    if (Object.prototype.toString.call(typeof globalThis.process !== 'undefined' ? globalThis.process : 0) === '[object process]') {\n        return 'node';\n    }\n    return 'unknown';\n}\nconst getPlatformProperties = () => {\n    const detectedPlatform = getDetectedPlatform();\n    if (detectedPlatform === 'deno') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(Deno.build.os),\n            'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n            'X-Stainless-Runtime': 'deno',\n            'X-Stainless-Runtime-Version': typeof Deno.version === 'string' ? Deno.version : Deno.version?.deno ?? 'unknown',\n        };\n    }\n    if (typeof EdgeRuntime !== 'undefined') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': `other:${EdgeRuntime}`,\n            'X-Stainless-Runtime': 'edge',\n            'X-Stainless-Runtime-Version': globalThis.process.version,\n        };\n    }\n    // Check if Node.js\n    if (detectedPlatform === 'node') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(globalThis.process.platform ?? 'unknown'),\n            'X-Stainless-Arch': normalizeArch(globalThis.process.arch ?? 'unknown'),\n            'X-Stainless-Runtime': 'node',\n            'X-Stainless-Runtime-Version': globalThis.process.version ?? 'unknown',\n        };\n    }\n    const browserInfo = getBrowserInfo();\n    if (browserInfo) {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': 'unknown',\n            'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\n            'X-Stainless-Runtime-Version': browserInfo.version,\n        };\n    }\n    // TODO add support for Cloudflare workers, etc.\n    return {\n        'X-Stainless-Lang': 'js',\n        'X-Stainless-Package-Version': VERSION,\n        'X-Stainless-OS': 'Unknown',\n        'X-Stainless-Arch': 'unknown',\n        'X-Stainless-Runtime': 'unknown',\n        'X-Stainless-Runtime-Version': 'unknown',\n    };\n};\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo() {\n    if (typeof navigator === 'undefined' || !navigator) {\n        return null;\n    }\n    // NOTE: The order matters here!\n    const browserPatterns = [\n        { key: 'edge', pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'chrome', pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'firefox', pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'safari', pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/ },\n    ];\n    // Find the FIRST matching browser\n    for (const { key, pattern } of browserPatterns) {\n        const match = pattern.exec(navigator.userAgent);\n        if (match) {\n            const major = match[1] || 0;\n            const minor = match[2] || 0;\n            const patch = match[3] || 0;\n            return { browser: key, version: `${major}.${minor}.${patch}` };\n        }\n    }\n    return null;\n}\nconst normalizeArch = (arch) => {\n    // Node docs:\n    // - https://nodejs.org/api/process.html#processarch\n    // Deno docs:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    if (arch === 'x32')\n        return 'x32';\n    if (arch === 'x86_64' || arch === 'x64')\n        return 'x64';\n    if (arch === 'arm')\n        return 'arm';\n    if (arch === 'aarch64' || arch === 'arm64')\n        return 'arm64';\n    if (arch)\n        return `other:${arch}`;\n    return 'unknown';\n};\nconst normalizePlatform = (platform) => {\n    // Node platforms:\n    // - https://nodejs.org/api/process.html#processplatform\n    // Deno platforms:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    // - https://github.com/denoland/deno/issues/14799\n    platform = platform.toLowerCase();\n    // NOTE: this iOS check is untested and may not work\n    // Node does not work natively on IOS, there is a fork at\n    // https://github.com/nodejs-mobile/nodejs-mobile\n    // however it is unknown at the time of writing how to detect if it is running\n    if (platform.includes('ios'))\n        return 'iOS';\n    if (platform === 'android')\n        return 'Android';\n    if (platform === 'darwin')\n        return 'MacOS';\n    if (platform === 'win32')\n        return 'Windows';\n    if (platform === 'freebsd')\n        return 'FreeBSD';\n    if (platform === 'openbsd')\n        return 'OpenBSD';\n    if (platform === 'linux')\n        return 'Linux';\n    if (platform)\n        return `Other:${platform}`;\n    return 'Unknown';\n};\nlet _platformHeaders;\nexport const getPlatformHeaders = () => {\n    return (_platformHeaders ?? (_platformHeaders = getPlatformProperties()));\n};\n//# sourceMappingURL=detect-platform.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nexport function getDefaultFetch() {\n    if (typeof fetch !== 'undefined') {\n        return fetch;\n    }\n    throw new Error('`fetch` is not defined as a global; Either pass `fetch` to the client, `new OpenAI({ fetch })` or polyfill the global, `globalThis.fetch = fetch`');\n}\nexport function makeReadableStream(...args) {\n    const ReadableStream = globalThis.ReadableStream;\n    if (typeof ReadableStream === 'undefined') {\n        // Note: All of the platforms / runtimes we officially support already define\n        // `ReadableStream` as a global, so this should only ever be hit on unsupported runtimes.\n        throw new Error('`ReadableStream` is not defined as a global; You will need to polyfill it, `globalThis.ReadableStream = ReadableStream`');\n    }\n    return new ReadableStream(...args);\n}\nexport function ReadableStreamFrom(iterable) {\n    let iter = Symbol.asyncIterator in iterable ? iterable[Symbol.asyncIterator]() : iterable[Symbol.iterator]();\n    return makeReadableStream({\n        start() { },\n        async pull(controller) {\n            const { done, value } = await iter.next();\n            if (done) {\n                controller.close();\n            }\n            else {\n                controller.enqueue(value);\n            }\n        },\n        async cancel() {\n            await iter.return?.();\n        },\n    });\n}\n/**\n * Most browsers don't yet have async iterable support for ReadableStream,\n * and Node has a very different way of reading bytes from its \"ReadableStream\".\n *\n * This polyfill was pulled from https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\n */\nexport function ReadableStreamToAsyncIterable(stream) {\n    if (stream[Symbol.asyncIterator])\n        return stream;\n    const reader = stream.getReader();\n    return {\n        async next() {\n            try {\n                const result = await reader.read();\n                if (result?.done)\n                    reader.releaseLock(); // release lock when stream becomes closed\n                return result;\n            }\n            catch (e) {\n                reader.releaseLock(); // release lock when stream becomes errored\n                throw e;\n            }\n        },\n        async return() {\n            const cancelPromise = reader.cancel();\n            reader.releaseLock();\n            await cancelPromise;\n            return { done: true, value: undefined };\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n    };\n}\n/**\n * Cancels a ReadableStream we don't need to consume.\n * See https://undici.nodejs.org/#/?id=garbage-collection\n */\nexport async function CancelReadableStream(stream) {\n    if (stream === null || typeof stream !== 'object')\n        return;\n    if (stream[Symbol.asyncIterator]) {\n        await stream[Symbol.asyncIterator]().return?.();\n        return;\n    }\n    const reader = stream.getReader();\n    const cancelPromise = reader.cancel();\n    reader.releaseLock();\n    await cancelPromise;\n}\n//# sourceMappingURL=shims.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nexport const FallbackEncoder = ({ headers, body }) => {\n    return {\n        bodyHeaders: {\n            'content-type': 'application/json',\n        },\n        body: JSON.stringify(body),\n    };\n};\n//# sourceMappingURL=request-options.mjs.map","export const default_format = 'RFC3986';\nexport const default_formatter = (v) => String(v);\nexport const formatters = {\n    RFC1738: (v) => String(v).replace(/%20/g, '+'),\n    RFC3986: default_formatter,\n};\nexport const RFC1738 = 'RFC1738';\nexport const RFC3986 = 'RFC3986';\n//# sourceMappingURL=formats.mjs.map","import { RFC1738 } from \"./formats.mjs\";\nimport { isArray } from \"../utils/values.mjs\";\nexport let has = (obj, key) => ((has = Object.hasOwn ?? Function.prototype.call.bind(Object.prototype.hasOwnProperty)),\n    has(obj, key));\nconst hex_table = /* @__PURE__ */ (() => {\n    const array = [];\n    for (let i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n    return array;\n})();\nfunction compact_queue(queue) {\n    while (queue.length > 1) {\n        const item = queue.pop();\n        if (!item)\n            continue;\n        const obj = item.obj[item.prop];\n        if (isArray(obj)) {\n            const compacted = [];\n            for (let j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n            // @ts-ignore\n            item.obj[item.prop] = compacted;\n        }\n    }\n}\nfunction array_to_object(source, options) {\n    const obj = options && options.plainObjects ? Object.create(null) : {};\n    for (let i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n    return obj;\n}\nexport function merge(target, source, options = {}) {\n    if (!source) {\n        return target;\n    }\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        }\n        else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has(Object.prototype, source)) {\n                target[source] = true;\n            }\n        }\n        else {\n            return [target, source];\n        }\n        return target;\n    }\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n    let mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        // @ts-ignore\n        mergeTarget = array_to_object(target, options);\n    }\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has(target, i)) {\n                const targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                }\n                else {\n                    target.push(item);\n                }\n            }\n            else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n    return Object.keys(source).reduce(function (acc, key) {\n        const value = source[key];\n        if (has(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        }\n        else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n}\nexport function assign_single_source(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n}\nexport function decode(str, _, charset) {\n    const strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    }\n    catch (e) {\n        return strWithoutPlus;\n    }\n}\nconst limit = 1024;\nexport const encode = (str, _defaultEncoder, charset, _kind, format) => {\n    // This code was originally written by Brian White for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n    let string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    }\n    else if (typeof str !== 'string') {\n        string = String(str);\n    }\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n    let out = '';\n    for (let j = 0; j < string.length; j += limit) {\n        const segment = string.length >= limit ? string.slice(j, j + limit) : string;\n        const arr = [];\n        for (let i = 0; i < segment.length; ++i) {\n            let c = segment.charCodeAt(i);\n            if (c === 0x2d || // -\n                c === 0x2e || // .\n                c === 0x5f || // _\n                c === 0x7e || // ~\n                (c >= 0x30 && c <= 0x39) || // 0-9\n                (c >= 0x41 && c <= 0x5a) || // a-z\n                (c >= 0x61 && c <= 0x7a) || // A-Z\n                (format === RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n            ) {\n                arr[arr.length] = segment.charAt(i);\n                continue;\n            }\n            if (c < 0x80) {\n                arr[arr.length] = hex_table[c];\n                continue;\n            }\n            if (c < 0x800) {\n                arr[arr.length] = hex_table[0xc0 | (c >> 6)] + hex_table[0x80 | (c & 0x3f)];\n                continue;\n            }\n            if (c < 0xd800 || c >= 0xe000) {\n                arr[arr.length] =\n                    hex_table[0xe0 | (c >> 12)] + hex_table[0x80 | ((c >> 6) & 0x3f)] + hex_table[0x80 | (c & 0x3f)];\n                continue;\n            }\n            i += 1;\n            c = 0x10000 + (((c & 0x3ff) << 10) | (segment.charCodeAt(i) & 0x3ff));\n            arr[arr.length] =\n                hex_table[0xf0 | (c >> 18)] +\n                    hex_table[0x80 | ((c >> 12) & 0x3f)] +\n                    hex_table[0x80 | ((c >> 6) & 0x3f)] +\n                    hex_table[0x80 | (c & 0x3f)];\n        }\n        out += arr.join('');\n    }\n    return out;\n};\nexport function compact(value) {\n    const queue = [{ obj: { o: value }, prop: 'o' }];\n    const refs = [];\n    for (let i = 0; i < queue.length; ++i) {\n        const item = queue[i];\n        // @ts-ignore\n        const obj = item.obj[item.prop];\n        const keys = Object.keys(obj);\n        for (let j = 0; j < keys.length; ++j) {\n            const key = keys[j];\n            const val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n    compact_queue(queue);\n    return value;\n}\nexport function is_regexp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n}\nexport function is_buffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n}\nexport function combine(a, b) {\n    return [].concat(a, b);\n}\nexport function maybe_map(val, fn) {\n    if (isArray(val)) {\n        const mapped = [];\n        for (let i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n}\n//# sourceMappingURL=utils.mjs.map","import { encode, is_buffer, maybe_map, has } from \"./utils.mjs\";\nimport { default_format, default_formatter, formatters } from \"./formats.mjs\";\nimport { isArray } from \"../utils/values.mjs\";\nconst array_prefix_generators = {\n    brackets(prefix) {\n        return String(prefix) + '[]';\n    },\n    comma: 'comma',\n    indices(prefix, key) {\n        return String(prefix) + '[' + key + ']';\n    },\n    repeat(prefix) {\n        return String(prefix);\n    },\n};\nconst push_to_array = function (arr, value_or_array) {\n    Array.prototype.push.apply(arr, isArray(value_or_array) ? value_or_array : [value_or_array]);\n};\nlet toISOString;\nconst defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    allowEmptyArrays: false,\n    arrayFormat: 'indices',\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encodeDotInKeys: false,\n    encoder: encode,\n    encodeValuesOnly: false,\n    format: default_format,\n    formatter: default_formatter,\n    /** @deprecated */\n    indices: false,\n    serializeDate(date) {\n        return (toISOString ?? (toISOString = Function.prototype.call.bind(Date.prototype.toISOString)))(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false,\n};\nfunction is_non_nullish_primitive(v) {\n    return (typeof v === 'string' ||\n        typeof v === 'number' ||\n        typeof v === 'boolean' ||\n        typeof v === 'symbol' ||\n        typeof v === 'bigint');\n}\nconst sentinel = {};\nfunction inner_stringify(object, prefix, generateArrayPrefix, commaRoundTrip, allowEmptyArrays, strictNullHandling, skipNulls, encodeDotInKeys, encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, sideChannel) {\n    let obj = object;\n    let tmp_sc = sideChannel;\n    let step = 0;\n    let find_flag = false;\n    while ((tmp_sc = tmp_sc.get(sentinel)) !== void undefined && !find_flag) {\n        // Where object last appeared in the ref tree\n        const pos = tmp_sc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            }\n            else {\n                find_flag = true; // Break while\n            }\n        }\n        if (typeof tmp_sc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    }\n    else if (obj instanceof Date) {\n        obj = serializeDate?.(obj);\n    }\n    else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = maybe_map(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate?.(value);\n            }\n            return value;\n        });\n    }\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ?\n                // @ts-expect-error\n                encoder(prefix, defaults.encoder, charset, 'key', format)\n                : prefix;\n        }\n        obj = '';\n    }\n    if (is_non_nullish_primitive(obj) || is_buffer(obj)) {\n        if (encoder) {\n            const key_value = encodeValuesOnly ? prefix\n                // @ts-expect-error\n                : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [\n                formatter?.(key_value) +\n                    '=' +\n                    // @ts-expect-error\n                    formatter?.(encoder(obj, defaults.encoder, charset, 'value', format)),\n            ];\n        }\n        return [formatter?.(prefix) + '=' + formatter?.(String(obj))];\n    }\n    const values = [];\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n    let obj_keys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        if (encodeValuesOnly && encoder) {\n            // @ts-expect-error values only\n            obj = maybe_map(obj, encoder);\n        }\n        obj_keys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    }\n    else if (isArray(filter)) {\n        obj_keys = filter;\n    }\n    else {\n        const keys = Object.keys(obj);\n        obj_keys = sort ? keys.sort(sort) : keys;\n    }\n    const encoded_prefix = encodeDotInKeys ? String(prefix).replace(/\\./g, '%2E') : String(prefix);\n    const adjusted_prefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? encoded_prefix + '[]' : encoded_prefix;\n    if (allowEmptyArrays && isArray(obj) && obj.length === 0) {\n        return adjusted_prefix + '[]';\n    }\n    for (let j = 0; j < obj_keys.length; ++j) {\n        const key = obj_keys[j];\n        const value = \n        // @ts-ignore\n        typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n        if (skipNulls && value === null) {\n            continue;\n        }\n        // @ts-ignore\n        const encoded_key = allowDots && encodeDotInKeys ? key.replace(/\\./g, '%2E') : key;\n        const key_prefix = isArray(obj) ?\n            typeof generateArrayPrefix === 'function' ?\n                generateArrayPrefix(adjusted_prefix, encoded_key)\n                : adjusted_prefix\n            : adjusted_prefix + (allowDots ? '.' + encoded_key : '[' + encoded_key + ']');\n        sideChannel.set(object, step);\n        const valueSideChannel = new WeakMap();\n        valueSideChannel.set(sentinel, sideChannel);\n        push_to_array(values, inner_stringify(value, key_prefix, generateArrayPrefix, commaRoundTrip, allowEmptyArrays, strictNullHandling, skipNulls, encodeDotInKeys, \n        // @ts-ignore\n        generateArrayPrefix === 'comma' && encodeValuesOnly && isArray(obj) ? null : encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, valueSideChannel));\n    }\n    return values;\n}\nfunction normalize_stringify_options(opts = defaults) {\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n    if (typeof opts.encodeDotInKeys !== 'undefined' && typeof opts.encodeDotInKeys !== 'boolean') {\n        throw new TypeError('`encodeDotInKeys` option can only be `true` or `false`, when provided');\n    }\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n    const charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    let format = default_format;\n    if (typeof opts.format !== 'undefined') {\n        if (!has(formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    const formatter = formatters[format];\n    let filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n    let arrayFormat;\n    if (opts.arrayFormat && opts.arrayFormat in array_prefix_generators) {\n        arrayFormat = opts.arrayFormat;\n    }\n    else if ('indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    }\n    else {\n        arrayFormat = defaults.arrayFormat;\n    }\n    if ('commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n    const allowDots = typeof opts.allowDots === 'undefined' ?\n        !!opts.encodeDotInKeys === true ?\n            true\n            : defaults.allowDots\n        : !!opts.allowDots;\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        // @ts-ignore\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        arrayFormat: arrayFormat,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        commaRoundTrip: !!opts.commaRoundTrip,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encodeDotInKeys: typeof opts.encodeDotInKeys === 'boolean' ? opts.encodeDotInKeys : defaults.encodeDotInKeys,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        // @ts-ignore\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling,\n    };\n}\nexport function stringify(object, opts = {}) {\n    let obj = object;\n    const options = normalize_stringify_options(opts);\n    let obj_keys;\n    let filter;\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    }\n    else if (isArray(options.filter)) {\n        filter = options.filter;\n        obj_keys = filter;\n    }\n    const keys = [];\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n    const generateArrayPrefix = array_prefix_generators[options.arrayFormat];\n    const commaRoundTrip = generateArrayPrefix === 'comma' && options.commaRoundTrip;\n    if (!obj_keys) {\n        obj_keys = Object.keys(obj);\n    }\n    if (options.sort) {\n        obj_keys.sort(options.sort);\n    }\n    const sideChannel = new WeakMap();\n    for (let i = 0; i < obj_keys.length; ++i) {\n        const key = obj_keys[i];\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        push_to_array(keys, inner_stringify(obj[key], key, \n        // @ts-expect-error\n        generateArrayPrefix, commaRoundTrip, options.allowEmptyArrays, options.strictNullHandling, options.skipNulls, options.encodeDotInKeys, options.encode ? options.encoder : null, options.filter, options.sort, options.allowDots, options.serializeDate, options.format, options.formatter, options.encodeValuesOnly, options.charset, sideChannel));\n    }\n    const joined = keys.join(options.delimiter);\n    let prefix = options.addQueryPrefix === true ? '?' : '';\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        }\n        else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n    return joined.length > 0 ? prefix + joined : '';\n}\n//# sourceMappingURL=stringify.mjs.map","export function concatBytes(buffers) {\n    let length = 0;\n    for (const buffer of buffers) {\n        length += buffer.length;\n    }\n    const output = new Uint8Array(length);\n    let index = 0;\n    for (const buffer of buffers) {\n        output.set(buffer, index);\n        index += buffer.length;\n    }\n    return output;\n}\nlet encodeUTF8_;\nexport function encodeUTF8(str) {\n    let encoder;\n    return (encodeUTF8_ ??\n        ((encoder = new globalThis.TextEncoder()), (encodeUTF8_ = encoder.encode.bind(encoder))))(str);\n}\nlet decodeUTF8_;\nexport function decodeUTF8(bytes) {\n    let decoder;\n    return (decodeUTF8_ ??\n        ((decoder = new globalThis.TextDecoder()), (decodeUTF8_ = decoder.decode.bind(decoder))))(bytes);\n}\n//# sourceMappingURL=bytes.mjs.map","var _LineDecoder_buffer, _LineDecoder_carriageReturnIndex;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"../tslib.mjs\";\nimport { concatBytes, decodeUTF8, encodeUTF8 } from \"../utils/bytes.mjs\";\n/**\n * A re-implementation of httpx's `LineDecoder` in Python that handles incrementally\n * reading lines from text.\n *\n * https://github.com/encode/httpx/blob/920333ea98118e9cf617f246905d7b202510941c/httpx/_decoders.py#L258\n */\nexport class LineDecoder {\n    constructor() {\n        _LineDecoder_buffer.set(this, void 0);\n        _LineDecoder_carriageReturnIndex.set(this, void 0);\n        __classPrivateFieldSet(this, _LineDecoder_buffer, new Uint8Array(), \"f\");\n        __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, null, \"f\");\n    }\n    decode(chunk) {\n        if (chunk == null) {\n            return [];\n        }\n        const binaryChunk = chunk instanceof ArrayBuffer ? new Uint8Array(chunk)\n            : typeof chunk === 'string' ? encodeUTF8(chunk)\n                : chunk;\n        __classPrivateFieldSet(this, _LineDecoder_buffer, concatBytes([__classPrivateFieldGet(this, _LineDecoder_buffer, \"f\"), binaryChunk]), \"f\");\n        const lines = [];\n        let patternIndex;\n        while ((patternIndex = findNewlineIndex(__classPrivateFieldGet(this, _LineDecoder_buffer, \"f\"), __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\"))) != null) {\n            if (patternIndex.carriage && __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") == null) {\n                // skip until we either get a corresponding `\\n`, a new `\\r` or nothing\n                __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, patternIndex.index, \"f\");\n                continue;\n            }\n            // we got double \\r or \\rtext\\n\n            if (__classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") != null &&\n                (patternIndex.index !== __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") + 1 || patternIndex.carriage)) {\n                lines.push(decodeUTF8(__classPrivateFieldGet(this, _LineDecoder_buffer, \"f\").subarray(0, __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") - 1)));\n                __classPrivateFieldSet(this, _LineDecoder_buffer, __classPrivateFieldGet(this, _LineDecoder_buffer, \"f\").subarray(__classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\")), \"f\");\n                __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, null, \"f\");\n                continue;\n            }\n            const endIndex = __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") !== null ? patternIndex.preceding - 1 : patternIndex.preceding;\n            const line = decodeUTF8(__classPrivateFieldGet(this, _LineDecoder_buffer, \"f\").subarray(0, endIndex));\n            lines.push(line);\n            __classPrivateFieldSet(this, _LineDecoder_buffer, __classPrivateFieldGet(this, _LineDecoder_buffer, \"f\").subarray(patternIndex.index), \"f\");\n            __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, null, \"f\");\n        }\n        return lines;\n    }\n    flush() {\n        if (!__classPrivateFieldGet(this, _LineDecoder_buffer, \"f\").length) {\n            return [];\n        }\n        return this.decode('\\n');\n    }\n}\n_LineDecoder_buffer = new WeakMap(), _LineDecoder_carriageReturnIndex = new WeakMap();\n// prettier-ignore\nLineDecoder.NEWLINE_CHARS = new Set(['\\n', '\\r']);\nLineDecoder.NEWLINE_REGEXP = /\\r\\n|[\\n\\r]/g;\n/**\n * This function searches the buffer for the end patterns, (\\r or \\n)\n * and returns an object with the index preceding the matched newline and the\n * index after the newline char. `null` is returned if no new line is found.\n *\n * ```ts\n * findNewLineIndex('abc\\ndef') -> { preceding: 2, index: 3 }\n * ```\n */\nfunction findNewlineIndex(buffer, startIndex) {\n    const newline = 0x0a; // \\n\n    const carriage = 0x0d; // \\r\n    for (let i = startIndex ?? 0; i < buffer.length; i++) {\n        if (buffer[i] === newline) {\n            return { preceding: i, index: i + 1, carriage: false };\n        }\n        if (buffer[i] === carriage) {\n            return { preceding: i, index: i + 1, carriage: true };\n        }\n    }\n    return null;\n}\nexport function findDoubleNewlineIndex(buffer) {\n    // This function searches the buffer for the end patterns (\\r\\r, \\n\\n, \\r\\n\\r\\n)\n    // and returns the index right after the first occurrence of any pattern,\n    // or -1 if none of the patterns are found.\n    const newline = 0x0a; // \\n\n    const carriage = 0x0d; // \\r\n    for (let i = 0; i < buffer.length - 1; i++) {\n        if (buffer[i] === newline && buffer[i + 1] === newline) {\n            // \\n\\n\n            return i + 2;\n        }\n        if (buffer[i] === carriage && buffer[i + 1] === carriage) {\n            // \\r\\r\n            return i + 2;\n        }\n        if (buffer[i] === carriage &&\n            buffer[i + 1] === newline &&\n            i + 3 < buffer.length &&\n            buffer[i + 2] === carriage &&\n            buffer[i + 3] === newline) {\n            // \\r\\n\\r\\n\n            return i + 4;\n        }\n    }\n    return -1;\n}\n//# sourceMappingURL=line.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { hasOwn } from \"./values.mjs\";\nconst levelNumbers = {\n    off: 0,\n    error: 200,\n    warn: 300,\n    info: 400,\n    debug: 500,\n};\nexport const parseLogLevel = (maybeLevel, sourceName, client) => {\n    if (!maybeLevel) {\n        return undefined;\n    }\n    if (hasOwn(levelNumbers, maybeLevel)) {\n        return maybeLevel;\n    }\n    loggerFor(client).warn(`${sourceName} was set to ${JSON.stringify(maybeLevel)}, expected one of ${JSON.stringify(Object.keys(levelNumbers))}`);\n    return undefined;\n};\nfunction noop() { }\nfunction makeLogFn(fnLevel, logger, logLevel) {\n    if (!logger || levelNumbers[fnLevel] > levelNumbers[logLevel]) {\n        return noop;\n    }\n    else {\n        // Don't wrap logger functions, we want the stacktrace intact!\n        return logger[fnLevel].bind(logger);\n    }\n}\nconst noopLogger = {\n    error: noop,\n    warn: noop,\n    info: noop,\n    debug: noop,\n};\nlet cachedLoggers = /* @__PURE__ */ new WeakMap();\nexport function loggerFor(client) {\n    const logger = client.logger;\n    const logLevel = client.logLevel ?? 'off';\n    if (!logger) {\n        return noopLogger;\n    }\n    const cachedLogger = cachedLoggers.get(logger);\n    if (cachedLogger && cachedLogger[0] === logLevel) {\n        return cachedLogger[1];\n    }\n    const levelLogger = {\n        error: makeLogFn('error', logger, logLevel),\n        warn: makeLogFn('warn', logger, logLevel),\n        info: makeLogFn('info', logger, logLevel),\n        debug: makeLogFn('debug', logger, logLevel),\n    };\n    cachedLoggers.set(logger, [logLevel, levelLogger]);\n    return levelLogger;\n}\nexport const formatRequestDetails = (details) => {\n    if (details.options) {\n        details.options = { ...details.options };\n        delete details.options['headers']; // redundant + leaks internals\n    }\n    if (details.headers) {\n        details.headers = Object.fromEntries((details.headers instanceof Headers ? [...details.headers] : Object.entries(details.headers)).map(([name, value]) => [\n            name,\n            (name.toLowerCase() === 'authorization' ||\n                name.toLowerCase() === 'cookie' ||\n                name.toLowerCase() === 'set-cookie') ?\n                '***'\n                : value,\n        ]));\n    }\n    if ('retryOfRequestLogID' in details) {\n        if (details.retryOfRequestLogID) {\n            details.retryOf = details.retryOfRequestLogID;\n        }\n        delete details.retryOfRequestLogID;\n    }\n    return details;\n};\n//# sourceMappingURL=log.mjs.map","var _Stream_client;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"../internal/tslib.mjs\";\nimport { OpenAIError } from \"./error.mjs\";\nimport { makeReadableStream } from \"../internal/shims.mjs\";\nimport { findDoubleNewlineIndex, LineDecoder } from \"../internal/decoders/line.mjs\";\nimport { ReadableStreamToAsyncIterable } from \"../internal/shims.mjs\";\nimport { isAbortError } from \"../internal/errors.mjs\";\nimport { encodeUTF8 } from \"../internal/utils/bytes.mjs\";\nimport { loggerFor } from \"../internal/utils/log.mjs\";\nimport { APIError } from \"./error.mjs\";\nexport class Stream {\n    constructor(iterator, controller, client) {\n        this.iterator = iterator;\n        _Stream_client.set(this, void 0);\n        this.controller = controller;\n        __classPrivateFieldSet(this, _Stream_client, client, \"f\");\n    }\n    static fromSSEResponse(response, controller, client) {\n        let consumed = false;\n        const logger = client ? loggerFor(client) : console;\n        async function* iterator() {\n            if (consumed) {\n                throw new OpenAIError('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const sse of _iterSSEMessages(response, controller)) {\n                    if (done)\n                        continue;\n                    if (sse.data.startsWith('[DONE]')) {\n                        done = true;\n                        continue;\n                    }\n                    if (sse.event === null || !sse.event.startsWith('thread.')) {\n                        let data;\n                        try {\n                            data = JSON.parse(sse.data);\n                        }\n                        catch (e) {\n                            logger.error(`Could not parse message into JSON:`, sse.data);\n                            logger.error(`From chunk:`, sse.raw);\n                            throw e;\n                        }\n                        if (data && data.error) {\n                            throw new APIError(undefined, data.error, undefined, response.headers);\n                        }\n                        yield data;\n                    }\n                    else {\n                        let data;\n                        try {\n                            data = JSON.parse(sse.data);\n                        }\n                        catch (e) {\n                            console.error(`Could not parse message into JSON:`, sse.data);\n                            console.error(`From chunk:`, sse.raw);\n                            throw e;\n                        }\n                        // TODO: Is this where the error should be thrown?\n                        if (sse.event == 'error') {\n                            throw new APIError(undefined, data.error, data.message, undefined);\n                        }\n                        yield { event: sse.event, data: data };\n                    }\n                }\n                done = true;\n            }\n            catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if (isAbortError(e))\n                    return;\n                throw e;\n            }\n            finally {\n                // If the user `break`s, abort the ongoing request.\n                if (!done)\n                    controller.abort();\n            }\n        }\n        return new Stream(iterator, controller, client);\n    }\n    /**\n     * Generates a Stream from a newline-separated ReadableStream\n     * where each item is a JSON value.\n     */\n    static fromReadableStream(readableStream, controller, client) {\n        let consumed = false;\n        async function* iterLines() {\n            const lineDecoder = new LineDecoder();\n            const iter = ReadableStreamToAsyncIterable(readableStream);\n            for await (const chunk of iter) {\n                for (const line of lineDecoder.decode(chunk)) {\n                    yield line;\n                }\n            }\n            for (const line of lineDecoder.flush()) {\n                yield line;\n            }\n        }\n        async function* iterator() {\n            if (consumed) {\n                throw new OpenAIError('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const line of iterLines()) {\n                    if (done)\n                        continue;\n                    if (line)\n                        yield JSON.parse(line);\n                }\n                done = true;\n            }\n            catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if (isAbortError(e))\n                    return;\n                throw e;\n            }\n            finally {\n                // If the user `break`s, abort the ongoing request.\n                if (!done)\n                    controller.abort();\n            }\n        }\n        return new Stream(iterator, controller, client);\n    }\n    [(_Stream_client = new WeakMap(), Symbol.asyncIterator)]() {\n        return this.iterator();\n    }\n    /**\n     * Splits the stream into two streams which can be\n     * independently read from at different speeds.\n     */\n    tee() {\n        const left = [];\n        const right = [];\n        const iterator = this.iterator();\n        const teeIterator = (queue) => {\n            return {\n                next: () => {\n                    if (queue.length === 0) {\n                        const result = iterator.next();\n                        left.push(result);\n                        right.push(result);\n                    }\n                    return queue.shift();\n                },\n            };\n        };\n        return [\n            new Stream(() => teeIterator(left), this.controller, __classPrivateFieldGet(this, _Stream_client, \"f\")),\n            new Stream(() => teeIterator(right), this.controller, __classPrivateFieldGet(this, _Stream_client, \"f\")),\n        ];\n    }\n    /**\n     * Converts this stream to a newline-separated ReadableStream of\n     * JSON stringified values in the stream\n     * which can be turned back into a Stream with `Stream.fromReadableStream()`.\n     */\n    toReadableStream() {\n        const self = this;\n        let iter;\n        return makeReadableStream({\n            async start() {\n                iter = self[Symbol.asyncIterator]();\n            },\n            async pull(ctrl) {\n                try {\n                    const { value, done } = await iter.next();\n                    if (done)\n                        return ctrl.close();\n                    const bytes = encodeUTF8(JSON.stringify(value) + '\\n');\n                    ctrl.enqueue(bytes);\n                }\n                catch (err) {\n                    ctrl.error(err);\n                }\n            },\n            async cancel() {\n                await iter.return?.();\n            },\n        });\n    }\n}\nexport async function* _iterSSEMessages(response, controller) {\n    if (!response.body) {\n        controller.abort();\n        if (typeof globalThis.navigator !== 'undefined' &&\n            globalThis.navigator.product === 'ReactNative') {\n            throw new OpenAIError(`The default react-native fetch implementation does not support streaming. Please use expo/fetch: https://docs.expo.dev/versions/latest/sdk/expo/#expofetch-api`);\n        }\n        throw new OpenAIError(`Attempted to iterate over a response with no body`);\n    }\n    const sseDecoder = new SSEDecoder();\n    const lineDecoder = new LineDecoder();\n    const iter = ReadableStreamToAsyncIterable(response.body);\n    for await (const sseChunk of iterSSEChunks(iter)) {\n        for (const line of lineDecoder.decode(sseChunk)) {\n            const sse = sseDecoder.decode(line);\n            if (sse)\n                yield sse;\n        }\n    }\n    for (const line of lineDecoder.flush()) {\n        const sse = sseDecoder.decode(line);\n        if (sse)\n            yield sse;\n    }\n}\n/**\n * Given an async iterable iterator, iterates over it and yields full\n * SSE chunks, i.e. yields when a double new-line is encountered.\n */\nasync function* iterSSEChunks(iterator) {\n    let data = new Uint8Array();\n    for await (const chunk of iterator) {\n        if (chunk == null) {\n            continue;\n        }\n        const binaryChunk = chunk instanceof ArrayBuffer ? new Uint8Array(chunk)\n            : typeof chunk === 'string' ? encodeUTF8(chunk)\n                : chunk;\n        let newData = new Uint8Array(data.length + binaryChunk.length);\n        newData.set(data);\n        newData.set(binaryChunk, data.length);\n        data = newData;\n        let patternIndex;\n        while ((patternIndex = findDoubleNewlineIndex(data)) !== -1) {\n            yield data.slice(0, patternIndex);\n            data = data.slice(patternIndex);\n        }\n    }\n    if (data.length > 0) {\n        yield data;\n    }\n}\nclass SSEDecoder {\n    constructor() {\n        this.event = null;\n        this.data = [];\n        this.chunks = [];\n    }\n    decode(line) {\n        if (line.endsWith('\\r')) {\n            line = line.substring(0, line.length - 1);\n        }\n        if (!line) {\n            // empty line and we didn't previously encounter any messages\n            if (!this.event && !this.data.length)\n                return null;\n            const sse = {\n                event: this.event,\n                data: this.data.join('\\n'),\n                raw: this.chunks,\n            };\n            this.event = null;\n            this.data = [];\n            this.chunks = [];\n            return sse;\n        }\n        this.chunks.push(line);\n        if (line.startsWith(':')) {\n            return null;\n        }\n        let [fieldname, _, value] = partition(line, ':');\n        if (value.startsWith(' ')) {\n            value = value.substring(1);\n        }\n        if (fieldname === 'event') {\n            this.event = value;\n        }\n        else if (fieldname === 'data') {\n            this.data.push(value);\n        }\n        return null;\n    }\n}\nfunction partition(str, delimiter) {\n    const index = str.indexOf(delimiter);\n    if (index !== -1) {\n        return [str.substring(0, index), delimiter, str.substring(index + delimiter.length)];\n    }\n    return [str, '', ''];\n}\n//# sourceMappingURL=streaming.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { Stream } from \"../core/streaming.mjs\";\nimport { formatRequestDetails, loggerFor } from \"./utils/log.mjs\";\nexport async function defaultParseResponse(client, props) {\n    const { response, requestLogID, retryOfRequestLogID, startTime } = props;\n    const body = await (async () => {\n        if (props.options.stream) {\n            loggerFor(client).debug('response', response.status, response.url, response.headers, response.body);\n            // Note: there is an invariant here that isn't represented in the type system\n            // that if you set `stream: true` the response type must also be `Stream<T>`\n            if (props.options.__streamClass) {\n                return props.options.__streamClass.fromSSEResponse(response, props.controller, client);\n            }\n            return Stream.fromSSEResponse(response, props.controller, client);\n        }\n        // fetch refuses to read the body when the status code is 204.\n        if (response.status === 204) {\n            return null;\n        }\n        if (props.options.__binaryResponse) {\n            return response;\n        }\n        const contentType = response.headers.get('content-type');\n        const mediaType = contentType?.split(';')[0]?.trim();\n        const isJSON = mediaType?.includes('application/json') || mediaType?.endsWith('+json');\n        if (isJSON) {\n            const json = await response.json();\n            return addRequestID(json, response);\n        }\n        const text = await response.text();\n        return text;\n    })();\n    loggerFor(client).debug(`[${requestLogID}] response parsed`, formatRequestDetails({\n        retryOfRequestLogID,\n        url: response.url,\n        status: response.status,\n        body,\n        durationMs: Date.now() - startTime,\n    }));\n    return body;\n}\nexport function addRequestID(value, response) {\n    if (!value || typeof value !== 'object' || Array.isArray(value)) {\n        return value;\n    }\n    return Object.defineProperty(value, '_request_id', {\n        value: response.headers.get('x-request-id'),\n        enumerable: false,\n    });\n}\n//# sourceMappingURL=parse.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _APIPromise_client;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"../internal/tslib.mjs\";\nimport { defaultParseResponse, addRequestID, } from \"../internal/parse.mjs\";\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nexport class APIPromise extends Promise {\n    constructor(client, responsePromise, parseResponse = defaultParseResponse) {\n        super((resolve) => {\n            // this is maybe a bit weird but this has to be a no-op to not implicitly\n            // parse the response body; instead .then, .catch, .finally are overridden\n            // to parse the response\n            resolve(null);\n        });\n        this.responsePromise = responsePromise;\n        this.parseResponse = parseResponse;\n        _APIPromise_client.set(this, void 0);\n        __classPrivateFieldSet(this, _APIPromise_client, client, \"f\");\n    }\n    _thenUnwrap(transform) {\n        return new APIPromise(__classPrivateFieldGet(this, _APIPromise_client, \"f\"), this.responsePromise, async (client, props) => addRequestID(transform(await this.parseResponse(client, props), props), props.response));\n    }\n    /**\n     * Gets the raw `Response` instance instead of parsing the response\n     * data.\n     *\n     * If you want to parse the response body but still get the `Response`\n     * instance, you can use {@link withResponse()}.\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` or add `\"lib\": [\"DOM\"]`\n     * to your `tsconfig.json`.\n     */\n    asResponse() {\n        return this.responsePromise.then((p) => p.response);\n    }\n    /**\n     * Gets the parsed response data, the raw `Response` instance and the ID of the request,\n     * returned via the X-Request-ID header which is useful for debugging requests and reporting\n     * issues to OpenAI.\n     *\n     * If you just want to get the raw `Response` instance without parsing it,\n     * you can use {@link asResponse()}.\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` or add `\"lib\": [\"DOM\"]`\n     * to your `tsconfig.json`.\n     */\n    async withResponse() {\n        const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\n        return { data, response, request_id: response.headers.get('x-request-id') };\n    }\n    parse() {\n        if (!this.parsedPromise) {\n            this.parsedPromise = this.responsePromise.then((data) => this.parseResponse(__classPrivateFieldGet(this, _APIPromise_client, \"f\"), data));\n        }\n        return this.parsedPromise;\n    }\n    then(onfulfilled, onrejected) {\n        return this.parse().then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return this.parse().catch(onrejected);\n    }\n    finally(onfinally) {\n        return this.parse().finally(onfinally);\n    }\n}\n_APIPromise_client = new WeakMap();\n//# sourceMappingURL=api-promise.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _AbstractPage_client;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"../internal/tslib.mjs\";\nimport { OpenAIError } from \"./error.mjs\";\nimport { defaultParseResponse } from \"../internal/parse.mjs\";\nimport { APIPromise } from \"./api-promise.mjs\";\nimport { maybeObj } from \"../internal/utils/values.mjs\";\nexport class AbstractPage {\n    constructor(client, response, body, options) {\n        _AbstractPage_client.set(this, void 0);\n        __classPrivateFieldSet(this, _AbstractPage_client, client, \"f\");\n        this.options = options;\n        this.response = response;\n        this.body = body;\n    }\n    hasNextPage() {\n        const items = this.getPaginatedItems();\n        if (!items.length)\n            return false;\n        return this.nextPageRequestOptions() != null;\n    }\n    async getNextPage() {\n        const nextOptions = this.nextPageRequestOptions();\n        if (!nextOptions) {\n            throw new OpenAIError('No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.');\n        }\n        return await __classPrivateFieldGet(this, _AbstractPage_client, \"f\").requestAPIList(this.constructor, nextOptions);\n    }\n    async *iterPages() {\n        let page = this;\n        yield page;\n        while (page.hasNextPage()) {\n            page = await page.getNextPage();\n            yield page;\n        }\n    }\n    async *[(_AbstractPage_client = new WeakMap(), Symbol.asyncIterator)]() {\n        for await (const page of this.iterPages()) {\n            for (const item of page.getPaginatedItems()) {\n                yield item;\n            }\n        }\n    }\n}\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nexport class PagePromise extends APIPromise {\n    constructor(client, request, Page) {\n        super(client, request, async (client, props) => new Page(client, props.response, await defaultParseResponse(client, props), props.options));\n    }\n    /**\n     * Allow auto-paginating iteration on an unawaited list call, eg:\n     *\n     *    for await (const item of client.items.list()) {\n     *      console.log(item)\n     *    }\n     */\n    async *[Symbol.asyncIterator]() {\n        const page = await this;\n        for await (const item of page) {\n            yield item;\n        }\n    }\n}\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class Page extends AbstractPage {\n    constructor(client, response, body, options) {\n        super(client, response, body, options);\n        this.data = body.data || [];\n        this.object = body.object;\n    }\n    getPaginatedItems() {\n        return this.data ?? [];\n    }\n    nextPageRequestOptions() {\n        return null;\n    }\n}\nexport class CursorPage extends AbstractPage {\n    constructor(client, response, body, options) {\n        super(client, response, body, options);\n        this.data = body.data || [];\n        this.has_more = body.has_more || false;\n    }\n    getPaginatedItems() {\n        return this.data ?? [];\n    }\n    hasNextPage() {\n        if (this.has_more === false) {\n            return false;\n        }\n        return super.hasNextPage();\n    }\n    nextPageRequestOptions() {\n        const data = this.getPaginatedItems();\n        const id = data[data.length - 1]?.id;\n        if (!id) {\n            return null;\n        }\n        return {\n            ...this.options,\n            query: {\n                ...maybeObj(this.options.query),\n                after: id,\n            },\n        };\n    }\n}\nexport class ConversationCursorPage extends AbstractPage {\n    constructor(client, response, body, options) {\n        super(client, response, body, options);\n        this.data = body.data || [];\n        this.has_more = body.has_more || false;\n        this.last_id = body.last_id || '';\n    }\n    getPaginatedItems() {\n        return this.data ?? [];\n    }\n    hasNextPage() {\n        if (this.has_more === false) {\n            return false;\n        }\n        return super.hasNextPage();\n    }\n    nextPageRequestOptions() {\n        const cursor = this.last_id;\n        if (!cursor) {\n            return null;\n        }\n        return {\n            ...this.options,\n            query: {\n                ...maybeObj(this.options.query),\n                after: cursor,\n            },\n        };\n    }\n}\n//# sourceMappingURL=pagination.mjs.map","import { ReadableStreamFrom } from \"./shims.mjs\";\nexport const checkFileSupport = () => {\n    if (typeof File === 'undefined') {\n        const { process } = globalThis;\n        const isOldNode = typeof process?.versions?.node === 'string' && parseInt(process.versions.node.split('.')) < 20;\n        throw new Error('`File` is not defined as a global, which is required for file uploads.' +\n            (isOldNode ?\n                \" Update to Node 20 LTS or newer, or set `globalThis.File` to `import('node:buffer').File`.\"\n                : ''));\n    }\n};\n/**\n * Construct a `File` instance. This is used to ensure a helpful error is thrown\n * for environments that don't define a global `File` yet.\n */\nexport function makeFile(fileBits, fileName, options) {\n    checkFileSupport();\n    return new File(fileBits, fileName ?? 'unknown_file', options);\n}\nexport function getName(value) {\n    return (((typeof value === 'object' &&\n        value !== null &&\n        (('name' in value && value.name && String(value.name)) ||\n            ('url' in value && value.url && String(value.url)) ||\n            ('filename' in value && value.filename && String(value.filename)) ||\n            ('path' in value && value.path && String(value.path)))) ||\n        '')\n        .split(/[\\\\/]/)\n        .pop() || undefined);\n}\nexport const isAsyncIterable = (value) => value != null && typeof value === 'object' && typeof value[Symbol.asyncIterator] === 'function';\n/**\n * Returns a multipart/form-data request if any part of the given request body contains a File / Blob value.\n * Otherwise returns the request as is.\n */\nexport const maybeMultipartFormRequestOptions = async (opts, fetch) => {\n    if (!hasUploadableValue(opts.body))\n        return opts;\n    return { ...opts, body: await createForm(opts.body, fetch) };\n};\nexport const multipartFormRequestOptions = async (opts, fetch) => {\n    return { ...opts, body: await createForm(opts.body, fetch) };\n};\nconst supportsFormDataMap = /* @__PURE__ */ new WeakMap();\n/**\n * node-fetch doesn't support the global FormData object in recent node versions. Instead of sending\n * properly-encoded form data, it just stringifies the object, resulting in a request body of \"[object FormData]\".\n * This function detects if the fetch function provided supports the global FormData object to avoid\n * confusing error messages later on.\n */\nfunction supportsFormData(fetchObject) {\n    const fetch = typeof fetchObject === 'function' ? fetchObject : fetchObject.fetch;\n    const cached = supportsFormDataMap.get(fetch);\n    if (cached)\n        return cached;\n    const promise = (async () => {\n        try {\n            const FetchResponse = ('Response' in fetch ?\n                fetch.Response\n                : (await fetch('data:,')).constructor);\n            const data = new FormData();\n            if (data.toString() === (await new FetchResponse(data).text())) {\n                return false;\n            }\n            return true;\n        }\n        catch {\n            // avoid false negatives\n            return true;\n        }\n    })();\n    supportsFormDataMap.set(fetch, promise);\n    return promise;\n}\nexport const createForm = async (body, fetch) => {\n    if (!(await supportsFormData(fetch))) {\n        throw new TypeError('The provided fetch function does not support file uploads with the current global FormData class.');\n    }\n    const form = new FormData();\n    await Promise.all(Object.entries(body || {}).map(([key, value]) => addFormValue(form, key, value)));\n    return form;\n};\n// We check for Blob not File because Bun.File doesn't inherit from File,\n// but they both inherit from Blob and have a `name` property at runtime.\nconst isNamedBlob = (value) => value instanceof Blob && 'name' in value;\nconst isUploadable = (value) => typeof value === 'object' &&\n    value !== null &&\n    (value instanceof Response || isAsyncIterable(value) || isNamedBlob(value));\nconst hasUploadableValue = (value) => {\n    if (isUploadable(value))\n        return true;\n    if (Array.isArray(value))\n        return value.some(hasUploadableValue);\n    if (value && typeof value === 'object') {\n        for (const k in value) {\n            if (hasUploadableValue(value[k]))\n                return true;\n        }\n    }\n    return false;\n};\nconst addFormValue = async (form, key, value) => {\n    if (value === undefined)\n        return;\n    if (value == null) {\n        throw new TypeError(`Received null for \"${key}\"; to pass null in FormData, you must use the string 'null'`);\n    }\n    // TODO: make nested formats configurable\n    if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        form.append(key, String(value));\n    }\n    else if (value instanceof Response) {\n        form.append(key, makeFile([await value.blob()], getName(value)));\n    }\n    else if (isAsyncIterable(value)) {\n        form.append(key, makeFile([await new Response(ReadableStreamFrom(value)).blob()], getName(value)));\n    }\n    else if (isNamedBlob(value)) {\n        form.append(key, value, getName(value));\n    }\n    else if (Array.isArray(value)) {\n        await Promise.all(value.map((entry) => addFormValue(form, key + '[]', entry)));\n    }\n    else if (typeof value === 'object') {\n        await Promise.all(Object.entries(value).map(([name, prop]) => addFormValue(form, `${key}[${name}]`, prop)));\n    }\n    else {\n        throw new TypeError(`Invalid value given to form, expected a string, number, boolean, object, Array, File or Blob but got ${value} instead`);\n    }\n};\n//# sourceMappingURL=uploads.mjs.map","import { getName, makeFile, isAsyncIterable } from \"./uploads.mjs\";\nimport { checkFileSupport } from \"./uploads.mjs\";\n/**\n * This check adds the arrayBuffer() method type because it is available and used at runtime\n */\nconst isBlobLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.size === 'number' &&\n    typeof value.type === 'string' &&\n    typeof value.text === 'function' &&\n    typeof value.slice === 'function' &&\n    typeof value.arrayBuffer === 'function';\n/**\n * This check adds the arrayBuffer() method type because it is available and used at runtime\n */\nconst isFileLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.name === 'string' &&\n    typeof value.lastModified === 'number' &&\n    isBlobLike(value);\nconst isResponseLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.url === 'string' &&\n    typeof value.blob === 'function';\n/**\n * Helper for creating a {@link File} to pass to an SDK upload method from a variety of different data formats\n * @param value the raw content of the file.  Can be an {@link Uploadable}, {@link BlobLikePart}, or {@link AsyncIterable} of {@link BlobLikePart}s\n * @param {string=} name the name of the file. If omitted, toFile will try to determine a file name from bits if possible\n * @param {Object=} options additional properties\n * @param {string=} options.type the MIME type of the content\n * @param {number=} options.lastModified the last modified timestamp\n * @returns a {@link File} with the given properties\n */\nexport async function toFile(value, name, options) {\n    checkFileSupport();\n    // If it's a promise, resolve it.\n    value = await value;\n    // If we've been given a `File` we don't need to do anything\n    if (isFileLike(value)) {\n        if (value instanceof File) {\n            return value;\n        }\n        return makeFile([await value.arrayBuffer()], value.name);\n    }\n    if (isResponseLike(value)) {\n        const blob = await value.blob();\n        name || (name = new URL(value.url).pathname.split(/[\\\\/]/).pop());\n        return makeFile(await getBytes(blob), name, options);\n    }\n    const parts = await getBytes(value);\n    name || (name = getName(value));\n    if (!options?.type) {\n        const type = parts.find((part) => typeof part === 'object' && 'type' in part && part.type);\n        if (typeof type === 'string') {\n            options = { ...options, type };\n        }\n    }\n    return makeFile(parts, name, options);\n}\nasync function getBytes(value) {\n    let parts = [];\n    if (typeof value === 'string' ||\n        ArrayBuffer.isView(value) || // includes Uint8Array, Buffer, etc.\n        value instanceof ArrayBuffer) {\n        parts.push(value);\n    }\n    else if (isBlobLike(value)) {\n        parts.push(value instanceof Blob ? value : await value.arrayBuffer());\n    }\n    else if (isAsyncIterable(value) // includes Readable, ReadableStream, etc.\n    ) {\n        for await (const chunk of value) {\n            parts.push(...(await getBytes(chunk))); // TODO, consider validating?\n        }\n    }\n    else {\n        const constructor = value?.constructor?.name;\n        throw new Error(`Unexpected data type: ${typeof value}${constructor ? `; constructor: ${constructor}` : ''}${propsForError(value)}`);\n    }\n    return parts;\n}\nfunction propsForError(value) {\n    if (typeof value !== 'object' || value === null)\n        return '';\n    const props = Object.getOwnPropertyNames(value);\n    return `; props: [${props.map((p) => `\"${p}\"`).join(', ')}]`;\n}\n//# sourceMappingURL=to-file.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nexport class APIResource {\n    constructor(client) {\n        this._client = client;\n    }\n}\n//# sourceMappingURL=resource.mjs.map","import { OpenAIError } from \"../../core/error.mjs\";\n/**\n * Percent-encode everything that isn't safe to have in a path without encoding safe chars.\n *\n * Taken from https://datatracker.ietf.org/doc/html/rfc3986#section-3.3:\n * > unreserved  = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n * > sub-delims  = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\" / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n * > pchar       = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n */\nexport function encodeURIPath(str) {\n    return str.replace(/[^A-Za-z0-9\\-._~!$&'()*+,;=:@]+/g, encodeURIComponent);\n}\nconst EMPTY = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.create(null));\nexport const createPathTagFunction = (pathEncoder = encodeURIPath) => function path(statics, ...params) {\n    // If there are no params, no processing is needed.\n    if (statics.length === 1)\n        return statics[0];\n    let postPath = false;\n    const invalidSegments = [];\n    const path = statics.reduce((previousValue, currentValue, index) => {\n        if (/[?#]/.test(currentValue)) {\n            postPath = true;\n        }\n        const value = params[index];\n        let encoded = (postPath ? encodeURIComponent : pathEncoder)('' + value);\n        if (index !== params.length &&\n            (value == null ||\n                (typeof value === 'object' &&\n                    // handle values from other realms\n                    value.toString ===\n                        Object.getPrototypeOf(Object.getPrototypeOf(value.hasOwnProperty ?? EMPTY) ?? EMPTY)\n                            ?.toString))) {\n            encoded = value + '';\n            invalidSegments.push({\n                start: previousValue.length + currentValue.length,\n                length: encoded.length,\n                error: `Value of type ${Object.prototype.toString\n                    .call(value)\n                    .slice(8, -1)} is not a valid path parameter`,\n            });\n        }\n        return previousValue + currentValue + (index === params.length ? '' : encoded);\n    }, '');\n    const pathOnly = path.split(/[?#]/, 1)[0];\n    const invalidSegmentPattern = /(?<=^|\\/)(?:\\.|%2e){1,2}(?=\\/|$)/gi;\n    let match;\n    // Find all invalid segments\n    while ((match = invalidSegmentPattern.exec(pathOnly)) !== null) {\n        invalidSegments.push({\n            start: match.index,\n            length: match[0].length,\n            error: `Value \"${match[0]}\" can\\'t be safely passed as a path parameter`,\n        });\n    }\n    invalidSegments.sort((a, b) => a.start - b.start);\n    if (invalidSegments.length > 0) {\n        let lastEnd = 0;\n        const underline = invalidSegments.reduce((acc, segment) => {\n            const spaces = ' '.repeat(segment.start - lastEnd);\n            const arrows = '^'.repeat(segment.length);\n            lastEnd = segment.start + segment.length;\n            return acc + spaces + arrows;\n        }, '');\n        throw new OpenAIError(`Path parameters result in path with invalid segments:\\n${invalidSegments\n            .map((e) => e.error)\n            .join('\\n')}\\n${path}\\n${underline}`);\n    }\n    return path;\n};\n/**\n * URI-encodes path params and ensures no unsafe /./ or /../ path segments are introduced.\n */\nexport const path = /* @__PURE__ */ createPathTagFunction(encodeURIPath);\n//# sourceMappingURL=path.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class Messages extends APIResource {\n    /**\n     * Get the messages in a stored chat completion. Only Chat Completions that have\n     * been created with the `store` parameter set to `true` will be returned.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const chatCompletionStoreMessage of client.chat.completions.messages.list(\n     *   'completion_id',\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */\n    list(completionID, query = {}, options) {\n        return this._client.getAPIList(path `/chat/completions/${completionID}/messages`, (CursorPage), { query, ...options });\n    }\n}\n//# sourceMappingURL=messages.mjs.map","import { ContentFilterFinishReasonError, LengthFinishReasonError, OpenAIError } from \"../error.mjs\";\nexport function isChatCompletionFunctionTool(tool) {\n    return tool !== undefined && 'function' in tool && tool.function !== undefined;\n}\nexport function makeParseableResponseFormat(response_format, parser) {\n    const obj = { ...response_format };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-response-format',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function makeParseableTextFormat(response_format, parser) {\n    const obj = { ...response_format };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-response-format',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function isAutoParsableResponseFormat(response_format) {\n    return response_format?.['$brand'] === 'auto-parseable-response-format';\n}\nexport function makeParseableTool(tool, { parser, callback, }) {\n    const obj = { ...tool };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-tool',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n        $callback: {\n            value: callback,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function isAutoParsableTool(tool) {\n    return tool?.['$brand'] === 'auto-parseable-tool';\n}\nexport function maybeParseChatCompletion(completion, params) {\n    if (!params || !hasAutoParseableInput(params)) {\n        return {\n            ...completion,\n            choices: completion.choices.map((choice) => {\n                assertToolCallsAreChatCompletionFunctionToolCalls(choice.message.tool_calls);\n                return {\n                    ...choice,\n                    message: {\n                        ...choice.message,\n                        parsed: null,\n                        ...(choice.message.tool_calls ?\n                            {\n                                tool_calls: choice.message.tool_calls,\n                            }\n                            : undefined),\n                    },\n                };\n            }),\n        };\n    }\n    return parseChatCompletion(completion, params);\n}\nexport function parseChatCompletion(completion, params) {\n    const choices = completion.choices.map((choice) => {\n        if (choice.finish_reason === 'length') {\n            throw new LengthFinishReasonError();\n        }\n        if (choice.finish_reason === 'content_filter') {\n            throw new ContentFilterFinishReasonError();\n        }\n        assertToolCallsAreChatCompletionFunctionToolCalls(choice.message.tool_calls);\n        return {\n            ...choice,\n            message: {\n                ...choice.message,\n                ...(choice.message.tool_calls ?\n                    {\n                        tool_calls: choice.message.tool_calls?.map((toolCall) => parseToolCall(params, toolCall)) ?? undefined,\n                    }\n                    : undefined),\n                parsed: choice.message.content && !choice.message.refusal ?\n                    parseResponseFormat(params, choice.message.content)\n                    : null,\n            },\n        };\n    });\n    return { ...completion, choices };\n}\nfunction parseResponseFormat(params, content) {\n    if (params.response_format?.type !== 'json_schema') {\n        return null;\n    }\n    if (params.response_format?.type === 'json_schema') {\n        if ('$parseRaw' in params.response_format) {\n            const response_format = params.response_format;\n            return response_format.$parseRaw(content);\n        }\n        return JSON.parse(content);\n    }\n    return null;\n}\nfunction parseToolCall(params, toolCall) {\n    const inputTool = params.tools?.find((inputTool) => isChatCompletionFunctionTool(inputTool) && inputTool.function?.name === toolCall.function.name); // TS doesn't narrow based on isChatCompletionTool\n    return {\n        ...toolCall,\n        function: {\n            ...toolCall.function,\n            parsed_arguments: isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCall.function.arguments)\n                : inputTool?.function.strict ? JSON.parse(toolCall.function.arguments)\n                    : null,\n        },\n    };\n}\nexport function shouldParseToolCall(params, toolCall) {\n    if (!params || !('tools' in params) || !params.tools) {\n        return false;\n    }\n    const inputTool = params.tools?.find((inputTool) => isChatCompletionFunctionTool(inputTool) && inputTool.function?.name === toolCall.function.name);\n    return (isChatCompletionFunctionTool(inputTool) &&\n        (isAutoParsableTool(inputTool) || inputTool?.function.strict || false));\n}\nexport function hasAutoParseableInput(params) {\n    if (isAutoParsableResponseFormat(params.response_format)) {\n        return true;\n    }\n    return (params.tools?.some((t) => isAutoParsableTool(t) || (t.type === 'function' && t.function.strict === true)) ?? false);\n}\nexport function assertToolCallsAreChatCompletionFunctionToolCalls(toolCalls) {\n    for (const toolCall of toolCalls || []) {\n        if (toolCall.type !== 'function') {\n            throw new OpenAIError(`Currently only \\`function\\` tool calls are supported; Received \\`${toolCall.type}\\``);\n        }\n    }\n}\nexport function validateInputTools(tools) {\n    for (const tool of tools ?? []) {\n        if (tool.type !== 'function') {\n            throw new OpenAIError(`Currently only \\`function\\` tool types support auto-parsing; Received \\`${tool.type}\\``);\n        }\n        if (tool.function.strict !== true) {\n            throw new OpenAIError(`The \\`${tool.function.name}\\` tool is not marked with \\`strict: true\\`. Only strict function tools can be auto-parsed`);\n        }\n    }\n}\n//# sourceMappingURL=parser.mjs.map","export const isAssistantMessage = (message) => {\n    return message?.role === 'assistant';\n};\nexport const isToolMessage = (message) => {\n    return message?.role === 'tool';\n};\nexport function isPresent(obj) {\n    return obj != null;\n}\n//# sourceMappingURL=chatCompletionUtils.mjs.map","var _EventStream_instances, _EventStream_connectedPromise, _EventStream_resolveConnectedPromise, _EventStream_rejectConnectedPromise, _EventStream_endPromise, _EventStream_resolveEndPromise, _EventStream_rejectEndPromise, _EventStream_listeners, _EventStream_ended, _EventStream_errored, _EventStream_aborted, _EventStream_catchingPromiseCreated, _EventStream_handleError;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"../internal/tslib.mjs\";\nimport { APIUserAbortError, OpenAIError } from \"../error.mjs\";\nexport class EventStream {\n    constructor() {\n        _EventStream_instances.add(this);\n        this.controller = new AbortController();\n        _EventStream_connectedPromise.set(this, void 0);\n        _EventStream_resolveConnectedPromise.set(this, () => { });\n        _EventStream_rejectConnectedPromise.set(this, () => { });\n        _EventStream_endPromise.set(this, void 0);\n        _EventStream_resolveEndPromise.set(this, () => { });\n        _EventStream_rejectEndPromise.set(this, () => { });\n        _EventStream_listeners.set(this, {});\n        _EventStream_ended.set(this, false);\n        _EventStream_errored.set(this, false);\n        _EventStream_aborted.set(this, false);\n        _EventStream_catchingPromiseCreated.set(this, false);\n        __classPrivateFieldSet(this, _EventStream_connectedPromise, new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _EventStream_resolveConnectedPromise, resolve, \"f\");\n            __classPrivateFieldSet(this, _EventStream_rejectConnectedPromise, reject, \"f\");\n        }), \"f\");\n        __classPrivateFieldSet(this, _EventStream_endPromise, new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _EventStream_resolveEndPromise, resolve, \"f\");\n            __classPrivateFieldSet(this, _EventStream_rejectEndPromise, reject, \"f\");\n        }), \"f\");\n        // Don't let these promises cause unhandled rejection errors.\n        // we will manually cause an unhandled rejection error later\n        // if the user hasn't registered any error listener or called\n        // any promise-returning method.\n        __classPrivateFieldGet(this, _EventStream_connectedPromise, \"f\").catch(() => { });\n        __classPrivateFieldGet(this, _EventStream_endPromise, \"f\").catch(() => { });\n    }\n    _run(executor) {\n        // Unfortunately if we call `executor()` immediately we get runtime errors about\n        // references to `this` before the `super()` constructor call returns.\n        setTimeout(() => {\n            executor().then(() => {\n                this._emitFinal();\n                this._emit('end');\n            }, __classPrivateFieldGet(this, _EventStream_instances, \"m\", _EventStream_handleError).bind(this));\n        }, 0);\n    }\n    _connected() {\n        if (this.ended)\n            return;\n        __classPrivateFieldGet(this, _EventStream_resolveConnectedPromise, \"f\").call(this);\n        this._emit('connect');\n    }\n    get ended() {\n        return __classPrivateFieldGet(this, _EventStream_ended, \"f\");\n    }\n    get errored() {\n        return __classPrivateFieldGet(this, _EventStream_errored, \"f\");\n    }\n    get aborted() {\n        return __classPrivateFieldGet(this, _EventStream_aborted, \"f\");\n    }\n    abort() {\n        this.controller.abort();\n    }\n    /**\n     * Adds the listener function to the end of the listeners array for the event.\n     * No checks are made to see if the listener has already been added. Multiple calls passing\n     * the same combination of event and listener will result in the listener being added, and\n     * called, multiple times.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    on(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] || (__classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] = []);\n        listeners.push({ listener });\n        return this;\n    }\n    /**\n     * Removes the specified listener from the listener array for the event.\n     * off() will remove, at most, one instance of a listener from the listener array. If any single\n     * listener has been added multiple times to the listener array for the specified event, then\n     * off() must be called multiple times to remove each instance.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    off(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event];\n        if (!listeners)\n            return this;\n        const index = listeners.findIndex((l) => l.listener === listener);\n        if (index >= 0)\n            listeners.splice(index, 1);\n        return this;\n    }\n    /**\n     * Adds a one-time listener function for the event. The next time the event is triggered,\n     * this listener is removed and then invoked.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    once(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] || (__classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] = []);\n        listeners.push({ listener, once: true });\n        return this;\n    }\n    /**\n     * This is similar to `.once()`, but returns a Promise that resolves the next time\n     * the event is triggered, instead of calling a listener callback.\n     * @returns a Promise that resolves the next time given event is triggered,\n     * or rejects if an error is emitted.  (If you request the 'error' event,\n     * returns a promise that resolves with the error).\n     *\n     * Example:\n     *\n     *   const message = await stream.emitted('message') // rejects if the stream errors\n     */\n    emitted(event) {\n        return new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _EventStream_catchingPromiseCreated, true, \"f\");\n            if (event !== 'error')\n                this.once('error', reject);\n            this.once(event, resolve);\n        });\n    }\n    async done() {\n        __classPrivateFieldSet(this, _EventStream_catchingPromiseCreated, true, \"f\");\n        await __classPrivateFieldGet(this, _EventStream_endPromise, \"f\");\n    }\n    _emit(event, ...args) {\n        // make sure we don't emit any events after end\n        if (__classPrivateFieldGet(this, _EventStream_ended, \"f\")) {\n            return;\n        }\n        if (event === 'end') {\n            __classPrivateFieldSet(this, _EventStream_ended, true, \"f\");\n            __classPrivateFieldGet(this, _EventStream_resolveEndPromise, \"f\").call(this);\n        }\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event];\n        if (listeners) {\n            __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] = listeners.filter((l) => !l.once);\n            listeners.forEach(({ listener }) => listener(...args));\n        }\n        if (event === 'abort') {\n            const error = args[0];\n            if (!__classPrivateFieldGet(this, _EventStream_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                Promise.reject(error);\n            }\n            __classPrivateFieldGet(this, _EventStream_rejectConnectedPromise, \"f\").call(this, error);\n            __classPrivateFieldGet(this, _EventStream_rejectEndPromise, \"f\").call(this, error);\n            this._emit('end');\n            return;\n        }\n        if (event === 'error') {\n            // NOTE: _emit('error', error) should only be called from #handleError().\n            const error = args[0];\n            if (!__classPrivateFieldGet(this, _EventStream_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                // Trigger an unhandled rejection if the user hasn't registered any error handlers.\n                // If you are seeing stack traces here, make sure to handle errors via either:\n                // - runner.on('error', () => ...)\n                // - await runner.done()\n                // - await runner.finalChatCompletion()\n                // - etc.\n                Promise.reject(error);\n            }\n            __classPrivateFieldGet(this, _EventStream_rejectConnectedPromise, \"f\").call(this, error);\n            __classPrivateFieldGet(this, _EventStream_rejectEndPromise, \"f\").call(this, error);\n            this._emit('end');\n        }\n    }\n    _emitFinal() { }\n}\n_EventStream_connectedPromise = new WeakMap(), _EventStream_resolveConnectedPromise = new WeakMap(), _EventStream_rejectConnectedPromise = new WeakMap(), _EventStream_endPromise = new WeakMap(), _EventStream_resolveEndPromise = new WeakMap(), _EventStream_rejectEndPromise = new WeakMap(), _EventStream_listeners = new WeakMap(), _EventStream_ended = new WeakMap(), _EventStream_errored = new WeakMap(), _EventStream_aborted = new WeakMap(), _EventStream_catchingPromiseCreated = new WeakMap(), _EventStream_instances = new WeakSet(), _EventStream_handleError = function _EventStream_handleError(error) {\n    __classPrivateFieldSet(this, _EventStream_errored, true, \"f\");\n    if (error instanceof Error && error.name === 'AbortError') {\n        error = new APIUserAbortError();\n    }\n    if (error instanceof APIUserAbortError) {\n        __classPrivateFieldSet(this, _EventStream_aborted, true, \"f\");\n        return this._emit('abort', error);\n    }\n    if (error instanceof OpenAIError) {\n        return this._emit('error', error);\n    }\n    if (error instanceof Error) {\n        const openAIError = new OpenAIError(error.message);\n        // @ts-ignore\n        openAIError.cause = error;\n        return this._emit('error', openAIError);\n    }\n    return this._emit('error', new OpenAIError(String(error)));\n};\n//# sourceMappingURL=EventStream.mjs.map","export function isRunnableFunctionWithParse(fn) {\n    return typeof fn.parse === 'function';\n}\n/**\n * This is helper class for passing a `function` and `parse` where the `function`\n * argument type matches the `parse` return type.\n */\nexport class ParsingToolFunction {\n    constructor(input) {\n        this.type = 'function';\n        this.function = input;\n    }\n}\n//# sourceMappingURL=RunnableFunction.mjs.map","var _AbstractChatCompletionRunner_instances, _AbstractChatCompletionRunner_getFinalContent, _AbstractChatCompletionRunner_getFinalMessage, _AbstractChatCompletionRunner_getFinalFunctionToolCall, _AbstractChatCompletionRunner_getFinalFunctionToolCallResult, _AbstractChatCompletionRunner_calculateTotalUsage, _AbstractChatCompletionRunner_validateParams, _AbstractChatCompletionRunner_stringifyFunctionCallResult;\nimport { __classPrivateFieldGet } from \"../internal/tslib.mjs\";\nimport { OpenAIError } from \"../error.mjs\";\nimport { isAutoParsableTool, parseChatCompletion } from \"../lib/parser.mjs\";\nimport { isAssistantMessage, isToolMessage } from \"./chatCompletionUtils.mjs\";\nimport { EventStream } from \"./EventStream.mjs\";\nimport { isRunnableFunctionWithParse, } from \"./RunnableFunction.mjs\";\nconst DEFAULT_MAX_CHAT_COMPLETIONS = 10;\nexport class AbstractChatCompletionRunner extends EventStream {\n    constructor() {\n        super(...arguments);\n        _AbstractChatCompletionRunner_instances.add(this);\n        this._chatCompletions = [];\n        this.messages = [];\n    }\n    _addChatCompletion(chatCompletion) {\n        this._chatCompletions.push(chatCompletion);\n        this._emit('chatCompletion', chatCompletion);\n        const message = chatCompletion.choices[0]?.message;\n        if (message)\n            this._addMessage(message);\n        return chatCompletion;\n    }\n    _addMessage(message, emit = true) {\n        if (!('content' in message))\n            message.content = null;\n        this.messages.push(message);\n        if (emit) {\n            this._emit('message', message);\n            if (isToolMessage(message) && message.content) {\n                // Note, this assumes that {role: 'tool', content: …} is always the result of a call of tool of type=function.\n                this._emit('functionToolCallResult', message.content);\n            }\n            else if (isAssistantMessage(message) && message.tool_calls) {\n                for (const tool_call of message.tool_calls) {\n                    if (tool_call.type === 'function') {\n                        this._emit('functionToolCall', tool_call.function);\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * @returns a promise that resolves with the final ChatCompletion, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletion.\n     */\n    async finalChatCompletion() {\n        await this.done();\n        const completion = this._chatCompletions[this._chatCompletions.length - 1];\n        if (!completion)\n            throw new OpenAIError('stream ended without producing a ChatCompletion');\n        return completion;\n    }\n    /**\n     * @returns a promise that resolves with the content of the final ChatCompletionMessage, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalContent() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalContent).call(this);\n    }\n    /**\n     * @returns a promise that resolves with the the final assistant ChatCompletionMessage response,\n     * or rejects if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalMessage() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this);\n    }\n    /**\n     * @returns a promise that resolves with the content of the final FunctionCall, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalFunctionToolCall() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionToolCall).call(this);\n    }\n    async finalFunctionToolCallResult() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionToolCallResult).call(this);\n    }\n    async totalUsage() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_calculateTotalUsage).call(this);\n    }\n    allChatCompletions() {\n        return [...this._chatCompletions];\n    }\n    _emitFinal() {\n        const completion = this._chatCompletions[this._chatCompletions.length - 1];\n        if (completion)\n            this._emit('finalChatCompletion', completion);\n        const finalMessage = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this);\n        if (finalMessage)\n            this._emit('finalMessage', finalMessage);\n        const finalContent = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalContent).call(this);\n        if (finalContent)\n            this._emit('finalContent', finalContent);\n        const finalFunctionCall = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionToolCall).call(this);\n        if (finalFunctionCall)\n            this._emit('finalFunctionToolCall', finalFunctionCall);\n        const finalFunctionCallResult = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionToolCallResult).call(this);\n        if (finalFunctionCallResult != null)\n            this._emit('finalFunctionToolCallResult', finalFunctionCallResult);\n        if (this._chatCompletions.some((c) => c.usage)) {\n            this._emit('totalUsage', __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_calculateTotalUsage).call(this));\n        }\n    }\n    async _createChatCompletion(client, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_validateParams).call(this, params);\n        const chatCompletion = await client.chat.completions.create({ ...params, stream: false }, { ...options, signal: this.controller.signal });\n        this._connected();\n        return this._addChatCompletion(parseChatCompletion(chatCompletion, params));\n    }\n    async _runChatCompletion(client, params, options) {\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        return await this._createChatCompletion(client, params, options);\n    }\n    async _runTools(client, params, options) {\n        const role = 'tool';\n        const { tool_choice = 'auto', stream, ...restParams } = params;\n        const singleFunctionToCall = typeof tool_choice !== 'string' && tool_choice.type === 'function' && tool_choice?.function?.name;\n        const { maxChatCompletions = DEFAULT_MAX_CHAT_COMPLETIONS } = options || {};\n        // TODO(someday): clean this logic up\n        const inputTools = params.tools.map((tool) => {\n            if (isAutoParsableTool(tool)) {\n                if (!tool.$callback) {\n                    throw new OpenAIError('Tool given to `.runTools()` that does not have an associated function');\n                }\n                return {\n                    type: 'function',\n                    function: {\n                        function: tool.$callback,\n                        name: tool.function.name,\n                        description: tool.function.description || '',\n                        parameters: tool.function.parameters,\n                        parse: tool.$parseRaw,\n                        strict: true,\n                    },\n                };\n            }\n            return tool;\n        });\n        const functionsByName = {};\n        for (const f of inputTools) {\n            if (f.type === 'function') {\n                functionsByName[f.function.name || f.function.function.name] = f.function;\n            }\n        }\n        const tools = 'tools' in params ?\n            inputTools.map((t) => t.type === 'function' ?\n                {\n                    type: 'function',\n                    function: {\n                        name: t.function.name || t.function.function.name,\n                        parameters: t.function.parameters,\n                        description: t.function.description,\n                        strict: t.function.strict,\n                    },\n                }\n                : t)\n            : undefined;\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        for (let i = 0; i < maxChatCompletions; ++i) {\n            const chatCompletion = await this._createChatCompletion(client, {\n                ...restParams,\n                tool_choice,\n                tools,\n                messages: [...this.messages],\n            }, options);\n            const message = chatCompletion.choices[0]?.message;\n            if (!message) {\n                throw new OpenAIError(`missing message in ChatCompletion response`);\n            }\n            if (!message.tool_calls?.length) {\n                return;\n            }\n            for (const tool_call of message.tool_calls) {\n                if (tool_call.type !== 'function')\n                    continue;\n                const tool_call_id = tool_call.id;\n                const { name, arguments: args } = tool_call.function;\n                const fn = functionsByName[name];\n                if (!fn) {\n                    const content = `Invalid tool_call: ${JSON.stringify(name)}. Available options are: ${Object.keys(functionsByName)\n                        .map((name) => JSON.stringify(name))\n                        .join(', ')}. Please try again`;\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                else if (singleFunctionToCall && singleFunctionToCall !== name) {\n                    const content = `Invalid tool_call: ${JSON.stringify(name)}. ${JSON.stringify(singleFunctionToCall)} requested. Please try again`;\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                let parsed;\n                try {\n                    parsed = isRunnableFunctionWithParse(fn) ? await fn.parse(args) : args;\n                }\n                catch (error) {\n                    const content = error instanceof Error ? error.message : String(error);\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                // @ts-expect-error it can't rule out `never` type.\n                const rawContent = await fn.function(parsed, this);\n                const content = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_stringifyFunctionCallResult).call(this, rawContent);\n                this._addMessage({ role, tool_call_id, content });\n                if (singleFunctionToCall) {\n                    return;\n                }\n            }\n        }\n        return;\n    }\n}\n_AbstractChatCompletionRunner_instances = new WeakSet(), _AbstractChatCompletionRunner_getFinalContent = function _AbstractChatCompletionRunner_getFinalContent() {\n    return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this).content ?? null;\n}, _AbstractChatCompletionRunner_getFinalMessage = function _AbstractChatCompletionRunner_getFinalMessage() {\n    let i = this.messages.length;\n    while (i-- > 0) {\n        const message = this.messages[i];\n        if (isAssistantMessage(message)) {\n            // TODO: support audio here\n            const ret = {\n                ...message,\n                content: message.content ?? null,\n                refusal: message.refusal ?? null,\n            };\n            return ret;\n        }\n    }\n    throw new OpenAIError('stream ended without producing a ChatCompletionMessage with role=assistant');\n}, _AbstractChatCompletionRunner_getFinalFunctionToolCall = function _AbstractChatCompletionRunner_getFinalFunctionToolCall() {\n    for (let i = this.messages.length - 1; i >= 0; i--) {\n        const message = this.messages[i];\n        if (isAssistantMessage(message) && message?.tool_calls?.length) {\n            return message.tool_calls.filter((x) => x.type === 'function').at(-1)?.function;\n        }\n    }\n    return;\n}, _AbstractChatCompletionRunner_getFinalFunctionToolCallResult = function _AbstractChatCompletionRunner_getFinalFunctionToolCallResult() {\n    for (let i = this.messages.length - 1; i >= 0; i--) {\n        const message = this.messages[i];\n        if (isToolMessage(message) &&\n            message.content != null &&\n            typeof message.content === 'string' &&\n            this.messages.some((x) => x.role === 'assistant' &&\n                x.tool_calls?.some((y) => y.type === 'function' && y.id === message.tool_call_id))) {\n            return message.content;\n        }\n    }\n    return;\n}, _AbstractChatCompletionRunner_calculateTotalUsage = function _AbstractChatCompletionRunner_calculateTotalUsage() {\n    const total = {\n        completion_tokens: 0,\n        prompt_tokens: 0,\n        total_tokens: 0,\n    };\n    for (const { usage } of this._chatCompletions) {\n        if (usage) {\n            total.completion_tokens += usage.completion_tokens;\n            total.prompt_tokens += usage.prompt_tokens;\n            total.total_tokens += usage.total_tokens;\n        }\n    }\n    return total;\n}, _AbstractChatCompletionRunner_validateParams = function _AbstractChatCompletionRunner_validateParams(params) {\n    if (params.n != null && params.n > 1) {\n        throw new OpenAIError('ChatCompletion convenience helpers only support n=1 at this time. To use n>1, please use chat.completions.create() directly.');\n    }\n}, _AbstractChatCompletionRunner_stringifyFunctionCallResult = function _AbstractChatCompletionRunner_stringifyFunctionCallResult(rawContent) {\n    return (typeof rawContent === 'string' ? rawContent\n        : rawContent === undefined ? 'undefined'\n            : JSON.stringify(rawContent));\n};\n//# sourceMappingURL=AbstractChatCompletionRunner.mjs.map","import { AbstractChatCompletionRunner, } from \"./AbstractChatCompletionRunner.mjs\";\nimport { isAssistantMessage } from \"./chatCompletionUtils.mjs\";\nexport class ChatCompletionRunner extends AbstractChatCompletionRunner {\n    static runTools(client, params, options) {\n        const runner = new ChatCompletionRunner();\n        const opts = {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runTools' },\n        };\n        runner._run(() => runner._runTools(client, params, opts));\n        return runner;\n    }\n    _addMessage(message, emit = true) {\n        super._addMessage(message, emit);\n        if (isAssistantMessage(message) && message.content) {\n            this._emit('content', message.content);\n        }\n    }\n}\n//# sourceMappingURL=ChatCompletionRunner.mjs.map","const STR = 0b000000001;\nconst NUM = 0b000000010;\nconst ARR = 0b000000100;\nconst OBJ = 0b000001000;\nconst NULL = 0b000010000;\nconst BOOL = 0b000100000;\nconst NAN = 0b001000000;\nconst INFINITY = 0b010000000;\nconst MINUS_INFINITY = 0b100000000;\nconst INF = INFINITY | MINUS_INFINITY;\nconst SPECIAL = NULL | BOOL | INF | NAN;\nconst ATOM = STR | NUM | SPECIAL;\nconst COLLECTION = ARR | OBJ;\nconst ALL = ATOM | COLLECTION;\nconst Allow = {\n    STR,\n    NUM,\n    ARR,\n    OBJ,\n    NULL,\n    BOOL,\n    NAN,\n    INFINITY,\n    MINUS_INFINITY,\n    INF,\n    SPECIAL,\n    ATOM,\n    COLLECTION,\n    ALL,\n};\n// The JSON string segment was unable to be parsed completely\nclass PartialJSON extends Error {\n}\nclass MalformedJSON extends Error {\n}\n/**\n * Parse incomplete JSON\n * @param {string} jsonString Partial JSON to be parsed\n * @param {number} allowPartial Specify what types are allowed to be partial, see {@link Allow} for details\n * @returns The parsed JSON\n * @throws {PartialJSON} If the JSON is incomplete (related to the `allow` parameter)\n * @throws {MalformedJSON} If the JSON is malformed\n */\nfunction parseJSON(jsonString, allowPartial = Allow.ALL) {\n    if (typeof jsonString !== 'string') {\n        throw new TypeError(`expecting str, got ${typeof jsonString}`);\n    }\n    if (!jsonString.trim()) {\n        throw new Error(`${jsonString} is empty`);\n    }\n    return _parseJSON(jsonString.trim(), allowPartial);\n}\nconst _parseJSON = (jsonString, allow) => {\n    const length = jsonString.length;\n    let index = 0;\n    const markPartialJSON = (msg) => {\n        throw new PartialJSON(`${msg} at position ${index}`);\n    };\n    const throwMalformedError = (msg) => {\n        throw new MalformedJSON(`${msg} at position ${index}`);\n    };\n    const parseAny = () => {\n        skipBlank();\n        if (index >= length)\n            markPartialJSON('Unexpected end of input');\n        if (jsonString[index] === '\"')\n            return parseStr();\n        if (jsonString[index] === '{')\n            return parseObj();\n        if (jsonString[index] === '[')\n            return parseArr();\n        if (jsonString.substring(index, index + 4) === 'null' ||\n            (Allow.NULL & allow && length - index < 4 && 'null'.startsWith(jsonString.substring(index)))) {\n            index += 4;\n            return null;\n        }\n        if (jsonString.substring(index, index + 4) === 'true' ||\n            (Allow.BOOL & allow && length - index < 4 && 'true'.startsWith(jsonString.substring(index)))) {\n            index += 4;\n            return true;\n        }\n        if (jsonString.substring(index, index + 5) === 'false' ||\n            (Allow.BOOL & allow && length - index < 5 && 'false'.startsWith(jsonString.substring(index)))) {\n            index += 5;\n            return false;\n        }\n        if (jsonString.substring(index, index + 8) === 'Infinity' ||\n            (Allow.INFINITY & allow && length - index < 8 && 'Infinity'.startsWith(jsonString.substring(index)))) {\n            index += 8;\n            return Infinity;\n        }\n        if (jsonString.substring(index, index + 9) === '-Infinity' ||\n            (Allow.MINUS_INFINITY & allow &&\n                1 < length - index &&\n                length - index < 9 &&\n                '-Infinity'.startsWith(jsonString.substring(index)))) {\n            index += 9;\n            return -Infinity;\n        }\n        if (jsonString.substring(index, index + 3) === 'NaN' ||\n            (Allow.NAN & allow && length - index < 3 && 'NaN'.startsWith(jsonString.substring(index)))) {\n            index += 3;\n            return NaN;\n        }\n        return parseNum();\n    };\n    const parseStr = () => {\n        const start = index;\n        let escape = false;\n        index++; // skip initial quote\n        while (index < length && (jsonString[index] !== '\"' || (escape && jsonString[index - 1] === '\\\\'))) {\n            escape = jsonString[index] === '\\\\' ? !escape : false;\n            index++;\n        }\n        if (jsonString.charAt(index) == '\"') {\n            try {\n                return JSON.parse(jsonString.substring(start, ++index - Number(escape)));\n            }\n            catch (e) {\n                throwMalformedError(String(e));\n            }\n        }\n        else if (Allow.STR & allow) {\n            try {\n                return JSON.parse(jsonString.substring(start, index - Number(escape)) + '\"');\n            }\n            catch (e) {\n                // SyntaxError: Invalid escape sequence\n                return JSON.parse(jsonString.substring(start, jsonString.lastIndexOf('\\\\')) + '\"');\n            }\n        }\n        markPartialJSON('Unterminated string literal');\n    };\n    const parseObj = () => {\n        index++; // skip initial brace\n        skipBlank();\n        const obj = {};\n        try {\n            while (jsonString[index] !== '}') {\n                skipBlank();\n                if (index >= length && Allow.OBJ & allow)\n                    return obj;\n                const key = parseStr();\n                skipBlank();\n                index++; // skip colon\n                try {\n                    const value = parseAny();\n                    Object.defineProperty(obj, key, { value, writable: true, enumerable: true, configurable: true });\n                }\n                catch (e) {\n                    if (Allow.OBJ & allow)\n                        return obj;\n                    else\n                        throw e;\n                }\n                skipBlank();\n                if (jsonString[index] === ',')\n                    index++; // skip comma\n            }\n        }\n        catch (e) {\n            if (Allow.OBJ & allow)\n                return obj;\n            else\n                markPartialJSON(\"Expected '}' at end of object\");\n        }\n        index++; // skip final brace\n        return obj;\n    };\n    const parseArr = () => {\n        index++; // skip initial bracket\n        const arr = [];\n        try {\n            while (jsonString[index] !== ']') {\n                arr.push(parseAny());\n                skipBlank();\n                if (jsonString[index] === ',') {\n                    index++; // skip comma\n                }\n            }\n        }\n        catch (e) {\n            if (Allow.ARR & allow) {\n                return arr;\n            }\n            markPartialJSON(\"Expected ']' at end of array\");\n        }\n        index++; // skip final bracket\n        return arr;\n    };\n    const parseNum = () => {\n        if (index === 0) {\n            if (jsonString === '-' && Allow.NUM & allow)\n                markPartialJSON(\"Not sure what '-' is\");\n            try {\n                return JSON.parse(jsonString);\n            }\n            catch (e) {\n                if (Allow.NUM & allow) {\n                    try {\n                        if ('.' === jsonString[jsonString.length - 1])\n                            return JSON.parse(jsonString.substring(0, jsonString.lastIndexOf('.')));\n                        return JSON.parse(jsonString.substring(0, jsonString.lastIndexOf('e')));\n                    }\n                    catch (e) { }\n                }\n                throwMalformedError(String(e));\n            }\n        }\n        const start = index;\n        if (jsonString[index] === '-')\n            index++;\n        while (jsonString[index] && !',]}'.includes(jsonString[index]))\n            index++;\n        if (index == length && !(Allow.NUM & allow))\n            markPartialJSON('Unterminated number literal');\n        try {\n            return JSON.parse(jsonString.substring(start, index));\n        }\n        catch (e) {\n            if (jsonString.substring(start, index) === '-' && Allow.NUM & allow)\n                markPartialJSON(\"Not sure what '-' is\");\n            try {\n                return JSON.parse(jsonString.substring(start, jsonString.lastIndexOf('e')));\n            }\n            catch (e) {\n                throwMalformedError(String(e));\n            }\n        }\n    };\n    const skipBlank = () => {\n        while (index < length && ' \\n\\r\\t'.includes(jsonString[index])) {\n            index++;\n        }\n    };\n    return parseAny();\n};\n// using this function with malformed JSON is undefined behavior\nconst partialParse = (input) => parseJSON(input, Allow.ALL ^ Allow.NUM);\nexport { partialParse, PartialJSON, MalformedJSON };\n//# sourceMappingURL=parser.mjs.map","var _ChatCompletionStream_instances, _ChatCompletionStream_params, _ChatCompletionStream_choiceEventStates, _ChatCompletionStream_currentChatCompletionSnapshot, _ChatCompletionStream_beginRequest, _ChatCompletionStream_getChoiceEventState, _ChatCompletionStream_addChunk, _ChatCompletionStream_emitToolCallDoneEvent, _ChatCompletionStream_emitContentDoneEvents, _ChatCompletionStream_endRequest, _ChatCompletionStream_getAutoParseableResponseFormat, _ChatCompletionStream_accumulateChatCompletion;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"../internal/tslib.mjs\";\nimport { partialParse } from \"../_vendor/partial-json-parser/parser.mjs\";\nimport { APIUserAbortError, ContentFilterFinishReasonError, LengthFinishReasonError, OpenAIError, } from \"../error.mjs\";\nimport { hasAutoParseableInput, isAutoParsableResponseFormat, isAutoParsableTool, isChatCompletionFunctionTool, maybeParseChatCompletion, shouldParseToolCall, } from \"../lib/parser.mjs\";\nimport { Stream } from \"../streaming.mjs\";\nimport { AbstractChatCompletionRunner, } from \"./AbstractChatCompletionRunner.mjs\";\nexport class ChatCompletionStream extends AbstractChatCompletionRunner {\n    constructor(params) {\n        super();\n        _ChatCompletionStream_instances.add(this);\n        _ChatCompletionStream_params.set(this, void 0);\n        _ChatCompletionStream_choiceEventStates.set(this, void 0);\n        _ChatCompletionStream_currentChatCompletionSnapshot.set(this, void 0);\n        __classPrivateFieldSet(this, _ChatCompletionStream_params, params, \"f\");\n        __classPrivateFieldSet(this, _ChatCompletionStream_choiceEventStates, [], \"f\");\n    }\n    get currentChatCompletionSnapshot() {\n        return __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n    }\n    /**\n     * Intended for use on the frontend, consuming a stream produced with\n     * `.toReadableStream()` on the backend.\n     *\n     * Note that messages sent to the model do not appear in `.on('message')`\n     * in this context.\n     */\n    static fromReadableStream(stream) {\n        const runner = new ChatCompletionStream(null);\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    static createChatCompletion(client, params, options) {\n        const runner = new ChatCompletionStream(params);\n        runner._run(() => runner._runChatCompletion(client, { ...params, stream: true }, { ...options, headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' } }));\n        return runner;\n    }\n    async _createChatCompletion(client, params, options) {\n        super._createChatCompletion;\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n        const stream = await client.chat.completions.create({ ...params, stream: true }, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const chunk of stream) {\n            __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n    }\n    async _fromReadableStream(readableStream, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n        this._connected();\n        const stream = Stream.fromReadableStream(readableStream, this.controller);\n        let chatId;\n        for await (const chunk of stream) {\n            if (chatId && chatId !== chunk.id) {\n                // A new request has been made.\n                this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n            }\n            __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n            chatId = chunk.id;\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n    }\n    [(_ChatCompletionStream_params = new WeakMap(), _ChatCompletionStream_choiceEventStates = new WeakMap(), _ChatCompletionStream_currentChatCompletionSnapshot = new WeakMap(), _ChatCompletionStream_instances = new WeakSet(), _ChatCompletionStream_beginRequest = function _ChatCompletionStream_beginRequest() {\n        if (this.ended)\n            return;\n        __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n    }, _ChatCompletionStream_getChoiceEventState = function _ChatCompletionStream_getChoiceEventState(choice) {\n        let state = __classPrivateFieldGet(this, _ChatCompletionStream_choiceEventStates, \"f\")[choice.index];\n        if (state) {\n            return state;\n        }\n        state = {\n            content_done: false,\n            refusal_done: false,\n            logprobs_content_done: false,\n            logprobs_refusal_done: false,\n            done_tool_calls: new Set(),\n            current_tool_call_index: null,\n        };\n        __classPrivateFieldGet(this, _ChatCompletionStream_choiceEventStates, \"f\")[choice.index] = state;\n        return state;\n    }, _ChatCompletionStream_addChunk = function _ChatCompletionStream_addChunk(chunk) {\n        if (this.ended)\n            return;\n        const completion = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_accumulateChatCompletion).call(this, chunk);\n        this._emit('chunk', chunk, completion);\n        for (const choice of chunk.choices) {\n            const choiceSnapshot = completion.choices[choice.index];\n            if (choice.delta.content != null &&\n                choiceSnapshot.message?.role === 'assistant' &&\n                choiceSnapshot.message?.content) {\n                this._emit('content', choice.delta.content, choiceSnapshot.message.content);\n                this._emit('content.delta', {\n                    delta: choice.delta.content,\n                    snapshot: choiceSnapshot.message.content,\n                    parsed: choiceSnapshot.message.parsed,\n                });\n            }\n            if (choice.delta.refusal != null &&\n                choiceSnapshot.message?.role === 'assistant' &&\n                choiceSnapshot.message?.refusal) {\n                this._emit('refusal.delta', {\n                    delta: choice.delta.refusal,\n                    snapshot: choiceSnapshot.message.refusal,\n                });\n            }\n            if (choice.logprobs?.content != null && choiceSnapshot.message?.role === 'assistant') {\n                this._emit('logprobs.content.delta', {\n                    content: choice.logprobs?.content,\n                    snapshot: choiceSnapshot.logprobs?.content ?? [],\n                });\n            }\n            if (choice.logprobs?.refusal != null && choiceSnapshot.message?.role === 'assistant') {\n                this._emit('logprobs.refusal.delta', {\n                    refusal: choice.logprobs?.refusal,\n                    snapshot: choiceSnapshot.logprobs?.refusal ?? [],\n                });\n            }\n            const state = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n            if (choiceSnapshot.finish_reason) {\n                __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitContentDoneEvents).call(this, choiceSnapshot);\n                if (state.current_tool_call_index != null) {\n                    __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitToolCallDoneEvent).call(this, choiceSnapshot, state.current_tool_call_index);\n                }\n            }\n            for (const toolCall of choice.delta.tool_calls ?? []) {\n                if (state.current_tool_call_index !== toolCall.index) {\n                    __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitContentDoneEvents).call(this, choiceSnapshot);\n                    // new tool call started, the previous one is done\n                    if (state.current_tool_call_index != null) {\n                        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitToolCallDoneEvent).call(this, choiceSnapshot, state.current_tool_call_index);\n                    }\n                }\n                state.current_tool_call_index = toolCall.index;\n            }\n            for (const toolCallDelta of choice.delta.tool_calls ?? []) {\n                const toolCallSnapshot = choiceSnapshot.message.tool_calls?.[toolCallDelta.index];\n                if (!toolCallSnapshot?.type) {\n                    continue;\n                }\n                if (toolCallSnapshot?.type === 'function') {\n                    this._emit('tool_calls.function.arguments.delta', {\n                        name: toolCallSnapshot.function?.name,\n                        index: toolCallDelta.index,\n                        arguments: toolCallSnapshot.function.arguments,\n                        parsed_arguments: toolCallSnapshot.function.parsed_arguments,\n                        arguments_delta: toolCallDelta.function?.arguments ?? '',\n                    });\n                }\n                else {\n                    assertNever(toolCallSnapshot?.type);\n                }\n            }\n        }\n    }, _ChatCompletionStream_emitToolCallDoneEvent = function _ChatCompletionStream_emitToolCallDoneEvent(choiceSnapshot, toolCallIndex) {\n        const state = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n        if (state.done_tool_calls.has(toolCallIndex)) {\n            // we've already fired the done event\n            return;\n        }\n        const toolCallSnapshot = choiceSnapshot.message.tool_calls?.[toolCallIndex];\n        if (!toolCallSnapshot) {\n            throw new Error('no tool call snapshot');\n        }\n        if (!toolCallSnapshot.type) {\n            throw new Error('tool call snapshot missing `type`');\n        }\n        if (toolCallSnapshot.type === 'function') {\n            const inputTool = __classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\")?.tools?.find((tool) => isChatCompletionFunctionTool(tool) && tool.function.name === toolCallSnapshot.function.name); // TS doesn't narrow based on isChatCompletionTool\n            this._emit('tool_calls.function.arguments.done', {\n                name: toolCallSnapshot.function.name,\n                index: toolCallIndex,\n                arguments: toolCallSnapshot.function.arguments,\n                parsed_arguments: isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCallSnapshot.function.arguments)\n                    : inputTool?.function.strict ? JSON.parse(toolCallSnapshot.function.arguments)\n                        : null,\n            });\n        }\n        else {\n            assertNever(toolCallSnapshot.type);\n        }\n    }, _ChatCompletionStream_emitContentDoneEvents = function _ChatCompletionStream_emitContentDoneEvents(choiceSnapshot) {\n        const state = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n        if (choiceSnapshot.message.content && !state.content_done) {\n            state.content_done = true;\n            const responseFormat = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getAutoParseableResponseFormat).call(this);\n            this._emit('content.done', {\n                content: choiceSnapshot.message.content,\n                parsed: responseFormat ? responseFormat.$parseRaw(choiceSnapshot.message.content) : null,\n            });\n        }\n        if (choiceSnapshot.message.refusal && !state.refusal_done) {\n            state.refusal_done = true;\n            this._emit('refusal.done', { refusal: choiceSnapshot.message.refusal });\n        }\n        if (choiceSnapshot.logprobs?.content && !state.logprobs_content_done) {\n            state.logprobs_content_done = true;\n            this._emit('logprobs.content.done', { content: choiceSnapshot.logprobs.content });\n        }\n        if (choiceSnapshot.logprobs?.refusal && !state.logprobs_refusal_done) {\n            state.logprobs_refusal_done = true;\n            this._emit('logprobs.refusal.done', { refusal: choiceSnapshot.logprobs.refusal });\n        }\n    }, _ChatCompletionStream_endRequest = function _ChatCompletionStream_endRequest() {\n        if (this.ended) {\n            throw new OpenAIError(`stream has ended, this shouldn't happen`);\n        }\n        const snapshot = __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n        if (!snapshot) {\n            throw new OpenAIError(`request ended without sending any chunks`);\n        }\n        __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n        __classPrivateFieldSet(this, _ChatCompletionStream_choiceEventStates, [], \"f\");\n        return finalizeChatCompletion(snapshot, __classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\"));\n    }, _ChatCompletionStream_getAutoParseableResponseFormat = function _ChatCompletionStream_getAutoParseableResponseFormat() {\n        const responseFormat = __classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\")?.response_format;\n        if (isAutoParsableResponseFormat(responseFormat)) {\n            return responseFormat;\n        }\n        return null;\n    }, _ChatCompletionStream_accumulateChatCompletion = function _ChatCompletionStream_accumulateChatCompletion(chunk) {\n        var _a, _b, _c, _d;\n        let snapshot = __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n        const { choices, ...rest } = chunk;\n        if (!snapshot) {\n            snapshot = __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, {\n                ...rest,\n                choices: [],\n            }, \"f\");\n        }\n        else {\n            Object.assign(snapshot, rest);\n        }\n        for (const { delta, finish_reason, index, logprobs = null, ...other } of chunk.choices) {\n            let choice = snapshot.choices[index];\n            if (!choice) {\n                choice = snapshot.choices[index] = { finish_reason, index, message: {}, logprobs, ...other };\n            }\n            if (logprobs) {\n                if (!choice.logprobs) {\n                    choice.logprobs = Object.assign({}, logprobs);\n                }\n                else {\n                    const { content, refusal, ...rest } = logprobs;\n                    assertIsEmpty(rest);\n                    Object.assign(choice.logprobs, rest);\n                    if (content) {\n                        (_a = choice.logprobs).content ?? (_a.content = []);\n                        choice.logprobs.content.push(...content);\n                    }\n                    if (refusal) {\n                        (_b = choice.logprobs).refusal ?? (_b.refusal = []);\n                        choice.logprobs.refusal.push(...refusal);\n                    }\n                }\n            }\n            if (finish_reason) {\n                choice.finish_reason = finish_reason;\n                if (__classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\") && hasAutoParseableInput(__classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\"))) {\n                    if (finish_reason === 'length') {\n                        throw new LengthFinishReasonError();\n                    }\n                    if (finish_reason === 'content_filter') {\n                        throw new ContentFilterFinishReasonError();\n                    }\n                }\n            }\n            Object.assign(choice, other);\n            if (!delta)\n                continue; // Shouldn't happen; just in case.\n            const { content, refusal, function_call, role, tool_calls, ...rest } = delta;\n            assertIsEmpty(rest);\n            Object.assign(choice.message, rest);\n            if (refusal) {\n                choice.message.refusal = (choice.message.refusal || '') + refusal;\n            }\n            if (role)\n                choice.message.role = role;\n            if (function_call) {\n                if (!choice.message.function_call) {\n                    choice.message.function_call = function_call;\n                }\n                else {\n                    if (function_call.name)\n                        choice.message.function_call.name = function_call.name;\n                    if (function_call.arguments) {\n                        (_c = choice.message.function_call).arguments ?? (_c.arguments = '');\n                        choice.message.function_call.arguments += function_call.arguments;\n                    }\n                }\n            }\n            if (content) {\n                choice.message.content = (choice.message.content || '') + content;\n                if (!choice.message.refusal && __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getAutoParseableResponseFormat).call(this)) {\n                    choice.message.parsed = partialParse(choice.message.content);\n                }\n            }\n            if (tool_calls) {\n                if (!choice.message.tool_calls)\n                    choice.message.tool_calls = [];\n                for (const { index, id, type, function: fn, ...rest } of tool_calls) {\n                    const tool_call = ((_d = choice.message.tool_calls)[index] ?? (_d[index] = {}));\n                    Object.assign(tool_call, rest);\n                    if (id)\n                        tool_call.id = id;\n                    if (type)\n                        tool_call.type = type;\n                    if (fn)\n                        tool_call.function ?? (tool_call.function = { name: fn.name ?? '', arguments: '' });\n                    if (fn?.name)\n                        tool_call.function.name = fn.name;\n                    if (fn?.arguments) {\n                        tool_call.function.arguments += fn.arguments;\n                        if (shouldParseToolCall(__classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\"), tool_call)) {\n                            tool_call.function.parsed_arguments = partialParse(tool_call.function.arguments);\n                        }\n                    }\n                }\n            }\n        }\n        return snapshot;\n    }, Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        this.on('chunk', (chunk) => {\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(chunk);\n            }\n            else {\n                pushQueue.push(chunk);\n            }\n        });\n        this.on('end', () => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on('abort', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on('error', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async () => {\n                if (!pushQueue.length) {\n                    if (done) {\n                        return { value: undefined, done: true };\n                    }\n                    return new Promise((resolve, reject) => readQueue.push({ resolve, reject })).then((chunk) => (chunk ? { value: chunk, done: false } : { value: undefined, done: true }));\n                }\n                const chunk = pushQueue.shift();\n                return { value: chunk, done: false };\n            },\n            return: async () => {\n                this.abort();\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    toReadableStream() {\n        const stream = new Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n        return stream.toReadableStream();\n    }\n}\nfunction finalizeChatCompletion(snapshot, params) {\n    const { id, choices, created, model, system_fingerprint, ...rest } = snapshot;\n    const completion = {\n        ...rest,\n        id,\n        choices: choices.map(({ message, finish_reason, index, logprobs, ...choiceRest }) => {\n            if (!finish_reason) {\n                throw new OpenAIError(`missing finish_reason for choice ${index}`);\n            }\n            const { content = null, function_call, tool_calls, ...messageRest } = message;\n            const role = message.role; // this is what we expect; in theory it could be different which would make our types a slight lie but would be fine.\n            if (!role) {\n                throw new OpenAIError(`missing role for choice ${index}`);\n            }\n            if (function_call) {\n                const { arguments: args, name } = function_call;\n                if (args == null) {\n                    throw new OpenAIError(`missing function_call.arguments for choice ${index}`);\n                }\n                if (!name) {\n                    throw new OpenAIError(`missing function_call.name for choice ${index}`);\n                }\n                return {\n                    ...choiceRest,\n                    message: {\n                        content,\n                        function_call: { arguments: args, name },\n                        role,\n                        refusal: message.refusal ?? null,\n                    },\n                    finish_reason,\n                    index,\n                    logprobs,\n                };\n            }\n            if (tool_calls) {\n                return {\n                    ...choiceRest,\n                    index,\n                    finish_reason,\n                    logprobs,\n                    message: {\n                        ...messageRest,\n                        role,\n                        content,\n                        refusal: message.refusal ?? null,\n                        tool_calls: tool_calls.map((tool_call, i) => {\n                            const { function: fn, type, id, ...toolRest } = tool_call;\n                            const { arguments: args, name, ...fnRest } = fn || {};\n                            if (id == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].id\\n${str(snapshot)}`);\n                            }\n                            if (type == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].type\\n${str(snapshot)}`);\n                            }\n                            if (name == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].function.name\\n${str(snapshot)}`);\n                            }\n                            if (args == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].function.arguments\\n${str(snapshot)}`);\n                            }\n                            return { ...toolRest, id, type, function: { ...fnRest, name, arguments: args } };\n                        }),\n                    },\n                };\n            }\n            return {\n                ...choiceRest,\n                message: { ...messageRest, content, role, refusal: message.refusal ?? null },\n                finish_reason,\n                index,\n                logprobs,\n            };\n        }),\n        created,\n        model,\n        object: 'chat.completion',\n        ...(system_fingerprint ? { system_fingerprint } : {}),\n    };\n    return maybeParseChatCompletion(completion, params);\n}\nfunction str(x) {\n    return JSON.stringify(x);\n}\n/**\n * Ensures the given argument is an empty object, useful for\n * asserting that all known properties on an object have been\n * destructured.\n */\nfunction assertIsEmpty(obj) {\n    return;\n}\nfunction assertNever(_x) { }\n//# sourceMappingURL=ChatCompletionStream.mjs.map","import { ChatCompletionStream } from \"./ChatCompletionStream.mjs\";\nexport class ChatCompletionStreamingRunner extends ChatCompletionStream {\n    static fromReadableStream(stream) {\n        const runner = new ChatCompletionStreamingRunner(null);\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    static runTools(client, params, options) {\n        const runner = new ChatCompletionStreamingRunner(\n        // @ts-expect-error TODO these types are incompatible\n        params);\n        const opts = {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runTools' },\n        };\n        runner._run(() => runner._runTools(client, params, opts));\n        return runner;\n    }\n}\n//# sourceMappingURL=ChatCompletionStreamingRunner.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as MessagesAPI from \"./messages.mjs\";\nimport { Messages } from \"./messages.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nimport { ChatCompletionRunner } from \"../../../lib/ChatCompletionRunner.mjs\";\nimport { ChatCompletionStreamingRunner } from \"../../../lib/ChatCompletionStreamingRunner.mjs\";\nimport { ChatCompletionStream } from \"../../../lib/ChatCompletionStream.mjs\";\nimport { parseChatCompletion, validateInputTools } from \"../../../lib/parser.mjs\";\nexport class Completions extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.messages = new MessagesAPI.Messages(this._client);\n    }\n    create(body, options) {\n        return this._client.post('/chat/completions', { body, ...options, stream: body.stream ?? false });\n    }\n    /**\n     * Get a stored chat completion. Only Chat Completions that have been created with\n     * the `store` parameter set to `true` will be returned.\n     *\n     * @example\n     * ```ts\n     * const chatCompletion =\n     *   await client.chat.completions.retrieve('completion_id');\n     * ```\n     */\n    retrieve(completionID, options) {\n        return this._client.get(path `/chat/completions/${completionID}`, options);\n    }\n    /**\n     * Modify a stored chat completion. Only Chat Completions that have been created\n     * with the `store` parameter set to `true` can be modified. Currently, the only\n     * supported modification is to update the `metadata` field.\n     *\n     * @example\n     * ```ts\n     * const chatCompletion = await client.chat.completions.update(\n     *   'completion_id',\n     *   { metadata: { foo: 'string' } },\n     * );\n     * ```\n     */\n    update(completionID, body, options) {\n        return this._client.post(path `/chat/completions/${completionID}`, { body, ...options });\n    }\n    /**\n     * List stored Chat Completions. Only Chat Completions that have been stored with\n     * the `store` parameter set to `true` will be returned.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const chatCompletion of client.chat.completions.list()) {\n     *   // ...\n     * }\n     * ```\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/chat/completions', (CursorPage), { query, ...options });\n    }\n    /**\n     * Delete a stored chat completion. Only Chat Completions that have been created\n     * with the `store` parameter set to `true` can be deleted.\n     *\n     * @example\n     * ```ts\n     * const chatCompletionDeleted =\n     *   await client.chat.completions.delete('completion_id');\n     * ```\n     */\n    delete(completionID, options) {\n        return this._client.delete(path `/chat/completions/${completionID}`, options);\n    }\n    parse(body, options) {\n        validateInputTools(body.tools);\n        return this._client.chat.completions\n            .create(body, {\n            ...options,\n            headers: {\n                ...options?.headers,\n                'X-Stainless-Helper-Method': 'chat.completions.parse',\n            },\n        })\n            ._thenUnwrap((completion) => parseChatCompletion(completion, body));\n    }\n    runTools(body, options) {\n        if (body.stream) {\n            return ChatCompletionStreamingRunner.runTools(this._client, body, options);\n        }\n        return ChatCompletionRunner.runTools(this._client, body, options);\n    }\n    /**\n     * Creates a chat completion stream\n     */\n    stream(body, options) {\n        return ChatCompletionStream.createChatCompletion(this._client, body, options);\n    }\n}\nexport { ChatCompletionStreamingRunner } from \"../../../lib/ChatCompletionStreamingRunner.mjs\";\nexport { ParsingToolFunction, } from \"../../../lib/RunnableFunction.mjs\";\nexport { ChatCompletionStream } from \"../../../lib/ChatCompletionStream.mjs\";\nexport { ChatCompletionRunner } from \"../../../lib/ChatCompletionRunner.mjs\";\nCompletions.Messages = Messages;\n//# sourceMappingURL=completions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as CompletionsAPI from \"./completions/completions.mjs\";\nimport { Completions, } from \"./completions/completions.mjs\";\nexport class Chat extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.completions = new CompletionsAPI.Completions(this._client);\n    }\n}\nChat.Completions = Completions;\n//# sourceMappingURL=chat.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { isReadonlyArray } from \"./utils/values.mjs\";\nconst brand_privateNullableHeaders = /* @__PURE__ */ Symbol('brand.privateNullableHeaders');\nfunction* iterateHeaders(headers) {\n    if (!headers)\n        return;\n    if (brand_privateNullableHeaders in headers) {\n        const { values, nulls } = headers;\n        yield* values.entries();\n        for (const name of nulls) {\n            yield [name, null];\n        }\n        return;\n    }\n    let shouldClear = false;\n    let iter;\n    if (headers instanceof Headers) {\n        iter = headers.entries();\n    }\n    else if (isReadonlyArray(headers)) {\n        iter = headers;\n    }\n    else {\n        shouldClear = true;\n        iter = Object.entries(headers ?? {});\n    }\n    for (let row of iter) {\n        const name = row[0];\n        if (typeof name !== 'string')\n            throw new TypeError('expected header name to be a string');\n        const values = isReadonlyArray(row[1]) ? row[1] : [row[1]];\n        let didClear = false;\n        for (const value of values) {\n            if (value === undefined)\n                continue;\n            // Objects keys always overwrite older headers, they never append.\n            // Yield a null to clear the header before adding the new values.\n            if (shouldClear && !didClear) {\n                didClear = true;\n                yield [name, null];\n            }\n            yield [name, value];\n        }\n    }\n}\nexport const buildHeaders = (newHeaders) => {\n    const targetHeaders = new Headers();\n    const nullHeaders = new Set();\n    for (const headers of newHeaders) {\n        const seenHeaders = new Set();\n        for (const [name, value] of iterateHeaders(headers)) {\n            const lowerName = name.toLowerCase();\n            if (!seenHeaders.has(lowerName)) {\n                targetHeaders.delete(name);\n                seenHeaders.add(lowerName);\n            }\n            if (value === null) {\n                targetHeaders.delete(name);\n                nullHeaders.add(lowerName);\n            }\n            else {\n                targetHeaders.append(name, value);\n                nullHeaders.delete(lowerName);\n            }\n        }\n    }\n    return { [brand_privateNullableHeaders]: true, values: targetHeaders, nulls: nullHeaders };\n};\nexport const isEmptyHeaders = (headers) => {\n    for (const _ of iterateHeaders(headers))\n        return false;\n    return true;\n};\n//# sourceMappingURL=headers.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { buildHeaders } from \"../../internal/headers.mjs\";\nexport class Speech extends APIResource {\n    /**\n     * Generates audio from the input text.\n     *\n     * @example\n     * ```ts\n     * const speech = await client.audio.speech.create({\n     *   input: 'input',\n     *   model: 'string',\n     *   voice: 'ash',\n     * });\n     *\n     * const content = await speech.blob();\n     * console.log(content);\n     * ```\n     */\n    create(body, options) {\n        return this._client.post('/audio/speech', {\n            body,\n            ...options,\n            headers: buildHeaders([{ Accept: 'application/octet-stream' }, options?.headers]),\n            __binaryResponse: true,\n        });\n    }\n}\n//# sourceMappingURL=speech.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { multipartFormRequestOptions } from \"../../internal/uploads.mjs\";\nexport class Transcriptions extends APIResource {\n    create(body, options) {\n        return this._client.post('/audio/transcriptions', multipartFormRequestOptions({\n            body,\n            ...options,\n            stream: body.stream ?? false,\n            __metadata: { model: body.model },\n        }, this._client));\n    }\n}\n//# sourceMappingURL=transcriptions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { multipartFormRequestOptions } from \"../../internal/uploads.mjs\";\nexport class Translations extends APIResource {\n    create(body, options) {\n        return this._client.post('/audio/translations', multipartFormRequestOptions({ body, ...options, __metadata: { model: body.model } }, this._client));\n    }\n}\n//# sourceMappingURL=translations.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as SpeechAPI from \"./speech.mjs\";\nimport { Speech } from \"./speech.mjs\";\nimport * as TranscriptionsAPI from \"./transcriptions.mjs\";\nimport { Transcriptions, } from \"./transcriptions.mjs\";\nimport * as TranslationsAPI from \"./translations.mjs\";\nimport { Translations, } from \"./translations.mjs\";\nexport class Audio extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.transcriptions = new TranscriptionsAPI.Transcriptions(this._client);\n        this.translations = new TranslationsAPI.Translations(this._client);\n        this.speech = new SpeechAPI.Speech(this._client);\n    }\n}\nAudio.Transcriptions = Transcriptions;\nAudio.Translations = Translations;\nAudio.Speech = Speech;\n//# sourceMappingURL=audio.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../core/resource.mjs\";\nimport { CursorPage } from \"../core/pagination.mjs\";\nimport { path } from \"../internal/utils/path.mjs\";\nexport class Batches extends APIResource {\n    /**\n     * Creates and executes a batch from an uploaded file of requests\n     */\n    create(body, options) {\n        return this._client.post('/batches', { body, ...options });\n    }\n    /**\n     * Retrieves a batch.\n     */\n    retrieve(batchID, options) {\n        return this._client.get(path `/batches/${batchID}`, options);\n    }\n    /**\n     * List your organization's batches.\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/batches', (CursorPage), { query, ...options });\n    }\n    /**\n     * Cancels an in-progress batch. The batch will be in status `cancelling` for up to\n     * 10 minutes, before changing to `cancelled`, where it will have partial results\n     * (if any) available in the output file.\n     */\n    cancel(batchID, options) {\n        return this._client.post(path `/batches/${batchID}/cancel`, options);\n    }\n}\n//# sourceMappingURL=batches.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { CursorPage } from \"../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../internal/headers.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class Assistants extends APIResource {\n    /**\n     * Create an assistant with a model and instructions.\n     *\n     * @example\n     * ```ts\n     * const assistant = await client.beta.assistants.create({\n     *   model: 'gpt-4o',\n     * });\n     * ```\n     */\n    create(body, options) {\n        return this._client.post('/assistants', {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Retrieves an assistant.\n     *\n     * @example\n     * ```ts\n     * const assistant = await client.beta.assistants.retrieve(\n     *   'assistant_id',\n     * );\n     * ```\n     */\n    retrieve(assistantID, options) {\n        return this._client.get(path `/assistants/${assistantID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Modifies an assistant.\n     *\n     * @example\n     * ```ts\n     * const assistant = await client.beta.assistants.update(\n     *   'assistant_id',\n     * );\n     * ```\n     */\n    update(assistantID, body, options) {\n        return this._client.post(path `/assistants/${assistantID}`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Returns a list of assistants.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const assistant of client.beta.assistants.list()) {\n     *   // ...\n     * }\n     * ```\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/assistants', (CursorPage), {\n            query,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Delete an assistant.\n     *\n     * @example\n     * ```ts\n     * const assistantDeleted =\n     *   await client.beta.assistants.delete('assistant_id');\n     * ```\n     */\n    delete(assistantID, options) {\n        return this._client.delete(path `/assistants/${assistantID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n}\n//# sourceMappingURL=assistants.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { buildHeaders } from \"../../../internal/headers.mjs\";\nexport class Sessions extends APIResource {\n    /**\n     * Create an ephemeral API token for use in client-side applications with the\n     * Realtime API. Can be configured with the same session parameters as the\n     * `session.update` client event.\n     *\n     * It responds with a session object, plus a `client_secret` key which contains a\n     * usable ephemeral API token that can be used to authenticate browser clients for\n     * the Realtime API.\n     *\n     * @example\n     * ```ts\n     * const session =\n     *   await client.beta.realtime.sessions.create();\n     * ```\n     */\n    create(body, options) {\n        return this._client.post('/realtime/sessions', {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n}\n//# sourceMappingURL=sessions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { buildHeaders } from \"../../../internal/headers.mjs\";\nexport class TranscriptionSessions extends APIResource {\n    /**\n     * Create an ephemeral API token for use in client-side applications with the\n     * Realtime API specifically for realtime transcriptions. Can be configured with\n     * the same session parameters as the `transcription_session.update` client event.\n     *\n     * It responds with a session object, plus a `client_secret` key which contains a\n     * usable ephemeral API token that can be used to authenticate browser clients for\n     * the Realtime API.\n     *\n     * @example\n     * ```ts\n     * const transcriptionSession =\n     *   await client.beta.realtime.transcriptionSessions.create();\n     * ```\n     */\n    create(body, options) {\n        return this._client.post('/realtime/transcription_sessions', {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n}\n//# sourceMappingURL=transcription-sessions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as SessionsAPI from \"./sessions.mjs\";\nimport { Sessions, } from \"./sessions.mjs\";\nimport * as TranscriptionSessionsAPI from \"./transcription-sessions.mjs\";\nimport { TranscriptionSessions, } from \"./transcription-sessions.mjs\";\n/**\n * @deprecated Realtime has now launched and is generally available. The old beta API is now deprecated.\n */\nexport class Realtime extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.sessions = new SessionsAPI.Sessions(this._client);\n        this.transcriptionSessions = new TranscriptionSessionsAPI.TranscriptionSessions(this._client);\n    }\n}\nRealtime.Sessions = Sessions;\nRealtime.TranscriptionSessions = TranscriptionSessions;\n//# sourceMappingURL=realtime.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../../internal/headers.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */\nexport class Messages extends APIResource {\n    /**\n     * Create a message.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    create(threadID, body, options) {\n        return this._client.post(path `/threads/${threadID}/messages`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Retrieve a message.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    retrieve(messageID, params, options) {\n        const { thread_id } = params;\n        return this._client.get(path `/threads/${thread_id}/messages/${messageID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Modifies a message.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    update(messageID, params, options) {\n        const { thread_id, ...body } = params;\n        return this._client.post(path `/threads/${thread_id}/messages/${messageID}`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Returns a list of messages for a given thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    list(threadID, query = {}, options) {\n        return this._client.getAPIList(path `/threads/${threadID}/messages`, (CursorPage), {\n            query,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Deletes a message.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    delete(messageID, params, options) {\n        const { thread_id } = params;\n        return this._client.delete(path `/threads/${thread_id}/messages/${messageID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n}\n//# sourceMappingURL=messages.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../../core/resource.mjs\";\nimport { CursorPage } from \"../../../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../../../internal/headers.mjs\";\nimport { path } from \"../../../../internal/utils/path.mjs\";\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */\nexport class Steps extends APIResource {\n    /**\n     * Retrieves a run step.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    retrieve(stepID, params, options) {\n        const { thread_id, run_id, ...query } = params;\n        return this._client.get(path `/threads/${thread_id}/runs/${run_id}/steps/${stepID}`, {\n            query,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Returns a list of run steps belonging to a run.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    list(runID, params, options) {\n        const { thread_id, ...query } = params;\n        return this._client.getAPIList(path `/threads/${thread_id}/runs/${runID}/steps`, (CursorPage), {\n            query,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n}\n//# sourceMappingURL=steps.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { OpenAIError } from \"../../core/error.mjs\";\nimport { encodeUTF8 } from \"./bytes.mjs\";\nexport const toBase64 = (data) => {\n    if (!data)\n        return '';\n    if (typeof globalThis.Buffer !== 'undefined') {\n        return globalThis.Buffer.from(data).toString('base64');\n    }\n    if (typeof data === 'string') {\n        data = encodeUTF8(data);\n    }\n    if (typeof btoa !== 'undefined') {\n        return btoa(String.fromCharCode.apply(null, data));\n    }\n    throw new OpenAIError('Cannot generate base64 string; Expected `Buffer` or `btoa` to be defined');\n};\nexport const fromBase64 = (str) => {\n    if (typeof globalThis.Buffer !== 'undefined') {\n        const buf = globalThis.Buffer.from(str, 'base64');\n        return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n    }\n    if (typeof atob !== 'undefined') {\n        const bstr = atob(str);\n        const buf = new Uint8Array(bstr.length);\n        for (let i = 0; i < bstr.length; i++) {\n            buf[i] = bstr.charCodeAt(i);\n        }\n        return buf;\n    }\n    throw new OpenAIError('Cannot decode base64 string; Expected `Buffer` or `atob` to be defined');\n};\n/**\n * Converts a Base64 encoded string to a Float32Array.\n * @param base64Str - The Base64 encoded string.\n * @returns An Array of numbers interpreted as Float32 values.\n */\nexport const toFloat32Array = (base64Str) => {\n    if (typeof Buffer !== 'undefined') {\n        // for Node.js environment\n        const buf = Buffer.from(base64Str, 'base64');\n        return Array.from(new Float32Array(buf.buffer, buf.byteOffset, buf.length / Float32Array.BYTES_PER_ELEMENT));\n    }\n    else {\n        // for legacy web platform APIs\n        const binaryStr = atob(base64Str);\n        const len = binaryStr.length;\n        const bytes = new Uint8Array(len);\n        for (let i = 0; i < len; i++) {\n            bytes[i] = binaryStr.charCodeAt(i);\n        }\n        return Array.from(new Float32Array(bytes.buffer));\n    }\n};\n//# sourceMappingURL=base64.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n/**\n * Read an environment variable.\n *\n * Trims beginning and trailing whitespace.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nexport const readEnv = (env) => {\n    if (typeof globalThis.process !== 'undefined') {\n        return globalThis.process.env?.[env]?.trim() ?? undefined;\n    }\n    if (typeof globalThis.Deno !== 'undefined') {\n        return globalThis.Deno.env?.get?.(env)?.trim();\n    }\n    return undefined;\n};\n//# sourceMappingURL=env.mjs.map","var _AssistantStream_instances, _a, _AssistantStream_events, _AssistantStream_runStepSnapshots, _AssistantStream_messageSnapshots, _AssistantStream_messageSnapshot, _AssistantStream_finalRun, _AssistantStream_currentContentIndex, _AssistantStream_currentContent, _AssistantStream_currentToolCallIndex, _AssistantStream_currentToolCall, _AssistantStream_currentEvent, _AssistantStream_currentRunSnapshot, _AssistantStream_currentRunStepSnapshot, _AssistantStream_addEvent, _AssistantStream_endRequest, _AssistantStream_handleMessage, _AssistantStream_handleRunStep, _AssistantStream_handleEvent, _AssistantStream_accumulateRunStep, _AssistantStream_accumulateMessage, _AssistantStream_accumulateContent, _AssistantStream_handleRun;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"../internal/tslib.mjs\";\nimport { Stream } from \"../streaming.mjs\";\nimport { APIUserAbortError, OpenAIError } from \"../error.mjs\";\nimport { EventStream } from \"./EventStream.mjs\";\nimport { isObj } from \"../internal/utils.mjs\";\nexport class AssistantStream extends EventStream {\n    constructor() {\n        super(...arguments);\n        _AssistantStream_instances.add(this);\n        //Track all events in a single list for reference\n        _AssistantStream_events.set(this, []);\n        //Used to accumulate deltas\n        //We are accumulating many types so the value here is not strict\n        _AssistantStream_runStepSnapshots.set(this, {});\n        _AssistantStream_messageSnapshots.set(this, {});\n        _AssistantStream_messageSnapshot.set(this, void 0);\n        _AssistantStream_finalRun.set(this, void 0);\n        _AssistantStream_currentContentIndex.set(this, void 0);\n        _AssistantStream_currentContent.set(this, void 0);\n        _AssistantStream_currentToolCallIndex.set(this, void 0);\n        _AssistantStream_currentToolCall.set(this, void 0);\n        //For current snapshot methods\n        _AssistantStream_currentEvent.set(this, void 0);\n        _AssistantStream_currentRunSnapshot.set(this, void 0);\n        _AssistantStream_currentRunStepSnapshot.set(this, void 0);\n    }\n    [(_AssistantStream_events = new WeakMap(), _AssistantStream_runStepSnapshots = new WeakMap(), _AssistantStream_messageSnapshots = new WeakMap(), _AssistantStream_messageSnapshot = new WeakMap(), _AssistantStream_finalRun = new WeakMap(), _AssistantStream_currentContentIndex = new WeakMap(), _AssistantStream_currentContent = new WeakMap(), _AssistantStream_currentToolCallIndex = new WeakMap(), _AssistantStream_currentToolCall = new WeakMap(), _AssistantStream_currentEvent = new WeakMap(), _AssistantStream_currentRunSnapshot = new WeakMap(), _AssistantStream_currentRunStepSnapshot = new WeakMap(), _AssistantStream_instances = new WeakSet(), Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        //Catch all for passing along all events\n        this.on('event', (event) => {\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(event);\n            }\n            else {\n                pushQueue.push(event);\n            }\n        });\n        this.on('end', () => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on('abort', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on('error', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async () => {\n                if (!pushQueue.length) {\n                    if (done) {\n                        return { value: undefined, done: true };\n                    }\n                    return new Promise((resolve, reject) => readQueue.push({ resolve, reject })).then((chunk) => (chunk ? { value: chunk, done: false } : { value: undefined, done: true }));\n                }\n                const chunk = pushQueue.shift();\n                return { value: chunk, done: false };\n            },\n            return: async () => {\n                this.abort();\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    static fromReadableStream(stream) {\n        const runner = new _a();\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    async _fromReadableStream(readableStream, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        this._connected();\n        const stream = Stream.fromReadableStream(readableStream, this.controller);\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    toReadableStream() {\n        const stream = new Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n        return stream.toReadableStream();\n    }\n    static createToolAssistantStream(runId, runs, params, options) {\n        const runner = new _a();\n        runner._run(() => runner._runToolAssistantStream(runId, runs, params, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    async _createToolAssistantStream(run, runId, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        const body = { ...params, stream: true };\n        const stream = await run.submitToolOutputs(runId, body, {\n            ...options,\n            signal: this.controller.signal,\n        });\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    static createThreadAssistantStream(params, thread, options) {\n        const runner = new _a();\n        runner._run(() => runner._threadAssistantStream(params, thread, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    static createAssistantStream(threadId, runs, params, options) {\n        const runner = new _a();\n        runner._run(() => runner._runAssistantStream(threadId, runs, params, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    currentEvent() {\n        return __classPrivateFieldGet(this, _AssistantStream_currentEvent, \"f\");\n    }\n    currentRun() {\n        return __classPrivateFieldGet(this, _AssistantStream_currentRunSnapshot, \"f\");\n    }\n    currentMessageSnapshot() {\n        return __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\");\n    }\n    currentRunStepSnapshot() {\n        return __classPrivateFieldGet(this, _AssistantStream_currentRunStepSnapshot, \"f\");\n    }\n    async finalRunSteps() {\n        await this.done();\n        return Object.values(__classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\"));\n    }\n    async finalMessages() {\n        await this.done();\n        return Object.values(__classPrivateFieldGet(this, _AssistantStream_messageSnapshots, \"f\"));\n    }\n    async finalRun() {\n        await this.done();\n        if (!__classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\"))\n            throw Error('Final run was not received.');\n        return __classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\");\n    }\n    async _createThreadAssistantStream(thread, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        const body = { ...params, stream: true };\n        const stream = await thread.createAndRun(body, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    async _createAssistantStream(run, threadId, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        const body = { ...params, stream: true };\n        const stream = await run.create(threadId, body, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    static accumulateDelta(acc, delta) {\n        for (const [key, deltaValue] of Object.entries(delta)) {\n            if (!acc.hasOwnProperty(key)) {\n                acc[key] = deltaValue;\n                continue;\n            }\n            let accValue = acc[key];\n            if (accValue === null || accValue === undefined) {\n                acc[key] = deltaValue;\n                continue;\n            }\n            // We don't accumulate these special properties\n            if (key === 'index' || key === 'type') {\n                acc[key] = deltaValue;\n                continue;\n            }\n            // Type-specific accumulation logic\n            if (typeof accValue === 'string' && typeof deltaValue === 'string') {\n                accValue += deltaValue;\n            }\n            else if (typeof accValue === 'number' && typeof deltaValue === 'number') {\n                accValue += deltaValue;\n            }\n            else if (isObj(accValue) && isObj(deltaValue)) {\n                accValue = this.accumulateDelta(accValue, deltaValue);\n            }\n            else if (Array.isArray(accValue) && Array.isArray(deltaValue)) {\n                if (accValue.every((x) => typeof x === 'string' || typeof x === 'number')) {\n                    accValue.push(...deltaValue); // Use spread syntax for efficient addition\n                    continue;\n                }\n                for (const deltaEntry of deltaValue) {\n                    if (!isObj(deltaEntry)) {\n                        throw new Error(`Expected array delta entry to be an object but got: ${deltaEntry}`);\n                    }\n                    const index = deltaEntry['index'];\n                    if (index == null) {\n                        console.error(deltaEntry);\n                        throw new Error('Expected array delta entry to have an `index` property');\n                    }\n                    if (typeof index !== 'number') {\n                        throw new Error(`Expected array delta entry \\`index\\` property to be a number but got ${index}`);\n                    }\n                    const accEntry = accValue[index];\n                    if (accEntry == null) {\n                        accValue.push(deltaEntry);\n                    }\n                    else {\n                        accValue[index] = this.accumulateDelta(accEntry, deltaEntry);\n                    }\n                }\n                continue;\n            }\n            else {\n                throw Error(`Unhandled record type: ${key}, deltaValue: ${deltaValue}, accValue: ${accValue}`);\n            }\n            acc[key] = accValue;\n        }\n        return acc;\n    }\n    _addRun(run) {\n        return run;\n    }\n    async _threadAssistantStream(params, thread, options) {\n        return await this._createThreadAssistantStream(thread, params, options);\n    }\n    async _runAssistantStream(threadId, runs, params, options) {\n        return await this._createAssistantStream(runs, threadId, params, options);\n    }\n    async _runToolAssistantStream(runId, runs, params, options) {\n        return await this._createToolAssistantStream(runs, runId, params, options);\n    }\n}\n_a = AssistantStream, _AssistantStream_addEvent = function _AssistantStream_addEvent(event) {\n    if (this.ended)\n        return;\n    __classPrivateFieldSet(this, _AssistantStream_currentEvent, event, \"f\");\n    __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleEvent).call(this, event);\n    switch (event.event) {\n        case 'thread.created':\n            //No action on this event.\n            break;\n        case 'thread.run.created':\n        case 'thread.run.queued':\n        case 'thread.run.in_progress':\n        case 'thread.run.requires_action':\n        case 'thread.run.completed':\n        case 'thread.run.incomplete':\n        case 'thread.run.failed':\n        case 'thread.run.cancelling':\n        case 'thread.run.cancelled':\n        case 'thread.run.expired':\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleRun).call(this, event);\n            break;\n        case 'thread.run.step.created':\n        case 'thread.run.step.in_progress':\n        case 'thread.run.step.delta':\n        case 'thread.run.step.completed':\n        case 'thread.run.step.failed':\n        case 'thread.run.step.cancelled':\n        case 'thread.run.step.expired':\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleRunStep).call(this, event);\n            break;\n        case 'thread.message.created':\n        case 'thread.message.in_progress':\n        case 'thread.message.delta':\n        case 'thread.message.completed':\n        case 'thread.message.incomplete':\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleMessage).call(this, event);\n            break;\n        case 'error':\n            //This is included for completeness, but errors are processed in the SSE event processing so this should not occur\n            throw new Error('Encountered an error event in event processing - errors should be processed earlier');\n        default:\n            assertNever(event);\n    }\n}, _AssistantStream_endRequest = function _AssistantStream_endRequest() {\n    if (this.ended) {\n        throw new OpenAIError(`stream has ended, this shouldn't happen`);\n    }\n    if (!__classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\"))\n        throw Error('Final run has not been received');\n    return __classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\");\n}, _AssistantStream_handleMessage = function _AssistantStream_handleMessage(event) {\n    const [accumulatedMessage, newContent] = __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateMessage).call(this, event, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n    __classPrivateFieldSet(this, _AssistantStream_messageSnapshot, accumulatedMessage, \"f\");\n    __classPrivateFieldGet(this, _AssistantStream_messageSnapshots, \"f\")[accumulatedMessage.id] = accumulatedMessage;\n    for (const content of newContent) {\n        const snapshotContent = accumulatedMessage.content[content.index];\n        if (snapshotContent?.type == 'text') {\n            this._emit('textCreated', snapshotContent.text);\n        }\n    }\n    switch (event.event) {\n        case 'thread.message.created':\n            this._emit('messageCreated', event.data);\n            break;\n        case 'thread.message.in_progress':\n            break;\n        case 'thread.message.delta':\n            this._emit('messageDelta', event.data.delta, accumulatedMessage);\n            if (event.data.delta.content) {\n                for (const content of event.data.delta.content) {\n                    //If it is text delta, emit a text delta event\n                    if (content.type == 'text' && content.text) {\n                        let textDelta = content.text;\n                        let snapshot = accumulatedMessage.content[content.index];\n                        if (snapshot && snapshot.type == 'text') {\n                            this._emit('textDelta', textDelta, snapshot.text);\n                        }\n                        else {\n                            throw Error('The snapshot associated with this text delta is not text or missing');\n                        }\n                    }\n                    if (content.index != __classPrivateFieldGet(this, _AssistantStream_currentContentIndex, \"f\")) {\n                        //See if we have in progress content\n                        if (__classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\")) {\n                            switch (__classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\").type) {\n                                case 'text':\n                                    this._emit('textDone', __classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\").text, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                                    break;\n                                case 'image_file':\n                                    this._emit('imageFileDone', __classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\").image_file, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                                    break;\n                            }\n                        }\n                        __classPrivateFieldSet(this, _AssistantStream_currentContentIndex, content.index, \"f\");\n                    }\n                    __classPrivateFieldSet(this, _AssistantStream_currentContent, accumulatedMessage.content[content.index], \"f\");\n                }\n            }\n            break;\n        case 'thread.message.completed':\n        case 'thread.message.incomplete':\n            //We emit the latest content we were working on on completion (including incomplete)\n            if (__classPrivateFieldGet(this, _AssistantStream_currentContentIndex, \"f\") !== undefined) {\n                const currentContent = event.data.content[__classPrivateFieldGet(this, _AssistantStream_currentContentIndex, \"f\")];\n                if (currentContent) {\n                    switch (currentContent.type) {\n                        case 'image_file':\n                            this._emit('imageFileDone', currentContent.image_file, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                            break;\n                        case 'text':\n                            this._emit('textDone', currentContent.text, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                            break;\n                    }\n                }\n            }\n            if (__classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\")) {\n                this._emit('messageDone', event.data);\n            }\n            __classPrivateFieldSet(this, _AssistantStream_messageSnapshot, undefined, \"f\");\n    }\n}, _AssistantStream_handleRunStep = function _AssistantStream_handleRunStep(event) {\n    const accumulatedRunStep = __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateRunStep).call(this, event);\n    __classPrivateFieldSet(this, _AssistantStream_currentRunStepSnapshot, accumulatedRunStep, \"f\");\n    switch (event.event) {\n        case 'thread.run.step.created':\n            this._emit('runStepCreated', event.data);\n            break;\n        case 'thread.run.step.delta':\n            const delta = event.data.delta;\n            if (delta.step_details &&\n                delta.step_details.type == 'tool_calls' &&\n                delta.step_details.tool_calls &&\n                accumulatedRunStep.step_details.type == 'tool_calls') {\n                for (const toolCall of delta.step_details.tool_calls) {\n                    if (toolCall.index == __classPrivateFieldGet(this, _AssistantStream_currentToolCallIndex, \"f\")) {\n                        this._emit('toolCallDelta', toolCall, accumulatedRunStep.step_details.tool_calls[toolCall.index]);\n                    }\n                    else {\n                        if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) {\n                            this._emit('toolCallDone', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                        }\n                        __classPrivateFieldSet(this, _AssistantStream_currentToolCallIndex, toolCall.index, \"f\");\n                        __classPrivateFieldSet(this, _AssistantStream_currentToolCall, accumulatedRunStep.step_details.tool_calls[toolCall.index], \"f\");\n                        if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"))\n                            this._emit('toolCallCreated', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                    }\n                }\n            }\n            this._emit('runStepDelta', event.data.delta, accumulatedRunStep);\n            break;\n        case 'thread.run.step.completed':\n        case 'thread.run.step.failed':\n        case 'thread.run.step.cancelled':\n        case 'thread.run.step.expired':\n            __classPrivateFieldSet(this, _AssistantStream_currentRunStepSnapshot, undefined, \"f\");\n            const details = event.data.step_details;\n            if (details.type == 'tool_calls') {\n                if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) {\n                    this._emit('toolCallDone', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                    __classPrivateFieldSet(this, _AssistantStream_currentToolCall, undefined, \"f\");\n                }\n            }\n            this._emit('runStepDone', event.data, accumulatedRunStep);\n            break;\n        case 'thread.run.step.in_progress':\n            break;\n    }\n}, _AssistantStream_handleEvent = function _AssistantStream_handleEvent(event) {\n    __classPrivateFieldGet(this, _AssistantStream_events, \"f\").push(event);\n    this._emit('event', event);\n}, _AssistantStream_accumulateRunStep = function _AssistantStream_accumulateRunStep(event) {\n    switch (event.event) {\n        case 'thread.run.step.created':\n            __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = event.data;\n            return event.data;\n        case 'thread.run.step.delta':\n            let snapshot = __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n            if (!snapshot) {\n                throw Error('Received a RunStepDelta before creation of a snapshot');\n            }\n            let data = event.data;\n            if (data.delta) {\n                const accumulated = _a.accumulateDelta(snapshot, data.delta);\n                __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = accumulated;\n            }\n            return __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n        case 'thread.run.step.completed':\n        case 'thread.run.step.failed':\n        case 'thread.run.step.cancelled':\n        case 'thread.run.step.expired':\n        case 'thread.run.step.in_progress':\n            __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = event.data;\n            break;\n    }\n    if (__classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id])\n        return __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n    throw new Error('No snapshot available');\n}, _AssistantStream_accumulateMessage = function _AssistantStream_accumulateMessage(event, snapshot) {\n    let newContent = [];\n    switch (event.event) {\n        case 'thread.message.created':\n            //On creation the snapshot is just the initial message\n            return [event.data, newContent];\n        case 'thread.message.delta':\n            if (!snapshot) {\n                throw Error('Received a delta with no existing snapshot (there should be one from message creation)');\n            }\n            let data = event.data;\n            //If this delta does not have content, nothing to process\n            if (data.delta.content) {\n                for (const contentElement of data.delta.content) {\n                    if (contentElement.index in snapshot.content) {\n                        let currentContent = snapshot.content[contentElement.index];\n                        snapshot.content[contentElement.index] = __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateContent).call(this, contentElement, currentContent);\n                    }\n                    else {\n                        snapshot.content[contentElement.index] = contentElement;\n                        // This is a new element\n                        newContent.push(contentElement);\n                    }\n                }\n            }\n            return [snapshot, newContent];\n        case 'thread.message.in_progress':\n        case 'thread.message.completed':\n        case 'thread.message.incomplete':\n            //No changes on other thread events\n            if (snapshot) {\n                return [snapshot, newContent];\n            }\n            else {\n                throw Error('Received thread message event with no existing snapshot');\n            }\n    }\n    throw Error('Tried to accumulate a non-message event');\n}, _AssistantStream_accumulateContent = function _AssistantStream_accumulateContent(contentElement, currentContent) {\n    return _a.accumulateDelta(currentContent, contentElement);\n}, _AssistantStream_handleRun = function _AssistantStream_handleRun(event) {\n    __classPrivateFieldSet(this, _AssistantStream_currentRunSnapshot, event.data, \"f\");\n    switch (event.event) {\n        case 'thread.run.created':\n            break;\n        case 'thread.run.queued':\n            break;\n        case 'thread.run.in_progress':\n            break;\n        case 'thread.run.requires_action':\n        case 'thread.run.cancelled':\n        case 'thread.run.failed':\n        case 'thread.run.completed':\n        case 'thread.run.expired':\n        case 'thread.run.incomplete':\n            __classPrivateFieldSet(this, _AssistantStream_finalRun, event.data, \"f\");\n            if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) {\n                this._emit('toolCallDone', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                __classPrivateFieldSet(this, _AssistantStream_currentToolCall, undefined, \"f\");\n            }\n            break;\n        case 'thread.run.cancelling':\n            break;\n    }\n};\nfunction assertNever(_x) { }\n//# sourceMappingURL=AssistantStream.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../../core/resource.mjs\";\nimport * as StepsAPI from \"./steps.mjs\";\nimport { Steps, } from \"./steps.mjs\";\nimport { CursorPage } from \"../../../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../../../internal/headers.mjs\";\nimport { AssistantStream } from \"../../../../lib/AssistantStream.mjs\";\nimport { sleep } from \"../../../../internal/utils/sleep.mjs\";\nimport { path } from \"../../../../internal/utils/path.mjs\";\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */\nexport class Runs extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.steps = new StepsAPI.Steps(this._client);\n    }\n    create(threadID, params, options) {\n        const { include, ...body } = params;\n        return this._client.post(path `/threads/${threadID}/runs`, {\n            query: { include },\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n            stream: params.stream ?? false,\n        });\n    }\n    /**\n     * Retrieves a run.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    retrieve(runID, params, options) {\n        const { thread_id } = params;\n        return this._client.get(path `/threads/${thread_id}/runs/${runID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Modifies a run.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    update(runID, params, options) {\n        const { thread_id, ...body } = params;\n        return this._client.post(path `/threads/${thread_id}/runs/${runID}`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Returns a list of runs belonging to a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    list(threadID, query = {}, options) {\n        return this._client.getAPIList(path `/threads/${threadID}/runs`, (CursorPage), {\n            query,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Cancels a run that is `in_progress`.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    cancel(runID, params, options) {\n        const { thread_id } = params;\n        return this._client.post(path `/threads/${thread_id}/runs/${runID}/cancel`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * A helper to create a run an poll for a terminal state. More information on Run\n     * lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async createAndPoll(threadId, body, options) {\n        const run = await this.create(threadId, body, options);\n        return await this.poll(run.id, { thread_id: threadId }, options);\n    }\n    /**\n     * Create a Run stream\n     *\n     * @deprecated use `stream` instead\n     */\n    createAndStream(threadId, body, options) {\n        return AssistantStream.createAssistantStream(threadId, this._client.beta.threads.runs, body, options);\n    }\n    /**\n     * A helper to poll a run status until it reaches a terminal state. More\n     * information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async poll(runId, params, options) {\n        const headers = buildHeaders([\n            options?.headers,\n            {\n                'X-Stainless-Poll-Helper': 'true',\n                'X-Stainless-Custom-Poll-Interval': options?.pollIntervalMs?.toString() ?? undefined,\n            },\n        ]);\n        while (true) {\n            const { data: run, response } = await this.retrieve(runId, params, {\n                ...options,\n                headers: { ...options?.headers, ...headers },\n            }).withResponse();\n            switch (run.status) {\n                //If we are in any sort of intermediate state we poll\n                case 'queued':\n                case 'in_progress':\n                case 'cancelling':\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    }\n                    else {\n                        const headerInterval = response.headers.get('openai-poll-after-ms');\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await sleep(sleepInterval);\n                    break;\n                //We return the run in any terminal state.\n                case 'requires_action':\n                case 'incomplete':\n                case 'cancelled':\n                case 'completed':\n                case 'failed':\n                case 'expired':\n                    return run;\n            }\n        }\n    }\n    /**\n     * Create a Run stream\n     */\n    stream(threadId, body, options) {\n        return AssistantStream.createAssistantStream(threadId, this._client.beta.threads.runs, body, options);\n    }\n    submitToolOutputs(runID, params, options) {\n        const { thread_id, ...body } = params;\n        return this._client.post(path `/threads/${thread_id}/runs/${runID}/submit_tool_outputs`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n            stream: params.stream ?? false,\n        });\n    }\n    /**\n     * A helper to submit a tool output to a run and poll for a terminal run state.\n     * More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async submitToolOutputsAndPoll(runId, params, options) {\n        const run = await this.submitToolOutputs(runId, params, options);\n        return await this.poll(run.id, params, options);\n    }\n    /**\n     * Submit the tool outputs from a previous run and stream the run to a terminal\n     * state. More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    submitToolOutputsStream(runId, params, options) {\n        return AssistantStream.createToolAssistantStream(runId, this._client.beta.threads.runs, params, options);\n    }\n}\nRuns.Steps = Steps;\n//# sourceMappingURL=runs.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as MessagesAPI from \"./messages.mjs\";\nimport { Messages, } from \"./messages.mjs\";\nimport * as RunsAPI from \"./runs/runs.mjs\";\nimport { Runs, } from \"./runs/runs.mjs\";\nimport { buildHeaders } from \"../../../internal/headers.mjs\";\nimport { AssistantStream } from \"../../../lib/AssistantStream.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */\nexport class Threads extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.runs = new RunsAPI.Runs(this._client);\n        this.messages = new MessagesAPI.Messages(this._client);\n    }\n    /**\n     * Create a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    create(body = {}, options) {\n        return this._client.post('/threads', {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Retrieves a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    retrieve(threadID, options) {\n        return this._client.get(path `/threads/${threadID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Modifies a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    update(threadID, body, options) {\n        return this._client.post(path `/threads/${threadID}`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Delete a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    delete(threadID, options) {\n        return this._client.delete(path `/threads/${threadID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    createAndRun(body, options) {\n        return this._client.post('/threads/runs', {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n            stream: body.stream ?? false,\n        });\n    }\n    /**\n     * A helper to create a thread, start a run and then poll for a terminal state.\n     * More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async createAndRunPoll(body, options) {\n        const run = await this.createAndRun(body, options);\n        return await this.runs.poll(run.id, { thread_id: run.thread_id }, options);\n    }\n    /**\n     * Create a thread and stream the run back\n     */\n    createAndRunStream(body, options) {\n        return AssistantStream.createThreadAssistantStream(body, this._client.beta.threads, options);\n    }\n}\nThreads.Runs = Runs;\nThreads.Messages = Messages;\n//# sourceMappingURL=threads.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as AssistantsAPI from \"./assistants.mjs\";\nimport { Assistants, } from \"./assistants.mjs\";\nimport * as RealtimeAPI from \"./realtime/realtime.mjs\";\nimport { Realtime, } from \"./realtime/realtime.mjs\";\nimport * as ThreadsAPI from \"./threads/threads.mjs\";\nimport { Threads, } from \"./threads/threads.mjs\";\nexport class Beta extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.realtime = new RealtimeAPI.Realtime(this._client);\n        this.assistants = new AssistantsAPI.Assistants(this._client);\n        this.threads = new ThreadsAPI.Threads(this._client);\n    }\n}\nBeta.Realtime = Realtime;\nBeta.Assistants = Assistants;\nBeta.Threads = Threads;\n//# sourceMappingURL=beta.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../core/resource.mjs\";\nexport class Completions extends APIResource {\n    create(body, options) {\n        return this._client.post('/completions', { body, ...options, stream: body.stream ?? false });\n    }\n}\n//# sourceMappingURL=completions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { buildHeaders } from \"../../../internal/headers.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class Content extends APIResource {\n    /**\n     * Retrieve Container File Content\n     */\n    retrieve(fileID, params, options) {\n        const { container_id } = params;\n        return this._client.get(path `/containers/${container_id}/files/${fileID}/content`, {\n            ...options,\n            headers: buildHeaders([{ Accept: 'application/binary' }, options?.headers]),\n            __binaryResponse: true,\n        });\n    }\n}\n//# sourceMappingURL=content.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as ContentAPI from \"./content.mjs\";\nimport { Content } from \"./content.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../../internal/headers.mjs\";\nimport { multipartFormRequestOptions } from \"../../../internal/uploads.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class Files extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.content = new ContentAPI.Content(this._client);\n    }\n    /**\n     * Create a Container File\n     *\n     * You can send either a multipart/form-data request with the raw file content, or\n     * a JSON request with a file ID.\n     */\n    create(containerID, body, options) {\n        return this._client.post(path `/containers/${containerID}/files`, multipartFormRequestOptions({ body, ...options }, this._client));\n    }\n    /**\n     * Retrieve Container File\n     */\n    retrieve(fileID, params, options) {\n        const { container_id } = params;\n        return this._client.get(path `/containers/${container_id}/files/${fileID}`, options);\n    }\n    /**\n     * List Container files\n     */\n    list(containerID, query = {}, options) {\n        return this._client.getAPIList(path `/containers/${containerID}/files`, (CursorPage), {\n            query,\n            ...options,\n        });\n    }\n    /**\n     * Delete Container File\n     */\n    delete(fileID, params, options) {\n        const { container_id } = params;\n        return this._client.delete(path `/containers/${container_id}/files/${fileID}`, {\n            ...options,\n            headers: buildHeaders([{ Accept: '*/*' }, options?.headers]),\n        });\n    }\n}\nFiles.Content = Content;\n//# sourceMappingURL=files.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as FilesAPI from \"./files/files.mjs\";\nimport { Files, } from \"./files/files.mjs\";\nimport { CursorPage } from \"../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../internal/headers.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class Containers extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.files = new FilesAPI.Files(this._client);\n    }\n    /**\n     * Create Container\n     */\n    create(body, options) {\n        return this._client.post('/containers', { body, ...options });\n    }\n    /**\n     * Retrieve Container\n     */\n    retrieve(containerID, options) {\n        return this._client.get(path `/containers/${containerID}`, options);\n    }\n    /**\n     * List Containers\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/containers', (CursorPage), { query, ...options });\n    }\n    /**\n     * Delete Container\n     */\n    delete(containerID, options) {\n        return this._client.delete(path `/containers/${containerID}`, {\n            ...options,\n            headers: buildHeaders([{ Accept: '*/*' }, options?.headers]),\n        });\n    }\n}\nContainers.Files = Files;\n//# sourceMappingURL=containers.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { ConversationCursorPage, } from \"../../core/pagination.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class Items extends APIResource {\n    /**\n     * Create items in a conversation with the given ID.\n     */\n    create(conversationID, params, options) {\n        const { include, ...body } = params;\n        return this._client.post(path `/conversations/${conversationID}/items`, {\n            query: { include },\n            body,\n            ...options,\n        });\n    }\n    /**\n     * Get a single item from a conversation with the given IDs.\n     */\n    retrieve(itemID, params, options) {\n        const { conversation_id, ...query } = params;\n        return this._client.get(path `/conversations/${conversation_id}/items/${itemID}`, { query, ...options });\n    }\n    /**\n     * List all items for a conversation with the given ID.\n     */\n    list(conversationID, query = {}, options) {\n        return this._client.getAPIList(path `/conversations/${conversationID}/items`, (ConversationCursorPage), { query, ...options });\n    }\n    /**\n     * Delete an item from a conversation with the given IDs.\n     */\n    delete(itemID, params, options) {\n        const { conversation_id } = params;\n        return this._client.delete(path `/conversations/${conversation_id}/items/${itemID}`, options);\n    }\n}\n//# sourceMappingURL=items.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as ItemsAPI from \"./items.mjs\";\nimport { Items, } from \"./items.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class Conversations extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.items = new ItemsAPI.Items(this._client);\n    }\n    /**\n     * Create a conversation.\n     */\n    create(body = {}, options) {\n        return this._client.post('/conversations', { body, ...options });\n    }\n    /**\n     * Get a conversation\n     */\n    retrieve(conversationID, options) {\n        return this._client.get(path `/conversations/${conversationID}`, options);\n    }\n    /**\n     * Update a conversation\n     */\n    update(conversationID, body, options) {\n        return this._client.post(path `/conversations/${conversationID}`, { body, ...options });\n    }\n    /**\n     * Delete a conversation. Items in the conversation will not be deleted.\n     */\n    delete(conversationID, options) {\n        return this._client.delete(path `/conversations/${conversationID}`, options);\n    }\n}\nConversations.Items = Items;\n//# sourceMappingURL=conversations.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../core/resource.mjs\";\nimport { loggerFor, toFloat32Array } from \"../internal/utils.mjs\";\nexport class Embeddings extends APIResource {\n    /**\n     * Creates an embedding vector representing the input text.\n     *\n     * @example\n     * ```ts\n     * const createEmbeddingResponse =\n     *   await client.embeddings.create({\n     *     input: 'The quick brown fox jumped over the lazy dog',\n     *     model: 'text-embedding-3-small',\n     *   });\n     * ```\n     */\n    create(body, options) {\n        const hasUserProvidedEncodingFormat = !!body.encoding_format;\n        // No encoding_format specified, defaulting to base64 for performance reasons\n        // See https://github.com/openai/openai-node/pull/1312\n        let encoding_format = hasUserProvidedEncodingFormat ? body.encoding_format : 'base64';\n        if (hasUserProvidedEncodingFormat) {\n            loggerFor(this._client).debug('embeddings/user defined encoding_format:', body.encoding_format);\n        }\n        const response = this._client.post('/embeddings', {\n            body: {\n                ...body,\n                encoding_format: encoding_format,\n            },\n            ...options,\n        });\n        // if the user specified an encoding_format, return the response as-is\n        if (hasUserProvidedEncodingFormat) {\n            return response;\n        }\n        // in this stage, we are sure the user did not specify an encoding_format\n        // and we defaulted to base64 for performance reasons\n        // we are sure then that the response is base64 encoded, let's decode it\n        // the returned result will be a float32 array since this is OpenAI API's default encoding\n        loggerFor(this._client).debug('embeddings/decoding base64 embeddings from base64');\n        return response._thenUnwrap((response) => {\n            if (response && response.data) {\n                response.data.forEach((embeddingBase64Obj) => {\n                    const embeddingBase64Str = embeddingBase64Obj.embedding;\n                    embeddingBase64Obj.embedding = toFloat32Array(embeddingBase64Str);\n                });\n            }\n            return response;\n        });\n    }\n}\n//# sourceMappingURL=embeddings.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class OutputItems extends APIResource {\n    /**\n     * Get an evaluation run output item by ID.\n     */\n    retrieve(outputItemID, params, options) {\n        const { eval_id, run_id } = params;\n        return this._client.get(path `/evals/${eval_id}/runs/${run_id}/output_items/${outputItemID}`, options);\n    }\n    /**\n     * Get a list of output items for an evaluation run.\n     */\n    list(runID, params, options) {\n        const { eval_id, ...query } = params;\n        return this._client.getAPIList(path `/evals/${eval_id}/runs/${runID}/output_items`, (CursorPage), { query, ...options });\n    }\n}\n//# sourceMappingURL=output-items.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as OutputItemsAPI from \"./output-items.mjs\";\nimport { OutputItems, } from \"./output-items.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class Runs extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.outputItems = new OutputItemsAPI.OutputItems(this._client);\n    }\n    /**\n     * Kicks off a new run for a given evaluation, specifying the data source, and what\n     * model configuration to use to test. The datasource will be validated against the\n     * schema specified in the config of the evaluation.\n     */\n    create(evalID, body, options) {\n        return this._client.post(path `/evals/${evalID}/runs`, { body, ...options });\n    }\n    /**\n     * Get an evaluation run by ID.\n     */\n    retrieve(runID, params, options) {\n        const { eval_id } = params;\n        return this._client.get(path `/evals/${eval_id}/runs/${runID}`, options);\n    }\n    /**\n     * Get a list of runs for an evaluation.\n     */\n    list(evalID, query = {}, options) {\n        return this._client.getAPIList(path `/evals/${evalID}/runs`, (CursorPage), {\n            query,\n            ...options,\n        });\n    }\n    /**\n     * Delete an eval run.\n     */\n    delete(runID, params, options) {\n        const { eval_id } = params;\n        return this._client.delete(path `/evals/${eval_id}/runs/${runID}`, options);\n    }\n    /**\n     * Cancel an ongoing evaluation run.\n     */\n    cancel(runID, params, options) {\n        const { eval_id } = params;\n        return this._client.post(path `/evals/${eval_id}/runs/${runID}`, options);\n    }\n}\nRuns.OutputItems = OutputItems;\n//# sourceMappingURL=runs.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as RunsAPI from \"./runs/runs.mjs\";\nimport { Runs, } from \"./runs/runs.mjs\";\nimport { CursorPage } from \"../../core/pagination.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class Evals extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.runs = new RunsAPI.Runs(this._client);\n    }\n    /**\n     * Create the structure of an evaluation that can be used to test a model's\n     * performance. An evaluation is a set of testing criteria and the config for a\n     * data source, which dictates the schema of the data used in the evaluation. After\n     * creating an evaluation, you can run it on different models and model parameters.\n     * We support several types of graders and datasources. For more information, see\n     * the [Evals guide](https://platform.openai.com/docs/guides/evals).\n     */\n    create(body, options) {\n        return this._client.post('/evals', { body, ...options });\n    }\n    /**\n     * Get an evaluation by ID.\n     */\n    retrieve(evalID, options) {\n        return this._client.get(path `/evals/${evalID}`, options);\n    }\n    /**\n     * Update certain properties of an evaluation.\n     */\n    update(evalID, body, options) {\n        return this._client.post(path `/evals/${evalID}`, { body, ...options });\n    }\n    /**\n     * List evaluations for a project.\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/evals', (CursorPage), { query, ...options });\n    }\n    /**\n     * Delete an evaluation.\n     */\n    delete(evalID, options) {\n        return this._client.delete(path `/evals/${evalID}`, options);\n    }\n}\nEvals.Runs = Runs;\n//# sourceMappingURL=evals.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../core/resource.mjs\";\nimport { CursorPage } from \"../core/pagination.mjs\";\nimport { buildHeaders } from \"../internal/headers.mjs\";\nimport { sleep } from \"../internal/utils/sleep.mjs\";\nimport { APIConnectionTimeoutError } from \"../error.mjs\";\nimport { multipartFormRequestOptions } from \"../internal/uploads.mjs\";\nimport { path } from \"../internal/utils/path.mjs\";\nexport class Files extends APIResource {\n    /**\n     * Upload a file that can be used across various endpoints. Individual files can be\n     * up to 512 MB, and the size of all files uploaded by one organization can be up\n     * to 1 TB.\n     *\n     * The Assistants API supports files up to 2 million tokens and of specific file\n     * types. See the\n     * [Assistants Tools guide](https://platform.openai.com/docs/assistants/tools) for\n     * details.\n     *\n     * The Fine-tuning API only supports `.jsonl` files. The input also has certain\n     * required formats for fine-tuning\n     * [chat](https://platform.openai.com/docs/api-reference/fine-tuning/chat-input) or\n     * [completions](https://platform.openai.com/docs/api-reference/fine-tuning/completions-input)\n     * models.\n     *\n     * The Batch API only supports `.jsonl` files up to 200 MB in size. The input also\n     * has a specific required\n     * [format](https://platform.openai.com/docs/api-reference/batch/request-input).\n     *\n     * Please [contact us](https://help.openai.com/) if you need to increase these\n     * storage limits.\n     */\n    create(body, options) {\n        return this._client.post('/files', multipartFormRequestOptions({ body, ...options }, this._client));\n    }\n    /**\n     * Returns information about a specific file.\n     */\n    retrieve(fileID, options) {\n        return this._client.get(path `/files/${fileID}`, options);\n    }\n    /**\n     * Returns a list of files.\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/files', (CursorPage), { query, ...options });\n    }\n    /**\n     * Delete a file.\n     */\n    delete(fileID, options) {\n        return this._client.delete(path `/files/${fileID}`, options);\n    }\n    /**\n     * Returns the contents of the specified file.\n     */\n    content(fileID, options) {\n        return this._client.get(path `/files/${fileID}/content`, {\n            ...options,\n            headers: buildHeaders([{ Accept: 'application/binary' }, options?.headers]),\n            __binaryResponse: true,\n        });\n    }\n    /**\n     * Waits for the given file to be processed, default timeout is 30 mins.\n     */\n    async waitForProcessing(id, { pollInterval = 5000, maxWait = 30 * 60 * 1000 } = {}) {\n        const TERMINAL_STATES = new Set(['processed', 'error', 'deleted']);\n        const start = Date.now();\n        let file = await this.retrieve(id);\n        while (!file.status || !TERMINAL_STATES.has(file.status)) {\n            await sleep(pollInterval);\n            file = await this.retrieve(id);\n            if (Date.now() - start > maxWait) {\n                throw new APIConnectionTimeoutError({\n                    message: `Giving up on waiting for file ${id} to finish processing after ${maxWait} milliseconds.`,\n                });\n            }\n        }\n        return file;\n    }\n}\n//# sourceMappingURL=files.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nexport class Methods extends APIResource {\n}\n//# sourceMappingURL=methods.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nexport class Graders extends APIResource {\n    /**\n     * Run a grader.\n     *\n     * @example\n     * ```ts\n     * const response = await client.fineTuning.alpha.graders.run({\n     *   grader: {\n     *     input: 'input',\n     *     name: 'name',\n     *     operation: 'eq',\n     *     reference: 'reference',\n     *     type: 'string_check',\n     *   },\n     *   model_sample: 'model_sample',\n     * });\n     * ```\n     */\n    run(body, options) {\n        return this._client.post('/fine_tuning/alpha/graders/run', { body, ...options });\n    }\n    /**\n     * Validate a grader.\n     *\n     * @example\n     * ```ts\n     * const response =\n     *   await client.fineTuning.alpha.graders.validate({\n     *     grader: {\n     *       input: 'input',\n     *       name: 'name',\n     *       operation: 'eq',\n     *       reference: 'reference',\n     *       type: 'string_check',\n     *     },\n     *   });\n     * ```\n     */\n    validate(body, options) {\n        return this._client.post('/fine_tuning/alpha/graders/validate', { body, ...options });\n    }\n}\n//# sourceMappingURL=graders.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as GradersAPI from \"./graders.mjs\";\nimport { Graders, } from \"./graders.mjs\";\nexport class Alpha extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.graders = new GradersAPI.Graders(this._client);\n    }\n}\nAlpha.Graders = Graders;\n//# sourceMappingURL=alpha.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { Page } from \"../../../core/pagination.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class Permissions extends APIResource {\n    /**\n     * **NOTE:** Calling this endpoint requires an [admin API key](../admin-api-keys).\n     *\n     * This enables organization owners to share fine-tuned models with other projects\n     * in their organization.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const permissionCreateResponse of client.fineTuning.checkpoints.permissions.create(\n     *   'ft:gpt-4o-mini-2024-07-18:org:weather:B7R9VjQd',\n     *   { project_ids: ['string'] },\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */\n    create(fineTunedModelCheckpoint, body, options) {\n        return this._client.getAPIList(path `/fine_tuning/checkpoints/${fineTunedModelCheckpoint}/permissions`, (Page), { body, method: 'post', ...options });\n    }\n    /**\n     * **NOTE:** This endpoint requires an [admin API key](../admin-api-keys).\n     *\n     * Organization owners can use this endpoint to view all permissions for a\n     * fine-tuned model checkpoint.\n     *\n     * @example\n     * ```ts\n     * const permission =\n     *   await client.fineTuning.checkpoints.permissions.retrieve(\n     *     'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     *   );\n     * ```\n     */\n    retrieve(fineTunedModelCheckpoint, query = {}, options) {\n        return this._client.get(path `/fine_tuning/checkpoints/${fineTunedModelCheckpoint}/permissions`, {\n            query,\n            ...options,\n        });\n    }\n    /**\n     * **NOTE:** This endpoint requires an [admin API key](../admin-api-keys).\n     *\n     * Organization owners can use this endpoint to delete a permission for a\n     * fine-tuned model checkpoint.\n     *\n     * @example\n     * ```ts\n     * const permission =\n     *   await client.fineTuning.checkpoints.permissions.delete(\n     *     'cp_zc4Q7MP6XxulcVzj4MZdwsAB',\n     *     {\n     *       fine_tuned_model_checkpoint:\n     *         'ft:gpt-4o-mini-2024-07-18:org:weather:B7R9VjQd',\n     *     },\n     *   );\n     * ```\n     */\n    delete(permissionID, params, options) {\n        const { fine_tuned_model_checkpoint } = params;\n        return this._client.delete(path `/fine_tuning/checkpoints/${fine_tuned_model_checkpoint}/permissions/${permissionID}`, options);\n    }\n}\n//# sourceMappingURL=permissions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as PermissionsAPI from \"./permissions.mjs\";\nimport { Permissions, } from \"./permissions.mjs\";\nexport class Checkpoints extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.permissions = new PermissionsAPI.Permissions(this._client);\n    }\n}\nCheckpoints.Permissions = Permissions;\n//# sourceMappingURL=checkpoints.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class Checkpoints extends APIResource {\n    /**\n     * List checkpoints for a fine-tuning job.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const fineTuningJobCheckpoint of client.fineTuning.jobs.checkpoints.list(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */\n    list(fineTuningJobID, query = {}, options) {\n        return this._client.getAPIList(path `/fine_tuning/jobs/${fineTuningJobID}/checkpoints`, (CursorPage), { query, ...options });\n    }\n}\n//# sourceMappingURL=checkpoints.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as CheckpointsAPI from \"./checkpoints.mjs\";\nimport { Checkpoints, } from \"./checkpoints.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class Jobs extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.checkpoints = new CheckpointsAPI.Checkpoints(this._client);\n    }\n    /**\n     * Creates a fine-tuning job which begins the process of creating a new model from\n     * a given dataset.\n     *\n     * Response includes details of the enqueued job including job status and the name\n     * of the fine-tuned models once complete.\n     *\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/model-optimization)\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.create({\n     *   model: 'gpt-4o-mini',\n     *   training_file: 'file-abc123',\n     * });\n     * ```\n     */\n    create(body, options) {\n        return this._client.post('/fine_tuning/jobs', { body, ...options });\n    }\n    /**\n     * Get info about a fine-tuning job.\n     *\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/model-optimization)\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.retrieve(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * );\n     * ```\n     */\n    retrieve(fineTuningJobID, options) {\n        return this._client.get(path `/fine_tuning/jobs/${fineTuningJobID}`, options);\n    }\n    /**\n     * List your organization's fine-tuning jobs\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const fineTuningJob of client.fineTuning.jobs.list()) {\n     *   // ...\n     * }\n     * ```\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/fine_tuning/jobs', (CursorPage), { query, ...options });\n    }\n    /**\n     * Immediately cancel a fine-tune job.\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.cancel(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * );\n     * ```\n     */\n    cancel(fineTuningJobID, options) {\n        return this._client.post(path `/fine_tuning/jobs/${fineTuningJobID}/cancel`, options);\n    }\n    /**\n     * Get status updates for a fine-tuning job.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const fineTuningJobEvent of client.fineTuning.jobs.listEvents(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */\n    listEvents(fineTuningJobID, query = {}, options) {\n        return this._client.getAPIList(path `/fine_tuning/jobs/${fineTuningJobID}/events`, (CursorPage), { query, ...options });\n    }\n    /**\n     * Pause a fine-tune job.\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.pause(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * );\n     * ```\n     */\n    pause(fineTuningJobID, options) {\n        return this._client.post(path `/fine_tuning/jobs/${fineTuningJobID}/pause`, options);\n    }\n    /**\n     * Resume a fine-tune job.\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.resume(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * );\n     * ```\n     */\n    resume(fineTuningJobID, options) {\n        return this._client.post(path `/fine_tuning/jobs/${fineTuningJobID}/resume`, options);\n    }\n}\nJobs.Checkpoints = Checkpoints;\n//# sourceMappingURL=jobs.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as MethodsAPI from \"./methods.mjs\";\nimport { Methods, } from \"./methods.mjs\";\nimport * as AlphaAPI from \"./alpha/alpha.mjs\";\nimport { Alpha } from \"./alpha/alpha.mjs\";\nimport * as CheckpointsAPI from \"./checkpoints/checkpoints.mjs\";\nimport { Checkpoints } from \"./checkpoints/checkpoints.mjs\";\nimport * as JobsAPI from \"./jobs/jobs.mjs\";\nimport { Jobs, } from \"./jobs/jobs.mjs\";\nexport class FineTuning extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.methods = new MethodsAPI.Methods(this._client);\n        this.jobs = new JobsAPI.Jobs(this._client);\n        this.checkpoints = new CheckpointsAPI.Checkpoints(this._client);\n        this.alpha = new AlphaAPI.Alpha(this._client);\n    }\n}\nFineTuning.Methods = Methods;\nFineTuning.Jobs = Jobs;\nFineTuning.Checkpoints = Checkpoints;\nFineTuning.Alpha = Alpha;\n//# sourceMappingURL=fine-tuning.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nexport class GraderModels extends APIResource {\n}\n//# sourceMappingURL=grader-models.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as GraderModelsAPI from \"./grader-models.mjs\";\nimport { GraderModels, } from \"./grader-models.mjs\";\nexport class Graders extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.graderModels = new GraderModelsAPI.GraderModels(this._client);\n    }\n}\nGraders.GraderModels = GraderModels;\n//# sourceMappingURL=graders.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../core/resource.mjs\";\nimport { multipartFormRequestOptions } from \"../internal/uploads.mjs\";\nexport class Images extends APIResource {\n    /**\n     * Creates a variation of a given image. This endpoint only supports `dall-e-2`.\n     *\n     * @example\n     * ```ts\n     * const imagesResponse = await client.images.createVariation({\n     *   image: fs.createReadStream('otter.png'),\n     * });\n     * ```\n     */\n    createVariation(body, options) {\n        return this._client.post('/images/variations', multipartFormRequestOptions({ body, ...options }, this._client));\n    }\n    edit(body, options) {\n        return this._client.post('/images/edits', multipartFormRequestOptions({ body, ...options, stream: body.stream ?? false }, this._client));\n    }\n    generate(body, options) {\n        return this._client.post('/images/generations', { body, ...options, stream: body.stream ?? false });\n    }\n}\n//# sourceMappingURL=images.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../core/resource.mjs\";\nimport { Page } from \"../core/pagination.mjs\";\nimport { path } from \"../internal/utils/path.mjs\";\nexport class Models extends APIResource {\n    /**\n     * Retrieves a model instance, providing basic information about the model such as\n     * the owner and permissioning.\n     */\n    retrieve(model, options) {\n        return this._client.get(path `/models/${model}`, options);\n    }\n    /**\n     * Lists the currently available models, and provides basic information about each\n     * one such as the owner and availability.\n     */\n    list(options) {\n        return this._client.getAPIList('/models', (Page), options);\n    }\n    /**\n     * Delete a fine-tuned model. You must have the Owner role in your organization to\n     * delete a model.\n     */\n    delete(model, options) {\n        return this._client.delete(path `/models/${model}`, options);\n    }\n}\n//# sourceMappingURL=models.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../core/resource.mjs\";\nexport class Moderations extends APIResource {\n    /**\n     * Classifies if text and/or image inputs are potentially harmful. Learn more in\n     * the [moderation guide](https://platform.openai.com/docs/guides/moderation).\n     */\n    create(body, options) {\n        return this._client.post('/moderations', { body, ...options });\n    }\n}\n//# sourceMappingURL=moderations.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nexport class ClientSecrets extends APIResource {\n    /**\n     * Create a Realtime client secret with an associated session configuration.\n     */\n    create(body, options) {\n        return this._client.post('/realtime/client_secrets', { body, ...options });\n    }\n}\n//# sourceMappingURL=client-secrets.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as ClientSecretsAPI from \"./client-secrets.mjs\";\nimport { ClientSecrets, } from \"./client-secrets.mjs\";\nexport class Realtime extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.clientSecrets = new ClientSecretsAPI.ClientSecrets(this._client);\n    }\n}\nRealtime.ClientSecrets = ClientSecrets;\n//# sourceMappingURL=realtime.mjs.map","import { OpenAIError } from \"../error.mjs\";\nimport { isAutoParsableResponseFormat } from \"../lib/parser.mjs\";\nexport function maybeParseResponse(response, params) {\n    if (!params || !hasAutoParseableInput(params)) {\n        return {\n            ...response,\n            output_parsed: null,\n            output: response.output.map((item) => {\n                if (item.type === 'function_call') {\n                    return {\n                        ...item,\n                        parsed_arguments: null,\n                    };\n                }\n                if (item.type === 'message') {\n                    return {\n                        ...item,\n                        content: item.content.map((content) => ({\n                            ...content,\n                            parsed: null,\n                        })),\n                    };\n                }\n                else {\n                    return item;\n                }\n            }),\n        };\n    }\n    return parseResponse(response, params);\n}\nexport function parseResponse(response, params) {\n    const output = response.output.map((item) => {\n        if (item.type === 'function_call') {\n            return {\n                ...item,\n                parsed_arguments: parseToolCall(params, item),\n            };\n        }\n        if (item.type === 'message') {\n            const content = item.content.map((content) => {\n                if (content.type === 'output_text') {\n                    return {\n                        ...content,\n                        parsed: parseTextFormat(params, content.text),\n                    };\n                }\n                return content;\n            });\n            return {\n                ...item,\n                content,\n            };\n        }\n        return item;\n    });\n    const parsed = Object.assign({}, response, { output });\n    if (!Object.getOwnPropertyDescriptor(response, 'output_text')) {\n        addOutputText(parsed);\n    }\n    Object.defineProperty(parsed, 'output_parsed', {\n        enumerable: true,\n        get() {\n            for (const output of parsed.output) {\n                if (output.type !== 'message') {\n                    continue;\n                }\n                for (const content of output.content) {\n                    if (content.type === 'output_text' && content.parsed !== null) {\n                        return content.parsed;\n                    }\n                }\n            }\n            return null;\n        },\n    });\n    return parsed;\n}\nfunction parseTextFormat(params, content) {\n    if (params.text?.format?.type !== 'json_schema') {\n        return null;\n    }\n    if ('$parseRaw' in params.text?.format) {\n        const text_format = params.text?.format;\n        return text_format.$parseRaw(content);\n    }\n    return JSON.parse(content);\n}\nexport function hasAutoParseableInput(params) {\n    if (isAutoParsableResponseFormat(params.text?.format)) {\n        return true;\n    }\n    return false;\n}\nexport function makeParseableResponseTool(tool, { parser, callback, }) {\n    const obj = { ...tool };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-tool',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n        $callback: {\n            value: callback,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function isAutoParsableTool(tool) {\n    return tool?.['$brand'] === 'auto-parseable-tool';\n}\nfunction getInputToolByName(input_tools, name) {\n    return input_tools.find((tool) => tool.type === 'function' && tool.name === name);\n}\nfunction parseToolCall(params, toolCall) {\n    const inputTool = getInputToolByName(params.tools ?? [], toolCall.name);\n    return {\n        ...toolCall,\n        ...toolCall,\n        parsed_arguments: isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCall.arguments)\n            : inputTool?.strict ? JSON.parse(toolCall.arguments)\n                : null,\n    };\n}\nexport function shouldParseToolCall(params, toolCall) {\n    if (!params) {\n        return false;\n    }\n    const inputTool = getInputToolByName(params.tools ?? [], toolCall.name);\n    return isAutoParsableTool(inputTool) || inputTool?.strict || false;\n}\nexport function validateInputTools(tools) {\n    for (const tool of tools ?? []) {\n        if (tool.type !== 'function') {\n            throw new OpenAIError(`Currently only \\`function\\` tool types support auto-parsing; Received \\`${tool.type}\\``);\n        }\n        if (tool.function.strict !== true) {\n            throw new OpenAIError(`The \\`${tool.function.name}\\` tool is not marked with \\`strict: true\\`. Only strict function tools can be auto-parsed`);\n        }\n    }\n}\nexport function addOutputText(rsp) {\n    const texts = [];\n    for (const output of rsp.output) {\n        if (output.type !== 'message') {\n            continue;\n        }\n        for (const content of output.content) {\n            if (content.type === 'output_text') {\n                texts.push(content.text);\n            }\n        }\n    }\n    rsp.output_text = texts.join('');\n}\n//# sourceMappingURL=ResponsesParser.mjs.map","var _ResponseStream_instances, _ResponseStream_params, _ResponseStream_currentResponseSnapshot, _ResponseStream_finalResponse, _ResponseStream_beginRequest, _ResponseStream_addEvent, _ResponseStream_endRequest, _ResponseStream_accumulateResponse;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"../../internal/tslib.mjs\";\nimport { APIUserAbortError, OpenAIError } from \"../../error.mjs\";\nimport { EventStream } from \"../EventStream.mjs\";\nimport { maybeParseResponse } from \"../ResponsesParser.mjs\";\nexport class ResponseStream extends EventStream {\n    constructor(params) {\n        super();\n        _ResponseStream_instances.add(this);\n        _ResponseStream_params.set(this, void 0);\n        _ResponseStream_currentResponseSnapshot.set(this, void 0);\n        _ResponseStream_finalResponse.set(this, void 0);\n        __classPrivateFieldSet(this, _ResponseStream_params, params, \"f\");\n    }\n    static createResponse(client, params, options) {\n        const runner = new ResponseStream(params);\n        runner._run(() => runner._createOrRetrieveResponse(client, params, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    async _createOrRetrieveResponse(client, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _ResponseStream_instances, \"m\", _ResponseStream_beginRequest).call(this);\n        let stream;\n        let starting_after = null;\n        if ('response_id' in params) {\n            stream = await client.responses.retrieve(params.response_id, { stream: true }, { ...options, signal: this.controller.signal, stream: true });\n            starting_after = params.starting_after ?? null;\n        }\n        else {\n            stream = await client.responses.create({ ...params, stream: true }, { ...options, signal: this.controller.signal });\n        }\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _ResponseStream_instances, \"m\", _ResponseStream_addEvent).call(this, event, starting_after);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return __classPrivateFieldGet(this, _ResponseStream_instances, \"m\", _ResponseStream_endRequest).call(this);\n    }\n    [(_ResponseStream_params = new WeakMap(), _ResponseStream_currentResponseSnapshot = new WeakMap(), _ResponseStream_finalResponse = new WeakMap(), _ResponseStream_instances = new WeakSet(), _ResponseStream_beginRequest = function _ResponseStream_beginRequest() {\n        if (this.ended)\n            return;\n        __classPrivateFieldSet(this, _ResponseStream_currentResponseSnapshot, undefined, \"f\");\n    }, _ResponseStream_addEvent = function _ResponseStream_addEvent(event, starting_after) {\n        if (this.ended)\n            return;\n        const maybeEmit = (name, event) => {\n            if (starting_after == null || event.sequence_number > starting_after) {\n                this._emit(name, event);\n            }\n        };\n        const response = __classPrivateFieldGet(this, _ResponseStream_instances, \"m\", _ResponseStream_accumulateResponse).call(this, event);\n        maybeEmit('event', event);\n        switch (event.type) {\n            case 'response.output_text.delta': {\n                const output = response.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'message') {\n                    const content = output.content[event.content_index];\n                    if (!content) {\n                        throw new OpenAIError(`missing content at index ${event.content_index}`);\n                    }\n                    if (content.type !== 'output_text') {\n                        throw new OpenAIError(`expected content to be 'output_text', got ${content.type}`);\n                    }\n                    maybeEmit('response.output_text.delta', {\n                        ...event,\n                        snapshot: content.text,\n                    });\n                }\n                break;\n            }\n            case 'response.function_call_arguments.delta': {\n                const output = response.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'function_call') {\n                    maybeEmit('response.function_call_arguments.delta', {\n                        ...event,\n                        snapshot: output.arguments,\n                    });\n                }\n                break;\n            }\n            default:\n                maybeEmit(event.type, event);\n                break;\n        }\n    }, _ResponseStream_endRequest = function _ResponseStream_endRequest() {\n        if (this.ended) {\n            throw new OpenAIError(`stream has ended, this shouldn't happen`);\n        }\n        const snapshot = __classPrivateFieldGet(this, _ResponseStream_currentResponseSnapshot, \"f\");\n        if (!snapshot) {\n            throw new OpenAIError(`request ended without sending any events`);\n        }\n        __classPrivateFieldSet(this, _ResponseStream_currentResponseSnapshot, undefined, \"f\");\n        const parsedResponse = finalizeResponse(snapshot, __classPrivateFieldGet(this, _ResponseStream_params, \"f\"));\n        __classPrivateFieldSet(this, _ResponseStream_finalResponse, parsedResponse, \"f\");\n        return parsedResponse;\n    }, _ResponseStream_accumulateResponse = function _ResponseStream_accumulateResponse(event) {\n        let snapshot = __classPrivateFieldGet(this, _ResponseStream_currentResponseSnapshot, \"f\");\n        if (!snapshot) {\n            if (event.type !== 'response.created') {\n                throw new OpenAIError(`When snapshot hasn't been set yet, expected 'response.created' event, got ${event.type}`);\n            }\n            snapshot = __classPrivateFieldSet(this, _ResponseStream_currentResponseSnapshot, event.response, \"f\");\n            return snapshot;\n        }\n        switch (event.type) {\n            case 'response.output_item.added': {\n                snapshot.output.push(event.item);\n                break;\n            }\n            case 'response.content_part.added': {\n                const output = snapshot.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                const type = output.type;\n                const part = event.part;\n                if (type === 'message' && part.type !== 'reasoning_text') {\n                    output.content.push(part);\n                }\n                else if (type === 'reasoning' && part.type === 'reasoning_text') {\n                    if (!output.content) {\n                        output.content = [];\n                    }\n                    output.content.push(part);\n                }\n                break;\n            }\n            case 'response.output_text.delta': {\n                const output = snapshot.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'message') {\n                    const content = output.content[event.content_index];\n                    if (!content) {\n                        throw new OpenAIError(`missing content at index ${event.content_index}`);\n                    }\n                    if (content.type !== 'output_text') {\n                        throw new OpenAIError(`expected content to be 'output_text', got ${content.type}`);\n                    }\n                    content.text += event.delta;\n                }\n                break;\n            }\n            case 'response.function_call_arguments.delta': {\n                const output = snapshot.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'function_call') {\n                    output.arguments += event.delta;\n                }\n                break;\n            }\n            case 'response.reasoning_text.delta': {\n                const output = snapshot.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'reasoning') {\n                    const content = output.content?.[event.content_index];\n                    if (!content) {\n                        throw new OpenAIError(`missing content at index ${event.content_index}`);\n                    }\n                    if (content.type !== 'reasoning_text') {\n                        throw new OpenAIError(`expected content to be 'reasoning_text', got ${content.type}`);\n                    }\n                    content.text += event.delta;\n                }\n                break;\n            }\n            case 'response.completed': {\n                __classPrivateFieldSet(this, _ResponseStream_currentResponseSnapshot, event.response, \"f\");\n                break;\n            }\n        }\n        return snapshot;\n    }, Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        this.on('event', (event) => {\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(event);\n            }\n            else {\n                pushQueue.push(event);\n            }\n        });\n        this.on('end', () => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on('abort', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on('error', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async () => {\n                if (!pushQueue.length) {\n                    if (done) {\n                        return { value: undefined, done: true };\n                    }\n                    return new Promise((resolve, reject) => readQueue.push({ resolve, reject })).then((event) => (event ? { value: event, done: false } : { value: undefined, done: true }));\n                }\n                const event = pushQueue.shift();\n                return { value: event, done: false };\n            },\n            return: async () => {\n                this.abort();\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    /**\n     * @returns a promise that resolves with the final Response, or rejects\n     * if an error occurred or the stream ended prematurely without producing a REsponse.\n     */\n    async finalResponse() {\n        await this.done();\n        const response = __classPrivateFieldGet(this, _ResponseStream_finalResponse, \"f\");\n        if (!response)\n            throw new OpenAIError('stream ended without producing a ChatCompletion');\n        return response;\n    }\n}\nfunction finalizeResponse(snapshot, params) {\n    return maybeParseResponse(snapshot, params);\n}\n//# sourceMappingURL=ResponseStream.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { CursorPage } from \"../../core/pagination.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class InputItems extends APIResource {\n    /**\n     * Returns a list of input items for a given response.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const responseItem of client.responses.inputItems.list(\n     *   'response_id',\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */\n    list(responseID, query = {}, options) {\n        return this._client.getAPIList(path `/responses/${responseID}/input_items`, (CursorPage), { query, ...options });\n    }\n}\n//# sourceMappingURL=input-items.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { parseResponse, addOutputText, } from \"../../lib/ResponsesParser.mjs\";\nimport { ResponseStream } from \"../../lib/responses/ResponseStream.mjs\";\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as InputItemsAPI from \"./input-items.mjs\";\nimport { InputItems } from \"./input-items.mjs\";\nimport { buildHeaders } from \"../../internal/headers.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class Responses extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.inputItems = new InputItemsAPI.InputItems(this._client);\n    }\n    create(body, options) {\n        return this._client.post('/responses', { body, ...options, stream: body.stream ?? false })._thenUnwrap((rsp) => {\n            if ('object' in rsp && rsp.object === 'response') {\n                addOutputText(rsp);\n            }\n            return rsp;\n        });\n    }\n    retrieve(responseID, query = {}, options) {\n        return this._client.get(path `/responses/${responseID}`, {\n            query,\n            ...options,\n            stream: query?.stream ?? false,\n        })._thenUnwrap((rsp) => {\n            if ('object' in rsp && rsp.object === 'response') {\n                addOutputText(rsp);\n            }\n            return rsp;\n        });\n    }\n    /**\n     * Deletes a model response with the given ID.\n     *\n     * @example\n     * ```ts\n     * await client.responses.delete(\n     *   'resp_677efb5139a88190b512bc3fef8e535d',\n     * );\n     * ```\n     */\n    delete(responseID, options) {\n        return this._client.delete(path `/responses/${responseID}`, {\n            ...options,\n            headers: buildHeaders([{ Accept: '*/*' }, options?.headers]),\n        });\n    }\n    parse(body, options) {\n        return this._client.responses\n            .create(body, options)\n            ._thenUnwrap((response) => parseResponse(response, body));\n    }\n    /**\n     * Creates a model response stream\n     */\n    stream(body, options) {\n        return ResponseStream.createResponse(this._client, body, options);\n    }\n    /**\n     * Cancels a model response with the given ID. Only responses created with the\n     * `background` parameter set to `true` can be cancelled.\n     * [Learn more](https://platform.openai.com/docs/guides/background).\n     *\n     * @example\n     * ```ts\n     * const response = await client.responses.cancel(\n     *   'resp_677efb5139a88190b512bc3fef8e535d',\n     * );\n     * ```\n     */\n    cancel(responseID, options) {\n        return this._client.post(path `/responses/${responseID}/cancel`, options);\n    }\n}\nResponses.InputItems = InputItems;\n//# sourceMappingURL=responses.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { multipartFormRequestOptions } from \"../../internal/uploads.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class Parts extends APIResource {\n    /**\n     * Adds a\n     * [Part](https://platform.openai.com/docs/api-reference/uploads/part-object) to an\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object) object.\n     * A Part represents a chunk of bytes from the file you are trying to upload.\n     *\n     * Each Part can be at most 64 MB, and you can add Parts until you hit the Upload\n     * maximum of 8 GB.\n     *\n     * It is possible to add multiple Parts in parallel. You can decide the intended\n     * order of the Parts when you\n     * [complete the Upload](https://platform.openai.com/docs/api-reference/uploads/complete).\n     */\n    create(uploadID, body, options) {\n        return this._client.post(path `/uploads/${uploadID}/parts`, multipartFormRequestOptions({ body, ...options }, this._client));\n    }\n}\n//# sourceMappingURL=parts.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as PartsAPI from \"./parts.mjs\";\nimport { Parts } from \"./parts.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class Uploads extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.parts = new PartsAPI.Parts(this._client);\n    }\n    /**\n     * Creates an intermediate\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object) object\n     * that you can add\n     * [Parts](https://platform.openai.com/docs/api-reference/uploads/part-object) to.\n     * Currently, an Upload can accept at most 8 GB in total and expires after an hour\n     * after you create it.\n     *\n     * Once you complete the Upload, we will create a\n     * [File](https://platform.openai.com/docs/api-reference/files/object) object that\n     * contains all the parts you uploaded. This File is usable in the rest of our\n     * platform as a regular File object.\n     *\n     * For certain `purpose` values, the correct `mime_type` must be specified. Please\n     * refer to documentation for the\n     * [supported MIME types for your use case](https://platform.openai.com/docs/assistants/tools/file-search#supported-files).\n     *\n     * For guidance on the proper filename extensions for each purpose, please follow\n     * the documentation on\n     * [creating a File](https://platform.openai.com/docs/api-reference/files/create).\n     */\n    create(body, options) {\n        return this._client.post('/uploads', { body, ...options });\n    }\n    /**\n     * Cancels the Upload. No Parts may be added after an Upload is cancelled.\n     */\n    cancel(uploadID, options) {\n        return this._client.post(path `/uploads/${uploadID}/cancel`, options);\n    }\n    /**\n     * Completes the\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object).\n     *\n     * Within the returned Upload object, there is a nested\n     * [File](https://platform.openai.com/docs/api-reference/files/object) object that\n     * is ready to use in the rest of the platform.\n     *\n     * You can specify the order of the Parts by passing in an ordered list of the Part\n     * IDs.\n     *\n     * The number of bytes uploaded upon completion must match the number of bytes\n     * initially specified when creating the Upload object. No Parts may be added after\n     * an Upload is completed.\n     */\n    complete(uploadID, body, options) {\n        return this._client.post(path `/uploads/${uploadID}/complete`, { body, ...options });\n    }\n}\nUploads.Parts = Parts;\n//# sourceMappingURL=uploads.mjs.map","/**\n * Like `Promise.allSettled()` but throws an error if any promises are rejected.\n */\nexport const allSettledWithThrow = async (promises) => {\n    const results = await Promise.allSettled(promises);\n    const rejected = results.filter((result) => result.status === 'rejected');\n    if (rejected.length) {\n        for (const result of rejected) {\n            console.error(result.reason);\n        }\n        throw new Error(`${rejected.length} promise(s) failed - see the above errors`);\n    }\n    // Note: TS was complaining about using `.filter().map()` here for some reason\n    const values = [];\n    for (const result of results) {\n        if (result.status === 'fulfilled') {\n            values.push(result.value);\n        }\n    }\n    return values;\n};\n//# sourceMappingURL=Util.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { CursorPage } from \"../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../internal/headers.mjs\";\nimport { sleep } from \"../../internal/utils/sleep.mjs\";\nimport { allSettledWithThrow } from \"../../lib/Util.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class FileBatches extends APIResource {\n    /**\n     * Create a vector store file batch.\n     */\n    create(vectorStoreID, body, options) {\n        return this._client.post(path `/vector_stores/${vectorStoreID}/file_batches`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Retrieves a vector store file batch.\n     */\n    retrieve(batchID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.get(path `/vector_stores/${vector_store_id}/file_batches/${batchID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Cancel a vector store file batch. This attempts to cancel the processing of\n     * files in this batch as soon as possible.\n     */\n    cancel(batchID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.post(path `/vector_stores/${vector_store_id}/file_batches/${batchID}/cancel`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Create a vector store batch and poll until all files have been processed.\n     */\n    async createAndPoll(vectorStoreId, body, options) {\n        const batch = await this.create(vectorStoreId, body);\n        return await this.poll(vectorStoreId, batch.id, options);\n    }\n    /**\n     * Returns a list of vector store files in a batch.\n     */\n    listFiles(batchID, params, options) {\n        const { vector_store_id, ...query } = params;\n        return this._client.getAPIList(path `/vector_stores/${vector_store_id}/file_batches/${batchID}/files`, (CursorPage), { query, ...options, headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]) });\n    }\n    /**\n     * Wait for the given file batch to be processed.\n     *\n     * Note: this will return even if one of the files failed to process, you need to\n     * check batch.file_counts.failed_count to handle this case.\n     */\n    async poll(vectorStoreID, batchID, options) {\n        const headers = buildHeaders([\n            options?.headers,\n            {\n                'X-Stainless-Poll-Helper': 'true',\n                'X-Stainless-Custom-Poll-Interval': options?.pollIntervalMs?.toString() ?? undefined,\n            },\n        ]);\n        while (true) {\n            const { data: batch, response } = await this.retrieve(batchID, { vector_store_id: vectorStoreID }, {\n                ...options,\n                headers,\n            }).withResponse();\n            switch (batch.status) {\n                case 'in_progress':\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    }\n                    else {\n                        const headerInterval = response.headers.get('openai-poll-after-ms');\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await sleep(sleepInterval);\n                    break;\n                case 'failed':\n                case 'cancelled':\n                case 'completed':\n                    return batch;\n            }\n        }\n    }\n    /**\n     * Uploads the given files concurrently and then creates a vector store file batch.\n     *\n     * The concurrency limit is configurable using the `maxConcurrency` parameter.\n     */\n    async uploadAndPoll(vectorStoreId, { files, fileIds = [] }, options) {\n        if (files == null || files.length == 0) {\n            throw new Error(`No \\`files\\` provided to process. If you've already uploaded files you should use \\`.createAndPoll()\\` instead`);\n        }\n        const configuredConcurrency = options?.maxConcurrency ?? 5;\n        // We cap the number of workers at the number of files (so we don't start any unnecessary workers)\n        const concurrencyLimit = Math.min(configuredConcurrency, files.length);\n        const client = this._client;\n        const fileIterator = files.values();\n        const allFileIds = [...fileIds];\n        // This code is based on this design. The libraries don't accommodate our environment limits.\n        // https://stackoverflow.com/questions/40639432/what-is-the-best-way-to-limit-concurrency-when-using-es6s-promise-all\n        async function processFiles(iterator) {\n            for (let item of iterator) {\n                const fileObj = await client.files.create({ file: item, purpose: 'assistants' }, options);\n                allFileIds.push(fileObj.id);\n            }\n        }\n        // Start workers to process results\n        const workers = Array(concurrencyLimit).fill(fileIterator).map(processFiles);\n        // Wait for all processing to complete.\n        await allSettledWithThrow(workers);\n        return await this.createAndPoll(vectorStoreId, {\n            file_ids: allFileIds,\n        });\n    }\n}\n//# sourceMappingURL=file-batches.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { CursorPage, Page } from \"../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../internal/headers.mjs\";\nimport { sleep } from \"../../internal/utils.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class Files extends APIResource {\n    /**\n     * Create a vector store file by attaching a\n     * [File](https://platform.openai.com/docs/api-reference/files) to a\n     * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object).\n     */\n    create(vectorStoreID, body, options) {\n        return this._client.post(path `/vector_stores/${vectorStoreID}/files`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Retrieves a vector store file.\n     */\n    retrieve(fileID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.get(path `/vector_stores/${vector_store_id}/files/${fileID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Update attributes on a vector store file.\n     */\n    update(fileID, params, options) {\n        const { vector_store_id, ...body } = params;\n        return this._client.post(path `/vector_stores/${vector_store_id}/files/${fileID}`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Returns a list of vector store files.\n     */\n    list(vectorStoreID, query = {}, options) {\n        return this._client.getAPIList(path `/vector_stores/${vectorStoreID}/files`, (CursorPage), {\n            query,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Delete a vector store file. This will remove the file from the vector store but\n     * the file itself will not be deleted. To delete the file, use the\n     * [delete file](https://platform.openai.com/docs/api-reference/files/delete)\n     * endpoint.\n     */\n    delete(fileID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.delete(path `/vector_stores/${vector_store_id}/files/${fileID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Attach a file to the given vector store and wait for it to be processed.\n     */\n    async createAndPoll(vectorStoreId, body, options) {\n        const file = await this.create(vectorStoreId, body, options);\n        return await this.poll(vectorStoreId, file.id, options);\n    }\n    /**\n     * Wait for the vector store file to finish processing.\n     *\n     * Note: this will return even if the file failed to process, you need to check\n     * file.last_error and file.status to handle these cases\n     */\n    async poll(vectorStoreID, fileID, options) {\n        const headers = buildHeaders([\n            options?.headers,\n            {\n                'X-Stainless-Poll-Helper': 'true',\n                'X-Stainless-Custom-Poll-Interval': options?.pollIntervalMs?.toString() ?? undefined,\n            },\n        ]);\n        while (true) {\n            const fileResponse = await this.retrieve(fileID, {\n                vector_store_id: vectorStoreID,\n            }, { ...options, headers }).withResponse();\n            const file = fileResponse.data;\n            switch (file.status) {\n                case 'in_progress':\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    }\n                    else {\n                        const headerInterval = fileResponse.response.headers.get('openai-poll-after-ms');\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await sleep(sleepInterval);\n                    break;\n                case 'failed':\n                case 'completed':\n                    return file;\n            }\n        }\n    }\n    /**\n     * Upload a file to the `files` API and then attach it to the given vector store.\n     *\n     * Note the file will be asynchronously processed (you can use the alternative\n     * polling helper method to wait for processing to complete).\n     */\n    async upload(vectorStoreId, file, options) {\n        const fileInfo = await this._client.files.create({ file: file, purpose: 'assistants' }, options);\n        return this.create(vectorStoreId, { file_id: fileInfo.id }, options);\n    }\n    /**\n     * Add a file to a vector store and poll until processing is complete.\n     */\n    async uploadAndPoll(vectorStoreId, file, options) {\n        const fileInfo = await this.upload(vectorStoreId, file, options);\n        return await this.poll(vectorStoreId, fileInfo.id, options);\n    }\n    /**\n     * Retrieve the parsed contents of a vector store file.\n     */\n    content(fileID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.getAPIList(path `/vector_stores/${vector_store_id}/files/${fileID}/content`, (Page), { ...options, headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]) });\n    }\n}\n//# sourceMappingURL=files.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as FileBatchesAPI from \"./file-batches.mjs\";\nimport { FileBatches, } from \"./file-batches.mjs\";\nimport * as FilesAPI from \"./files.mjs\";\nimport { Files, } from \"./files.mjs\";\nimport { CursorPage, Page } from \"../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../internal/headers.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class VectorStores extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.files = new FilesAPI.Files(this._client);\n        this.fileBatches = new FileBatchesAPI.FileBatches(this._client);\n    }\n    /**\n     * Create a vector store.\n     */\n    create(body, options) {\n        return this._client.post('/vector_stores', {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Retrieves a vector store.\n     */\n    retrieve(vectorStoreID, options) {\n        return this._client.get(path `/vector_stores/${vectorStoreID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Modifies a vector store.\n     */\n    update(vectorStoreID, body, options) {\n        return this._client.post(path `/vector_stores/${vectorStoreID}`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Returns a list of vector stores.\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/vector_stores', (CursorPage), {\n            query,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Delete a vector store.\n     */\n    delete(vectorStoreID, options) {\n        return this._client.delete(path `/vector_stores/${vectorStoreID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Search a vector store for relevant chunks based on a query and file attributes\n     * filter.\n     */\n    search(vectorStoreID, body, options) {\n        return this._client.getAPIList(path `/vector_stores/${vectorStoreID}/search`, (Page), {\n            body,\n            method: 'post',\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n}\nVectorStores.Files = Files;\nVectorStores.FileBatches = FileBatches;\n//# sourceMappingURL=vector-stores.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _Webhooks_instances, _Webhooks_validateSecret, _Webhooks_getRequiredHeader;\nimport { __classPrivateFieldGet } from \"../internal/tslib.mjs\";\nimport { InvalidWebhookSignatureError } from \"../error.mjs\";\nimport { APIResource } from \"../core/resource.mjs\";\nimport { buildHeaders } from \"../internal/headers.mjs\";\nexport class Webhooks extends APIResource {\n    constructor() {\n        super(...arguments);\n        _Webhooks_instances.add(this);\n    }\n    /**\n     * Validates that the given payload was sent by OpenAI and parses the payload.\n     */\n    async unwrap(payload, headers, secret = this._client.webhookSecret, tolerance = 300) {\n        await this.verifySignature(payload, headers, secret, tolerance);\n        return JSON.parse(payload);\n    }\n    /**\n     * Validates whether or not the webhook payload was sent by OpenAI.\n     *\n     * An error will be raised if the webhook payload was not sent by OpenAI.\n     *\n     * @param payload - The webhook payload\n     * @param headers - The webhook headers\n     * @param secret - The webhook secret (optional, will use client secret if not provided)\n     * @param tolerance - Maximum age of the webhook in seconds (default: 300 = 5 minutes)\n     */\n    async verifySignature(payload, headers, secret = this._client.webhookSecret, tolerance = 300) {\n        if (typeof crypto === 'undefined' ||\n            typeof crypto.subtle.importKey !== 'function' ||\n            typeof crypto.subtle.verify !== 'function') {\n            throw new Error('Webhook signature verification is only supported when the `crypto` global is defined');\n        }\n        __classPrivateFieldGet(this, _Webhooks_instances, \"m\", _Webhooks_validateSecret).call(this, secret);\n        const headersObj = buildHeaders([headers]).values;\n        const signatureHeader = __classPrivateFieldGet(this, _Webhooks_instances, \"m\", _Webhooks_getRequiredHeader).call(this, headersObj, 'webhook-signature');\n        const timestamp = __classPrivateFieldGet(this, _Webhooks_instances, \"m\", _Webhooks_getRequiredHeader).call(this, headersObj, 'webhook-timestamp');\n        const webhookId = __classPrivateFieldGet(this, _Webhooks_instances, \"m\", _Webhooks_getRequiredHeader).call(this, headersObj, 'webhook-id');\n        // Validate timestamp to prevent replay attacks\n        const timestampSeconds = parseInt(timestamp, 10);\n        if (isNaN(timestampSeconds)) {\n            throw new InvalidWebhookSignatureError('Invalid webhook timestamp format');\n        }\n        const nowSeconds = Math.floor(Date.now() / 1000);\n        if (nowSeconds - timestampSeconds > tolerance) {\n            throw new InvalidWebhookSignatureError('Webhook timestamp is too old');\n        }\n        if (timestampSeconds > nowSeconds + tolerance) {\n            throw new InvalidWebhookSignatureError('Webhook timestamp is too new');\n        }\n        // Extract signatures from v1,<base64> format\n        // The signature header can have multiple values, separated by spaces.\n        // Each value is in the format v1,<base64>. We should accept if any match.\n        const signatures = signatureHeader\n            .split(' ')\n            .map((part) => (part.startsWith('v1,') ? part.substring(3) : part));\n        // Decode the secret if it starts with whsec_\n        const decodedSecret = secret.startsWith('whsec_') ?\n            Buffer.from(secret.replace('whsec_', ''), 'base64')\n            : Buffer.from(secret, 'utf-8');\n        // Create the signed payload: {webhook_id}.{timestamp}.{payload}\n        const signedPayload = webhookId ? `${webhookId}.${timestamp}.${payload}` : `${timestamp}.${payload}`;\n        // Import the secret as a cryptographic key for HMAC\n        const key = await crypto.subtle.importKey('raw', decodedSecret, { name: 'HMAC', hash: 'SHA-256' }, false, ['verify']);\n        // Check if any signature matches using timing-safe WebCrypto verify\n        for (const signature of signatures) {\n            try {\n                const signatureBytes = Buffer.from(signature, 'base64');\n                const isValid = await crypto.subtle.verify('HMAC', key, signatureBytes, new TextEncoder().encode(signedPayload));\n                if (isValid) {\n                    return; // Valid signature found\n                }\n            }\n            catch {\n                // Invalid base64 or signature format, continue to next signature\n                continue;\n            }\n        }\n        throw new InvalidWebhookSignatureError('The given webhook signature does not match the expected signature');\n    }\n}\n_Webhooks_instances = new WeakSet(), _Webhooks_validateSecret = function _Webhooks_validateSecret(secret) {\n    if (typeof secret !== 'string' || secret.length === 0) {\n        throw new Error(`The webhook secret must either be set using the env var, OPENAI_WEBHOOK_SECRET, on the client class, OpenAI({ webhookSecret: '123' }), or passed to this function`);\n    }\n}, _Webhooks_getRequiredHeader = function _Webhooks_getRequiredHeader(headers, name) {\n    if (!headers) {\n        throw new Error(`Headers are required`);\n    }\n    const value = headers.get(name);\n    if (value === null || value === undefined) {\n        throw new Error(`Missing required header: ${name}`);\n    }\n    return value;\n};\n//# sourceMappingURL=webhooks.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _OpenAI_instances, _a, _OpenAI_encoder, _OpenAI_baseURLOverridden;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"./internal/tslib.mjs\";\nimport { uuid4 } from \"./internal/utils/uuid.mjs\";\nimport { validatePositiveInteger, isAbsoluteURL, safeJSON } from \"./internal/utils/values.mjs\";\nimport { sleep } from \"./internal/utils/sleep.mjs\";\nimport { castToError, isAbortError } from \"./internal/errors.mjs\";\nimport { getPlatformHeaders } from \"./internal/detect-platform.mjs\";\nimport * as Shims from \"./internal/shims.mjs\";\nimport * as Opts from \"./internal/request-options.mjs\";\nimport * as qs from \"./internal/qs/index.mjs\";\nimport { VERSION } from \"./version.mjs\";\nimport * as Errors from \"./core/error.mjs\";\nimport * as Pagination from \"./core/pagination.mjs\";\nimport * as Uploads from \"./core/uploads.mjs\";\nimport * as API from \"./resources/index.mjs\";\nimport { APIPromise } from \"./core/api-promise.mjs\";\nimport { Batches, } from \"./resources/batches.mjs\";\nimport { Completions, } from \"./resources/completions.mjs\";\nimport { Embeddings, } from \"./resources/embeddings.mjs\";\nimport { Files, } from \"./resources/files.mjs\";\nimport { Images, } from \"./resources/images.mjs\";\nimport { Models } from \"./resources/models.mjs\";\nimport { Moderations, } from \"./resources/moderations.mjs\";\nimport { Webhooks } from \"./resources/webhooks.mjs\";\nimport { Audio } from \"./resources/audio/audio.mjs\";\nimport { Beta } from \"./resources/beta/beta.mjs\";\nimport { Chat } from \"./resources/chat/chat.mjs\";\nimport { Containers, } from \"./resources/containers/containers.mjs\";\nimport { Conversations } from \"./resources/conversations/conversations.mjs\";\nimport { Evals, } from \"./resources/evals/evals.mjs\";\nimport { FineTuning } from \"./resources/fine-tuning/fine-tuning.mjs\";\nimport { Graders } from \"./resources/graders/graders.mjs\";\nimport { Realtime } from \"./resources/realtime/realtime.mjs\";\nimport { Responses } from \"./resources/responses/responses.mjs\";\nimport { Uploads as UploadsAPIUploads, } from \"./resources/uploads/uploads.mjs\";\nimport { VectorStores, } from \"./resources/vector-stores/vector-stores.mjs\";\nimport { isRunningInBrowser } from \"./internal/detect-platform.mjs\";\nimport { buildHeaders } from \"./internal/headers.mjs\";\nimport { readEnv } from \"./internal/utils/env.mjs\";\nimport { formatRequestDetails, loggerFor, parseLogLevel, } from \"./internal/utils/log.mjs\";\nimport { isEmptyObj } from \"./internal/utils/values.mjs\";\n/**\n * API Client for interfacing with the OpenAI API.\n */\nexport class OpenAI {\n    /**\n     * API Client for interfacing with the OpenAI API.\n     *\n     * @param {string | undefined} [opts.apiKey=process.env['OPENAI_API_KEY'] ?? undefined]\n     * @param {string | null | undefined} [opts.organization=process.env['OPENAI_ORG_ID'] ?? null]\n     * @param {string | null | undefined} [opts.project=process.env['OPENAI_PROJECT_ID'] ?? null]\n     * @param {string | null | undefined} [opts.webhookSecret=process.env['OPENAI_WEBHOOK_SECRET'] ?? null]\n     * @param {string} [opts.baseURL=process.env['OPENAI_BASE_URL'] ?? https://api.openai.com/v1] - Override the default base URL for the API.\n     * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n     * @param {MergedRequestInit} [opts.fetchOptions] - Additional `RequestInit` options to be passed to `fetch` calls.\n     * @param {Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n     * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n     * @param {HeadersLike} opts.defaultHeaders - Default headers to include with every request to the API.\n     * @param {Record<string, string | undefined>} opts.defaultQuery - Default query parameters to include with every request to the API.\n     * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n     */\n    constructor({ baseURL = readEnv('OPENAI_BASE_URL'), apiKey = readEnv('OPENAI_API_KEY'), organization = readEnv('OPENAI_ORG_ID') ?? null, project = readEnv('OPENAI_PROJECT_ID') ?? null, webhookSecret = readEnv('OPENAI_WEBHOOK_SECRET') ?? null, ...opts } = {}) {\n        _OpenAI_instances.add(this);\n        _OpenAI_encoder.set(this, void 0);\n        this.completions = new API.Completions(this);\n        this.chat = new API.Chat(this);\n        this.embeddings = new API.Embeddings(this);\n        this.files = new API.Files(this);\n        this.images = new API.Images(this);\n        this.audio = new API.Audio(this);\n        this.moderations = new API.Moderations(this);\n        this.models = new API.Models(this);\n        this.fineTuning = new API.FineTuning(this);\n        this.graders = new API.Graders(this);\n        this.vectorStores = new API.VectorStores(this);\n        this.webhooks = new API.Webhooks(this);\n        this.beta = new API.Beta(this);\n        this.batches = new API.Batches(this);\n        this.uploads = new API.Uploads(this);\n        this.responses = new API.Responses(this);\n        this.realtime = new API.Realtime(this);\n        this.conversations = new API.Conversations(this);\n        this.evals = new API.Evals(this);\n        this.containers = new API.Containers(this);\n        if (apiKey === undefined) {\n            throw new Errors.OpenAIError('Missing credentials. Please pass an `apiKey`, or set the `OPENAI_API_KEY` environment variable.');\n        }\n        const options = {\n            apiKey,\n            organization,\n            project,\n            webhookSecret,\n            ...opts,\n            baseURL: baseURL || `https://api.openai.com/v1`,\n        };\n        if (!options.dangerouslyAllowBrowser && isRunningInBrowser()) {\n            throw new Errors.OpenAIError(\"It looks like you're running in a browser-like environment.\\n\\nThis is disabled by default, as it risks exposing your secret API credentials to attackers.\\nIf you understand the risks and have appropriate mitigations in place,\\nyou can set the `dangerouslyAllowBrowser` option to `true`, e.g.,\\n\\nnew OpenAI({ apiKey, dangerouslyAllowBrowser: true });\\n\\nhttps://help.openai.com/en/articles/5112595-best-practices-for-api-key-safety\\n\");\n        }\n        this.baseURL = options.baseURL;\n        this.timeout = options.timeout ?? _a.DEFAULT_TIMEOUT /* 10 minutes */;\n        this.logger = options.logger ?? console;\n        const defaultLogLevel = 'warn';\n        // Set default logLevel early so that we can log a warning in parseLogLevel.\n        this.logLevel = defaultLogLevel;\n        this.logLevel =\n            parseLogLevel(options.logLevel, 'ClientOptions.logLevel', this) ??\n                parseLogLevel(readEnv('OPENAI_LOG'), \"process.env['OPENAI_LOG']\", this) ??\n                defaultLogLevel;\n        this.fetchOptions = options.fetchOptions;\n        this.maxRetries = options.maxRetries ?? 2;\n        this.fetch = options.fetch ?? Shims.getDefaultFetch();\n        __classPrivateFieldSet(this, _OpenAI_encoder, Opts.FallbackEncoder, \"f\");\n        this._options = options;\n        this.apiKey = typeof apiKey === 'string' ? apiKey : 'Missing Key';\n        this.organization = organization;\n        this.project = project;\n        this.webhookSecret = webhookSecret;\n    }\n    /**\n     * Create a new client instance re-using the same options given to the current client with optional overriding.\n     */\n    withOptions(options) {\n        const client = new this.constructor({\n            ...this._options,\n            baseURL: this.baseURL,\n            maxRetries: this.maxRetries,\n            timeout: this.timeout,\n            logger: this.logger,\n            logLevel: this.logLevel,\n            fetch: this.fetch,\n            fetchOptions: this.fetchOptions,\n            apiKey: this.apiKey,\n            organization: this.organization,\n            project: this.project,\n            webhookSecret: this.webhookSecret,\n            ...options,\n        });\n        return client;\n    }\n    defaultQuery() {\n        return this._options.defaultQuery;\n    }\n    validateHeaders({ values, nulls }) {\n        return;\n    }\n    async authHeaders(opts) {\n        return buildHeaders([{ Authorization: `Bearer ${this.apiKey}` }]);\n    }\n    stringifyQuery(query) {\n        return qs.stringify(query, { arrayFormat: 'brackets' });\n    }\n    getUserAgent() {\n        return `${this.constructor.name}/JS ${VERSION}`;\n    }\n    defaultIdempotencyKey() {\n        return `stainless-node-retry-${uuid4()}`;\n    }\n    makeStatusError(status, error, message, headers) {\n        return Errors.APIError.generate(status, error, message, headers);\n    }\n    async _callApiKey() {\n        const apiKey = this._options.apiKey;\n        if (typeof apiKey !== 'function')\n            return false;\n        let token;\n        try {\n            token = await apiKey();\n        }\n        catch (err) {\n            if (err instanceof Errors.OpenAIError)\n                throw err;\n            throw new Errors.OpenAIError(`Failed to get token from 'apiKey' function: ${err.message}`, \n            // @ts-ignore\n            { cause: err });\n        }\n        if (typeof token !== 'string' || !token) {\n            throw new Errors.OpenAIError(`Expected 'apiKey' function argument to return a string but it returned ${token}`);\n        }\n        this.apiKey = token;\n        return true;\n    }\n    buildURL(path, query, defaultBaseURL) {\n        const baseURL = (!__classPrivateFieldGet(this, _OpenAI_instances, \"m\", _OpenAI_baseURLOverridden).call(this) && defaultBaseURL) || this.baseURL;\n        const url = isAbsoluteURL(path) ?\n            new URL(path)\n            : new URL(baseURL + (baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n        const defaultQuery = this.defaultQuery();\n        if (!isEmptyObj(defaultQuery)) {\n            query = { ...defaultQuery, ...query };\n        }\n        if (typeof query === 'object' && query && !Array.isArray(query)) {\n            url.search = this.stringifyQuery(query);\n        }\n        return url.toString();\n    }\n    /**\n     * Used as a callback for mutating the given `FinalRequestOptions` object.\n     */\n    async prepareOptions(options) {\n        await this._callApiKey();\n    }\n    /**\n     * Used as a callback for mutating the given `RequestInit` object.\n     *\n     * This is useful for cases where you want to add certain headers based off of\n     * the request properties, e.g. `method` or `url`.\n     */\n    async prepareRequest(request, { url, options }) { }\n    get(path, opts) {\n        return this.methodRequest('get', path, opts);\n    }\n    post(path, opts) {\n        return this.methodRequest('post', path, opts);\n    }\n    patch(path, opts) {\n        return this.methodRequest('patch', path, opts);\n    }\n    put(path, opts) {\n        return this.methodRequest('put', path, opts);\n    }\n    delete(path, opts) {\n        return this.methodRequest('delete', path, opts);\n    }\n    methodRequest(method, path, opts) {\n        return this.request(Promise.resolve(opts).then((opts) => {\n            return { method, path, ...opts };\n        }));\n    }\n    request(options, remainingRetries = null) {\n        return new APIPromise(this, this.makeRequest(options, remainingRetries, undefined));\n    }\n    async makeRequest(optionsInput, retriesRemaining, retryOfRequestLogID) {\n        const options = await optionsInput;\n        const maxRetries = options.maxRetries ?? this.maxRetries;\n        if (retriesRemaining == null) {\n            retriesRemaining = maxRetries;\n        }\n        await this.prepareOptions(options);\n        const { req, url, timeout } = await this.buildRequest(options, {\n            retryCount: maxRetries - retriesRemaining,\n        });\n        await this.prepareRequest(req, { url, options });\n        /** Not an API request ID, just for correlating local log entries. */\n        const requestLogID = 'log_' + ((Math.random() * (1 << 24)) | 0).toString(16).padStart(6, '0');\n        const retryLogStr = retryOfRequestLogID === undefined ? '' : `, retryOf: ${retryOfRequestLogID}`;\n        const startTime = Date.now();\n        loggerFor(this).debug(`[${requestLogID}] sending request`, formatRequestDetails({\n            retryOfRequestLogID,\n            method: options.method,\n            url,\n            options,\n            headers: req.headers,\n        }));\n        if (options.signal?.aborted) {\n            throw new Errors.APIUserAbortError();\n        }\n        const controller = new AbortController();\n        const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n        const headersTime = Date.now();\n        if (response instanceof globalThis.Error) {\n            const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n            if (options.signal?.aborted) {\n                throw new Errors.APIUserAbortError();\n            }\n            // detect native connection timeout errors\n            // deno throws \"TypeError: error sending request for url (https://example/): client error (Connect): tcp connect error: Operation timed out (os error 60): Operation timed out (os error 60)\"\n            // undici throws \"TypeError: fetch failed\" with cause \"ConnectTimeoutError: Connect Timeout Error (attempted address: example:443, timeout: 1ms)\"\n            // others do not provide enough information to distinguish timeouts from other connection errors\n            const isTimeout = isAbortError(response) ||\n                /timed? ?out/i.test(String(response) + ('cause' in response ? String(response.cause) : ''));\n            if (retriesRemaining) {\n                loggerFor(this).info(`[${requestLogID}] connection ${isTimeout ? 'timed out' : 'failed'} - ${retryMessage}`);\n                loggerFor(this).debug(`[${requestLogID}] connection ${isTimeout ? 'timed out' : 'failed'} (${retryMessage})`, formatRequestDetails({\n                    retryOfRequestLogID,\n                    url,\n                    durationMs: headersTime - startTime,\n                    message: response.message,\n                }));\n                return this.retryRequest(options, retriesRemaining, retryOfRequestLogID ?? requestLogID);\n            }\n            loggerFor(this).info(`[${requestLogID}] connection ${isTimeout ? 'timed out' : 'failed'} - error; no more retries left`);\n            loggerFor(this).debug(`[${requestLogID}] connection ${isTimeout ? 'timed out' : 'failed'} (error; no more retries left)`, formatRequestDetails({\n                retryOfRequestLogID,\n                url,\n                durationMs: headersTime - startTime,\n                message: response.message,\n            }));\n            if (isTimeout) {\n                throw new Errors.APIConnectionTimeoutError();\n            }\n            throw new Errors.APIConnectionError({ cause: response });\n        }\n        const specialHeaders = [...response.headers.entries()]\n            .filter(([name]) => name === 'x-request-id')\n            .map(([name, value]) => ', ' + name + ': ' + JSON.stringify(value))\n            .join('');\n        const responseInfo = `[${requestLogID}${retryLogStr}${specialHeaders}] ${req.method} ${url} ${response.ok ? 'succeeded' : 'failed'} with status ${response.status} in ${headersTime - startTime}ms`;\n        if (!response.ok) {\n            const shouldRetry = await this.shouldRetry(response);\n            if (retriesRemaining && shouldRetry) {\n                const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n                // We don't need the body of this response.\n                await Shims.CancelReadableStream(response.body);\n                loggerFor(this).info(`${responseInfo} - ${retryMessage}`);\n                loggerFor(this).debug(`[${requestLogID}] response error (${retryMessage})`, formatRequestDetails({\n                    retryOfRequestLogID,\n                    url: response.url,\n                    status: response.status,\n                    headers: response.headers,\n                    durationMs: headersTime - startTime,\n                }));\n                return this.retryRequest(options, retriesRemaining, retryOfRequestLogID ?? requestLogID, response.headers);\n            }\n            const retryMessage = shouldRetry ? `error; no more retries left` : `error; not retryable`;\n            loggerFor(this).info(`${responseInfo} - ${retryMessage}`);\n            const errText = await response.text().catch((err) => castToError(err).message);\n            const errJSON = safeJSON(errText);\n            const errMessage = errJSON ? undefined : errText;\n            loggerFor(this).debug(`[${requestLogID}] response error (${retryMessage})`, formatRequestDetails({\n                retryOfRequestLogID,\n                url: response.url,\n                status: response.status,\n                headers: response.headers,\n                message: errMessage,\n                durationMs: Date.now() - startTime,\n            }));\n            const err = this.makeStatusError(response.status, errJSON, errMessage, response.headers);\n            throw err;\n        }\n        loggerFor(this).info(responseInfo);\n        loggerFor(this).debug(`[${requestLogID}] response start`, formatRequestDetails({\n            retryOfRequestLogID,\n            url: response.url,\n            status: response.status,\n            headers: response.headers,\n            durationMs: headersTime - startTime,\n        }));\n        return { response, options, controller, requestLogID, retryOfRequestLogID, startTime };\n    }\n    getAPIList(path, Page, opts) {\n        return this.requestAPIList(Page, { method: 'get', path, ...opts });\n    }\n    requestAPIList(Page, options) {\n        const request = this.makeRequest(options, null, undefined);\n        return new Pagination.PagePromise(this, request, Page);\n    }\n    async fetchWithTimeout(url, init, ms, controller) {\n        const { signal, method, ...options } = init || {};\n        if (signal)\n            signal.addEventListener('abort', () => controller.abort());\n        const timeout = setTimeout(() => controller.abort(), ms);\n        const isReadableBody = (globalThis.ReadableStream && options.body instanceof globalThis.ReadableStream) ||\n            (typeof options.body === 'object' && options.body !== null && Symbol.asyncIterator in options.body);\n        const fetchOptions = {\n            signal: controller.signal,\n            ...(isReadableBody ? { duplex: 'half' } : {}),\n            method: 'GET',\n            ...options,\n        };\n        if (method) {\n            // Custom methods like 'patch' need to be uppercased\n            // See https://github.com/nodejs/undici/issues/2294\n            fetchOptions.method = method.toUpperCase();\n        }\n        try {\n            // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n            return await this.fetch.call(undefined, url, fetchOptions);\n        }\n        finally {\n            clearTimeout(timeout);\n        }\n    }\n    async shouldRetry(response) {\n        // Note this is not a standard header.\n        const shouldRetryHeader = response.headers.get('x-should-retry');\n        // If the server explicitly says whether or not to retry, obey.\n        if (shouldRetryHeader === 'true')\n            return true;\n        if (shouldRetryHeader === 'false')\n            return false;\n        // Retry on request timeouts.\n        if (response.status === 408)\n            return true;\n        // Retry on lock timeouts.\n        if (response.status === 409)\n            return true;\n        // Retry on rate limits.\n        if (response.status === 429)\n            return true;\n        // Retry internal errors.\n        if (response.status >= 500)\n            return true;\n        return false;\n    }\n    async retryRequest(options, retriesRemaining, requestLogID, responseHeaders) {\n        let timeoutMillis;\n        // Note the `retry-after-ms` header may not be standard, but is a good idea and we'd like proactive support for it.\n        const retryAfterMillisHeader = responseHeaders?.get('retry-after-ms');\n        if (retryAfterMillisHeader) {\n            const timeoutMs = parseFloat(retryAfterMillisHeader);\n            if (!Number.isNaN(timeoutMs)) {\n                timeoutMillis = timeoutMs;\n            }\n        }\n        // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n        const retryAfterHeader = responseHeaders?.get('retry-after');\n        if (retryAfterHeader && !timeoutMillis) {\n            const timeoutSeconds = parseFloat(retryAfterHeader);\n            if (!Number.isNaN(timeoutSeconds)) {\n                timeoutMillis = timeoutSeconds * 1000;\n            }\n            else {\n                timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n            }\n        }\n        // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n        // just do what it says, but otherwise calculate a default\n        if (!(timeoutMillis && 0 <= timeoutMillis && timeoutMillis < 60 * 1000)) {\n            const maxRetries = options.maxRetries ?? this.maxRetries;\n            timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n        }\n        await sleep(timeoutMillis);\n        return this.makeRequest(options, retriesRemaining - 1, requestLogID);\n    }\n    calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries) {\n        const initialRetryDelay = 0.5;\n        const maxRetryDelay = 8.0;\n        const numRetries = maxRetries - retriesRemaining;\n        // Apply exponential backoff, but not more than the max.\n        const sleepSeconds = Math.min(initialRetryDelay * Math.pow(2, numRetries), maxRetryDelay);\n        // Apply some jitter, take up to at most 25 percent of the retry time.\n        const jitter = 1 - Math.random() * 0.25;\n        return sleepSeconds * jitter * 1000;\n    }\n    async buildRequest(inputOptions, { retryCount = 0 } = {}) {\n        const options = { ...inputOptions };\n        const { method, path, query, defaultBaseURL } = options;\n        const url = this.buildURL(path, query, defaultBaseURL);\n        if ('timeout' in options)\n            validatePositiveInteger('timeout', options.timeout);\n        options.timeout = options.timeout ?? this.timeout;\n        const { bodyHeaders, body } = this.buildBody({ options });\n        const reqHeaders = await this.buildHeaders({ options: inputOptions, method, bodyHeaders, retryCount });\n        const req = {\n            method,\n            headers: reqHeaders,\n            ...(options.signal && { signal: options.signal }),\n            ...(globalThis.ReadableStream &&\n                body instanceof globalThis.ReadableStream && { duplex: 'half' }),\n            ...(body && { body }),\n            ...(this.fetchOptions ?? {}),\n            ...(options.fetchOptions ?? {}),\n        };\n        return { req, url, timeout: options.timeout };\n    }\n    async buildHeaders({ options, method, bodyHeaders, retryCount, }) {\n        let idempotencyHeaders = {};\n        if (this.idempotencyHeader && method !== 'get') {\n            if (!options.idempotencyKey)\n                options.idempotencyKey = this.defaultIdempotencyKey();\n            idempotencyHeaders[this.idempotencyHeader] = options.idempotencyKey;\n        }\n        const headers = buildHeaders([\n            idempotencyHeaders,\n            {\n                Accept: 'application/json',\n                'User-Agent': this.getUserAgent(),\n                'X-Stainless-Retry-Count': String(retryCount),\n                ...(options.timeout ? { 'X-Stainless-Timeout': String(Math.trunc(options.timeout / 1000)) } : {}),\n                ...getPlatformHeaders(),\n                'OpenAI-Organization': this.organization,\n                'OpenAI-Project': this.project,\n            },\n            await this.authHeaders(options),\n            this._options.defaultHeaders,\n            bodyHeaders,\n            options.headers,\n        ]);\n        this.validateHeaders(headers);\n        return headers.values;\n    }\n    buildBody({ options: { body, headers: rawHeaders } }) {\n        if (!body) {\n            return { bodyHeaders: undefined, body: undefined };\n        }\n        const headers = buildHeaders([rawHeaders]);\n        if (\n        // Pass raw type verbatim\n        ArrayBuffer.isView(body) ||\n            body instanceof ArrayBuffer ||\n            body instanceof DataView ||\n            (typeof body === 'string' &&\n                // Preserve legacy string encoding behavior for now\n                headers.values.has('content-type')) ||\n            // `Blob` is superset of `File`\n            (globalThis.Blob && body instanceof globalThis.Blob) ||\n            // `FormData` -> `multipart/form-data`\n            body instanceof FormData ||\n            // `URLSearchParams` -> `application/x-www-form-urlencoded`\n            body instanceof URLSearchParams ||\n            // Send chunked stream (each chunk has own `length`)\n            (globalThis.ReadableStream && body instanceof globalThis.ReadableStream)) {\n            return { bodyHeaders: undefined, body: body };\n        }\n        else if (typeof body === 'object' &&\n            (Symbol.asyncIterator in body ||\n                (Symbol.iterator in body && 'next' in body && typeof body.next === 'function'))) {\n            return { bodyHeaders: undefined, body: Shims.ReadableStreamFrom(body) };\n        }\n        else {\n            return __classPrivateFieldGet(this, _OpenAI_encoder, \"f\").call(this, { body, headers });\n        }\n    }\n}\n_a = OpenAI, _OpenAI_encoder = new WeakMap(), _OpenAI_instances = new WeakSet(), _OpenAI_baseURLOverridden = function _OpenAI_baseURLOverridden() {\n    return this.baseURL !== 'https://api.openai.com/v1';\n};\nOpenAI.OpenAI = _a;\nOpenAI.DEFAULT_TIMEOUT = 600000; // 10 minutes\nOpenAI.OpenAIError = Errors.OpenAIError;\nOpenAI.APIError = Errors.APIError;\nOpenAI.APIConnectionError = Errors.APIConnectionError;\nOpenAI.APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;\nOpenAI.APIUserAbortError = Errors.APIUserAbortError;\nOpenAI.NotFoundError = Errors.NotFoundError;\nOpenAI.ConflictError = Errors.ConflictError;\nOpenAI.RateLimitError = Errors.RateLimitError;\nOpenAI.BadRequestError = Errors.BadRequestError;\nOpenAI.AuthenticationError = Errors.AuthenticationError;\nOpenAI.InternalServerError = Errors.InternalServerError;\nOpenAI.PermissionDeniedError = Errors.PermissionDeniedError;\nOpenAI.UnprocessableEntityError = Errors.UnprocessableEntityError;\nOpenAI.InvalidWebhookSignatureError = Errors.InvalidWebhookSignatureError;\nOpenAI.toFile = Uploads.toFile;\nOpenAI.Completions = Completions;\nOpenAI.Chat = Chat;\nOpenAI.Embeddings = Embeddings;\nOpenAI.Files = Files;\nOpenAI.Images = Images;\nOpenAI.Audio = Audio;\nOpenAI.Moderations = Moderations;\nOpenAI.Models = Models;\nOpenAI.FineTuning = FineTuning;\nOpenAI.Graders = Graders;\nOpenAI.VectorStores = VectorStores;\nOpenAI.Webhooks = Webhooks;\nOpenAI.Beta = Beta;\nOpenAI.Batches = Batches;\nOpenAI.Uploads = UploadsAPIUploads;\nOpenAI.Responses = Responses;\nOpenAI.Realtime = Realtime;\nOpenAI.Conversations = Conversations;\nOpenAI.Evals = Evals;\nOpenAI.Containers = Containers;\n//# sourceMappingURL=client.mjs.map","import { buildHeaders } from \"./internal/headers.mjs\";\nimport * as Errors from \"./error.mjs\";\nimport { isObj, readEnv } from \"./internal/utils.mjs\";\nimport { OpenAI } from \"./client.mjs\";\n/** API Client for interfacing with the Azure OpenAI API. */\nexport class AzureOpenAI extends OpenAI {\n    /**\n     * API Client for interfacing with the Azure OpenAI API.\n     *\n     * @param {string | undefined} [opts.apiVersion=process.env['OPENAI_API_VERSION'] ?? undefined]\n     * @param {string | undefined} [opts.endpoint=process.env['AZURE_OPENAI_ENDPOINT'] ?? undefined] - Your Azure endpoint, including the resource, e.g. `https://example-resource.azure.openai.com/`\n     * @param {string | undefined} [opts.apiKey=process.env['AZURE_OPENAI_API_KEY'] ?? undefined]\n     * @param {string | undefined} opts.deployment - A model deployment, if given, sets the base client URL to include `/deployments/{deployment}`.\n     * @param {string | null | undefined} [opts.organization=process.env['OPENAI_ORG_ID'] ?? null]\n     * @param {string} [opts.baseURL=process.env['OPENAI_BASE_URL']] - Sets the base URL for the API, e.g. `https://example-resource.azure.openai.com/openai/`.\n     * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n     * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n     * @param {Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n     * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n     * @param {Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n     * @param {DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n     * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n     */\n    constructor({ baseURL = readEnv('OPENAI_BASE_URL'), apiKey = readEnv('AZURE_OPENAI_API_KEY'), apiVersion = readEnv('OPENAI_API_VERSION'), endpoint, deployment, azureADTokenProvider, dangerouslyAllowBrowser, ...opts } = {}) {\n        if (!apiVersion) {\n            throw new Errors.OpenAIError(\"The OPENAI_API_VERSION environment variable is missing or empty; either provide it, or instantiate the AzureOpenAI client with an apiVersion option, like new AzureOpenAI({ apiVersion: 'My API Version' }).\");\n        }\n        if (typeof azureADTokenProvider === 'function') {\n            dangerouslyAllowBrowser = true;\n        }\n        if (!azureADTokenProvider && !apiKey) {\n            throw new Errors.OpenAIError('Missing credentials. Please pass one of `apiKey` and `azureADTokenProvider`, or set the `AZURE_OPENAI_API_KEY` environment variable.');\n        }\n        if (azureADTokenProvider && apiKey) {\n            throw new Errors.OpenAIError('The `apiKey` and `azureADTokenProvider` arguments are mutually exclusive; only one can be passed at a time.');\n        }\n        opts.defaultQuery = { ...opts.defaultQuery, 'api-version': apiVersion };\n        if (!baseURL) {\n            if (!endpoint) {\n                endpoint = process.env['AZURE_OPENAI_ENDPOINT'];\n            }\n            if (!endpoint) {\n                throw new Errors.OpenAIError('Must provide one of the `baseURL` or `endpoint` arguments, or the `AZURE_OPENAI_ENDPOINT` environment variable');\n            }\n            baseURL = `${endpoint}/openai`;\n        }\n        else {\n            if (endpoint) {\n                throw new Errors.OpenAIError('baseURL and endpoint are mutually exclusive');\n            }\n        }\n        super({\n            apiKey: azureADTokenProvider ?? apiKey,\n            baseURL,\n            ...opts,\n            ...(dangerouslyAllowBrowser !== undefined ? { dangerouslyAllowBrowser } : {}),\n        });\n        this.apiVersion = '';\n        this.apiVersion = apiVersion;\n        this.deploymentName = deployment;\n    }\n    async buildRequest(options, props = {}) {\n        if (_deployments_endpoints.has(options.path) && options.method === 'post' && options.body !== undefined) {\n            if (!isObj(options.body)) {\n                throw new Error('Expected request body to be an object');\n            }\n            const model = this.deploymentName || options.body['model'] || options.__metadata?.['model'];\n            if (model !== undefined && !this.baseURL.includes('/deployments')) {\n                options.path = `/deployments/${model}${options.path}`;\n            }\n        }\n        return super.buildRequest(options, props);\n    }\n    async authHeaders(opts) {\n        if (typeof this._options.apiKey === 'string') {\n            return buildHeaders([{ 'api-key': this.apiKey }]);\n        }\n        return super.authHeaders(opts);\n    }\n}\nconst _deployments_endpoints = new Set([\n    '/completions',\n    '/chat/completions',\n    '/embeddings',\n    '/audio/transcriptions',\n    '/audio/translations',\n    '/audio/speech',\n    '/images/generations',\n    '/batches',\n    '/images/edits',\n]);\n//# sourceMappingURL=azure.mjs.map"],"mappings":"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"}