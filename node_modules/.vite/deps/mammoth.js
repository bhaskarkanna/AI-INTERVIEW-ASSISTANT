import { __commonJS, __esm, __export, __require, __toCommonJS } from "./chunk-DlTWrutj.js";

//#region node_modules/underscore/modules/_setup.js
var VERSION, root, ArrayProto, ObjProto, SymbolProto, push, slice, toString, hasOwnProperty, supportsArrayBuffer, supportsDataView, nativeIsArray, nativeKeys, nativeCreate, nativeIsView, _isNaN, _isFinite, hasEnumBug, nonEnumerableProps, MAX_ARRAY_INDEX;
var init__setup = __esm({ "node_modules/underscore/modules/_setup.js": (() => {
	VERSION = "1.13.7";
	root = typeof self == "object" && self.self === self && self || typeof global == "object" && global.global === global && global || Function("return this")() || {};
	ArrayProto = Array.prototype;
	ObjProto = Object.prototype;
	SymbolProto = typeof Symbol !== "undefined" ? Symbol.prototype : null;
	push = ArrayProto.push;
	slice = ArrayProto.slice;
	toString = ObjProto.toString;
	hasOwnProperty = ObjProto.hasOwnProperty;
	supportsArrayBuffer = typeof ArrayBuffer !== "undefined";
	supportsDataView = typeof DataView !== "undefined";
	nativeIsArray = Array.isArray;
	nativeKeys = Object.keys;
	nativeCreate = Object.create;
	nativeIsView = supportsArrayBuffer && ArrayBuffer.isView;
	_isNaN = isNaN;
	_isFinite = isFinite;
	hasEnumBug = !{ toString: null }.propertyIsEnumerable("toString");
	nonEnumerableProps = [
		"valueOf",
		"isPrototypeOf",
		"toString",
		"propertyIsEnumerable",
		"hasOwnProperty",
		"toLocaleString"
	];
	MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;
}) });

//#endregion
//#region node_modules/underscore/modules/restArguments.js
function restArguments(func, startIndex) {
	startIndex = startIndex == null ? func.length - 1 : +startIndex;
	return function() {
		var length = Math.max(arguments.length - startIndex, 0), rest$1 = Array(length), index = 0;
		for (; index < length; index++) rest$1[index] = arguments[index + startIndex];
		switch (startIndex) {
			case 0: return func.call(this, rest$1);
			case 1: return func.call(this, arguments[0], rest$1);
			case 2: return func.call(this, arguments[0], arguments[1], rest$1);
		}
		var args = Array(startIndex + 1);
		for (index = 0; index < startIndex; index++) args[index] = arguments[index];
		args[startIndex] = rest$1;
		return func.apply(this, args);
	};
}
var init_restArguments = __esm({ "node_modules/underscore/modules/restArguments.js": (() => {}) });

//#endregion
//#region node_modules/underscore/modules/isObject.js
function isObject$1(obj) {
	var type = typeof obj;
	return type === "function" || type === "object" && !!obj;
}
var init_isObject = __esm({ "node_modules/underscore/modules/isObject.js": (() => {}) });

//#endregion
//#region node_modules/underscore/modules/isNull.js
function isNull(obj) {
	return obj === null;
}
var init_isNull = __esm({ "node_modules/underscore/modules/isNull.js": (() => {}) });

//#endregion
//#region node_modules/underscore/modules/isUndefined.js
function isUndefined(obj) {
	return obj === void 0;
}
var init_isUndefined = __esm({ "node_modules/underscore/modules/isUndefined.js": (() => {}) });

//#endregion
//#region node_modules/underscore/modules/isBoolean.js
function isBoolean(obj) {
	return obj === true || obj === false || toString.call(obj) === "[object Boolean]";
}
var init_isBoolean = __esm({ "node_modules/underscore/modules/isBoolean.js": (() => {
	init__setup();
}) });

//#endregion
//#region node_modules/underscore/modules/isElement.js
function isElement(obj) {
	return !!(obj && obj.nodeType === 1);
}
var init_isElement = __esm({ "node_modules/underscore/modules/isElement.js": (() => {}) });

//#endregion
//#region node_modules/underscore/modules/_tagTester.js
function tagTester(name) {
	var tag = "[object " + name + "]";
	return function(obj) {
		return toString.call(obj) === tag;
	};
}
var init__tagTester = __esm({ "node_modules/underscore/modules/_tagTester.js": (() => {
	init__setup();
}) });

//#endregion
//#region node_modules/underscore/modules/isString.js
var isString_default;
var init_isString = __esm({ "node_modules/underscore/modules/isString.js": (() => {
	init__tagTester();
	isString_default = tagTester("String");
}) });

//#endregion
//#region node_modules/underscore/modules/isNumber.js
var isNumber_default;
var init_isNumber = __esm({ "node_modules/underscore/modules/isNumber.js": (() => {
	init__tagTester();
	isNumber_default = tagTester("Number");
}) });

//#endregion
//#region node_modules/underscore/modules/isDate.js
var isDate_default;
var init_isDate = __esm({ "node_modules/underscore/modules/isDate.js": (() => {
	init__tagTester();
	isDate_default = tagTester("Date");
}) });

//#endregion
//#region node_modules/underscore/modules/isRegExp.js
var isRegExp_default;
var init_isRegExp = __esm({ "node_modules/underscore/modules/isRegExp.js": (() => {
	init__tagTester();
	isRegExp_default = tagTester("RegExp");
}) });

//#endregion
//#region node_modules/underscore/modules/isError.js
var isError_default;
var init_isError = __esm({ "node_modules/underscore/modules/isError.js": (() => {
	init__tagTester();
	isError_default = tagTester("Error");
}) });

//#endregion
//#region node_modules/underscore/modules/isSymbol.js
var isSymbol_default;
var init_isSymbol = __esm({ "node_modules/underscore/modules/isSymbol.js": (() => {
	init__tagTester();
	isSymbol_default = tagTester("Symbol");
}) });

//#endregion
//#region node_modules/underscore/modules/isArrayBuffer.js
var isArrayBuffer_default;
var init_isArrayBuffer = __esm({ "node_modules/underscore/modules/isArrayBuffer.js": (() => {
	init__tagTester();
	isArrayBuffer_default = tagTester("ArrayBuffer");
}) });

//#endregion
//#region node_modules/underscore/modules/isFunction.js
var isFunction, nodelist, isFunction_default;
var init_isFunction = __esm({ "node_modules/underscore/modules/isFunction.js": (() => {
	init__tagTester();
	init__setup();
	isFunction = tagTester("Function");
	nodelist = root.document && root.document.childNodes;
	if (typeof /./ != "function" && typeof Int8Array != "object" && typeof nodelist != "function") isFunction = function(obj) {
		return typeof obj == "function" || false;
	};
	isFunction_default = isFunction;
}) });

//#endregion
//#region node_modules/underscore/modules/_hasObjectTag.js
var _hasObjectTag_default;
var init__hasObjectTag = __esm({ "node_modules/underscore/modules/_hasObjectTag.js": (() => {
	init__tagTester();
	_hasObjectTag_default = tagTester("Object");
}) });

//#endregion
//#region node_modules/underscore/modules/_stringTagBug.js
var hasDataViewBug, isIE11;
var init__stringTagBug = __esm({ "node_modules/underscore/modules/_stringTagBug.js": (() => {
	init__setup();
	init__hasObjectTag();
	hasDataViewBug = supportsDataView && (!/\[native code\]/.test(String(DataView)) || _hasObjectTag_default(/* @__PURE__ */ new DataView(/* @__PURE__ */ new ArrayBuffer(8))));
	isIE11 = typeof Map !== "undefined" && _hasObjectTag_default(/* @__PURE__ */ new Map());
}) });

//#endregion
//#region node_modules/underscore/modules/isDataView.js
function alternateIsDataView(obj) {
	return obj != null && isFunction_default(obj.getInt8) && isArrayBuffer_default(obj.buffer);
}
var isDataView, isDataView_default;
var init_isDataView = __esm({ "node_modules/underscore/modules/isDataView.js": (() => {
	init__tagTester();
	init_isFunction();
	init_isArrayBuffer();
	init__stringTagBug();
	isDataView = tagTester("DataView");
	isDataView_default = hasDataViewBug ? alternateIsDataView : isDataView;
}) });

//#endregion
//#region node_modules/underscore/modules/isArray.js
var isArray_default;
var init_isArray = __esm({ "node_modules/underscore/modules/isArray.js": (() => {
	init__setup();
	init__tagTester();
	isArray_default = nativeIsArray || tagTester("Array");
}) });

//#endregion
//#region node_modules/underscore/modules/_has.js
function has$2(obj, key) {
	return obj != null && hasOwnProperty.call(obj, key);
}
var init__has = __esm({ "node_modules/underscore/modules/_has.js": (() => {
	init__setup();
}) });

//#endregion
//#region node_modules/underscore/modules/isArguments.js
var isArguments, isArguments_default;
var init_isArguments = __esm({ "node_modules/underscore/modules/isArguments.js": (() => {
	init__tagTester();
	init__has();
	isArguments = tagTester("Arguments");
	(function() {
		if (!isArguments(arguments)) isArguments = function(obj) {
			return has$2(obj, "callee");
		};
	})();
	isArguments_default = isArguments;
}) });

//#endregion
//#region node_modules/underscore/modules/isFinite.js
function isFinite$1(obj) {
	return !isSymbol_default(obj) && _isFinite(obj) && !isNaN(parseFloat(obj));
}
var init_isFinite = __esm({ "node_modules/underscore/modules/isFinite.js": (() => {
	init__setup();
	init_isSymbol();
}) });

//#endregion
//#region node_modules/underscore/modules/isNaN.js
function isNaN$1(obj) {
	return isNumber_default(obj) && _isNaN(obj);
}
var init_isNaN = __esm({ "node_modules/underscore/modules/isNaN.js": (() => {
	init__setup();
	init_isNumber();
}) });

//#endregion
//#region node_modules/underscore/modules/constant.js
function constant(value) {
	return function() {
		return value;
	};
}
var init_constant = __esm({ "node_modules/underscore/modules/constant.js": (() => {}) });

//#endregion
//#region node_modules/underscore/modules/_createSizePropertyCheck.js
function createSizePropertyCheck(getSizeProperty) {
	return function(collection) {
		var sizeProperty = getSizeProperty(collection);
		return typeof sizeProperty == "number" && sizeProperty >= 0 && sizeProperty <= MAX_ARRAY_INDEX;
	};
}
var init__createSizePropertyCheck = __esm({ "node_modules/underscore/modules/_createSizePropertyCheck.js": (() => {
	init__setup();
}) });

//#endregion
//#region node_modules/underscore/modules/_shallowProperty.js
function shallowProperty(key) {
	return function(obj) {
		return obj == null ? void 0 : obj[key];
	};
}
var init__shallowProperty = __esm({ "node_modules/underscore/modules/_shallowProperty.js": (() => {}) });

//#endregion
//#region node_modules/underscore/modules/_getByteLength.js
var _getByteLength_default;
var init__getByteLength = __esm({ "node_modules/underscore/modules/_getByteLength.js": (() => {
	init__shallowProperty();
	_getByteLength_default = shallowProperty("byteLength");
}) });

//#endregion
//#region node_modules/underscore/modules/_isBufferLike.js
var _isBufferLike_default;
var init__isBufferLike = __esm({ "node_modules/underscore/modules/_isBufferLike.js": (() => {
	init__createSizePropertyCheck();
	init__getByteLength();
	_isBufferLike_default = createSizePropertyCheck(_getByteLength_default);
}) });

//#endregion
//#region node_modules/underscore/modules/isTypedArray.js
function isTypedArray(obj) {
	return nativeIsView ? nativeIsView(obj) && !isDataView_default(obj) : _isBufferLike_default(obj) && typedArrayPattern.test(toString.call(obj));
}
var typedArrayPattern, isTypedArray_default;
var init_isTypedArray = __esm({ "node_modules/underscore/modules/isTypedArray.js": (() => {
	init__setup();
	init_isDataView();
	init_constant();
	init__isBufferLike();
	typedArrayPattern = /\[object ((I|Ui)nt(8|16|32)|Float(32|64)|Uint8Clamped|Big(I|Ui)nt64)Array\]/;
	isTypedArray_default = supportsArrayBuffer ? isTypedArray : constant(false);
}) });

//#endregion
//#region node_modules/underscore/modules/_getLength.js
var _getLength_default;
var init__getLength = __esm({ "node_modules/underscore/modules/_getLength.js": (() => {
	init__shallowProperty();
	_getLength_default = shallowProperty("length");
}) });

//#endregion
//#region node_modules/underscore/modules/_collectNonEnumProps.js
function emulatedSet(keys$1) {
	var hash = {};
	for (var l = keys$1.length, i$2 = 0; i$2 < l; ++i$2) hash[keys$1[i$2]] = true;
	return {
		contains: function(key) {
			return hash[key] === true;
		},
		push: function(key) {
			hash[key] = true;
			return keys$1.push(key);
		}
	};
}
function collectNonEnumProps(obj, keys$1) {
	keys$1 = emulatedSet(keys$1);
	var nonEnumIdx = nonEnumerableProps.length;
	var constructor = obj.constructor;
	var proto$1 = isFunction_default(constructor) && constructor.prototype || ObjProto;
	var prop = "constructor";
	if (has$2(obj, prop) && !keys$1.contains(prop)) keys$1.push(prop);
	while (nonEnumIdx--) {
		prop = nonEnumerableProps[nonEnumIdx];
		if (prop in obj && obj[prop] !== proto$1[prop] && !keys$1.contains(prop)) keys$1.push(prop);
	}
}
var init__collectNonEnumProps = __esm({ "node_modules/underscore/modules/_collectNonEnumProps.js": (() => {
	init__setup();
	init_isFunction();
	init__has();
}) });

//#endregion
//#region node_modules/underscore/modules/keys.js
function keys(obj) {
	if (!isObject$1(obj)) return [];
	if (nativeKeys) return nativeKeys(obj);
	var keys$1 = [];
	for (var key in obj) if (has$2(obj, key)) keys$1.push(key);
	if (hasEnumBug) collectNonEnumProps(obj, keys$1);
	return keys$1;
}
var init_keys = __esm({ "node_modules/underscore/modules/keys.js": (() => {
	init_isObject();
	init__setup();
	init__has();
	init__collectNonEnumProps();
}) });

//#endregion
//#region node_modules/underscore/modules/isEmpty.js
function isEmpty(obj) {
	if (obj == null) return true;
	var length = _getLength_default(obj);
	if (typeof length == "number" && (isArray_default(obj) || isString_default(obj) || isArguments_default(obj))) return length === 0;
	return _getLength_default(keys(obj)) === 0;
}
var init_isEmpty = __esm({ "node_modules/underscore/modules/isEmpty.js": (() => {
	init__getLength();
	init_isArray();
	init_isString();
	init_isArguments();
	init_keys();
}) });

//#endregion
//#region node_modules/underscore/modules/isMatch.js
function isMatch(object$1, attrs) {
	var _keys = keys(attrs), length = _keys.length;
	if (object$1 == null) return !length;
	var obj = Object(object$1);
	for (var i$2 = 0; i$2 < length; i$2++) {
		var key = _keys[i$2];
		if (attrs[key] !== obj[key] || !(key in obj)) return false;
	}
	return true;
}
var init_isMatch = __esm({ "node_modules/underscore/modules/isMatch.js": (() => {
	init_keys();
}) });

//#endregion
//#region node_modules/underscore/modules/underscore.js
function _$22(obj) {
	if (obj instanceof _$22) return obj;
	if (!(this instanceof _$22)) return new _$22(obj);
	this._wrapped = obj;
}
var init_underscore = __esm({ "node_modules/underscore/modules/underscore.js": (() => {
	init__setup();
	_$22.VERSION = VERSION;
	_$22.prototype.value = function() {
		return this._wrapped;
	};
	_$22.prototype.valueOf = _$22.prototype.toJSON = _$22.prototype.value;
	_$22.prototype.toString = function() {
		return String(this._wrapped);
	};
}) });

//#endregion
//#region node_modules/underscore/modules/_toBufferView.js
function toBufferView(bufferSource) {
	return new Uint8Array(bufferSource.buffer || bufferSource, bufferSource.byteOffset || 0, _getByteLength_default(bufferSource));
}
var init__toBufferView = __esm({ "node_modules/underscore/modules/_toBufferView.js": (() => {
	init__getByteLength();
}) });

//#endregion
//#region node_modules/underscore/modules/isEqual.js
function eq(a, b, aStack, bStack) {
	if (a === b) return a !== 0 || 1 / a === 1 / b;
	if (a == null || b == null) return false;
	if (a !== a) return b !== b;
	var type = typeof a;
	if (type !== "function" && type !== "object" && typeof b != "object") return false;
	return deepEq(a, b, aStack, bStack);
}
function deepEq(a, b, aStack, bStack) {
	if (a instanceof _$22) a = a._wrapped;
	if (b instanceof _$22) b = b._wrapped;
	var className = toString.call(a);
	if (className !== toString.call(b)) return false;
	if (hasDataViewBug && className == "[object Object]" && isDataView_default(a)) {
		if (!isDataView_default(b)) return false;
		className = tagDataView;
	}
	switch (className) {
		case "[object RegExp]":
		case "[object String]": return "" + a === "" + b;
		case "[object Number]":
			if (+a !== +a) return +b !== +b;
			return +a === 0 ? 1 / +a === 1 / b : +a === +b;
		case "[object Date]":
		case "[object Boolean]": return +a === +b;
		case "[object Symbol]": return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);
		case "[object ArrayBuffer]":
		case tagDataView: return deepEq(toBufferView(a), toBufferView(b), aStack, bStack);
	}
	var areArrays = className === "[object Array]";
	if (!areArrays && isTypedArray_default(a)) {
		if (_getByteLength_default(a) !== _getByteLength_default(b)) return false;
		if (a.buffer === b.buffer && a.byteOffset === b.byteOffset) return true;
		areArrays = true;
	}
	if (!areArrays) {
		if (typeof a != "object" || typeof b != "object") return false;
		var aCtor = a.constructor, bCtor = b.constructor;
		if (aCtor !== bCtor && !(isFunction_default(aCtor) && aCtor instanceof aCtor && isFunction_default(bCtor) && bCtor instanceof bCtor) && "constructor" in a && "constructor" in b) return false;
	}
	aStack = aStack || [];
	bStack = bStack || [];
	var length = aStack.length;
	while (length--) if (aStack[length] === a) return bStack[length] === b;
	aStack.push(a);
	bStack.push(b);
	if (areArrays) {
		length = a.length;
		if (length !== b.length) return false;
		while (length--) if (!eq(a[length], b[length], aStack, bStack)) return false;
	} else {
		var _keys = keys(a), key;
		length = _keys.length;
		if (keys(b).length !== length) return false;
		while (length--) {
			key = _keys[length];
			if (!(has$2(b, key) && eq(a[key], b[key], aStack, bStack))) return false;
		}
	}
	aStack.pop();
	bStack.pop();
	return true;
}
function isEqual(a, b) {
	return eq(a, b);
}
var tagDataView;
var init_isEqual = __esm({ "node_modules/underscore/modules/isEqual.js": (() => {
	init_underscore();
	init__setup();
	init__getByteLength();
	init_isTypedArray();
	init_isFunction();
	init__stringTagBug();
	init_isDataView();
	init_keys();
	init__has();
	init__toBufferView();
	tagDataView = "[object DataView]";
}) });

//#endregion
//#region node_modules/underscore/modules/allKeys.js
function allKeys(obj) {
	if (!isObject$1(obj)) return [];
	var keys$1 = [];
	for (var key in obj) keys$1.push(key);
	if (hasEnumBug) collectNonEnumProps(obj, keys$1);
	return keys$1;
}
var init_allKeys = __esm({ "node_modules/underscore/modules/allKeys.js": (() => {
	init_isObject();
	init__setup();
	init__collectNonEnumProps();
}) });

//#endregion
//#region node_modules/underscore/modules/_methodFingerprint.js
function ie11fingerprint(methods$1) {
	var length = _getLength_default(methods$1);
	return function(obj) {
		if (obj == null) return false;
		var keys$1 = allKeys(obj);
		if (_getLength_default(keys$1)) return false;
		for (var i$2 = 0; i$2 < length; i$2++) if (!isFunction_default(obj[methods$1[i$2]])) return false;
		return methods$1 !== weakMapMethods || !isFunction_default(obj[forEachName]);
	};
}
var forEachName, hasName, commonInit, mapTail, mapMethods, weakMapMethods, setMethods;
var init__methodFingerprint = __esm({ "node_modules/underscore/modules/_methodFingerprint.js": (() => {
	init__getLength();
	init_isFunction();
	init_allKeys();
	forEachName = "forEach", hasName = "has", commonInit = ["clear", "delete"], mapTail = [
		"get",
		hasName,
		"set"
	];
	mapMethods = commonInit.concat(forEachName, mapTail);
	weakMapMethods = commonInit.concat(mapTail);
	setMethods = ["add"].concat(commonInit, forEachName, hasName);
}) });

//#endregion
//#region node_modules/underscore/modules/isMap.js
var isMap_default;
var init_isMap = __esm({ "node_modules/underscore/modules/isMap.js": (() => {
	init__tagTester();
	init__stringTagBug();
	init__methodFingerprint();
	isMap_default = isIE11 ? ie11fingerprint(mapMethods) : tagTester("Map");
}) });

//#endregion
//#region node_modules/underscore/modules/isWeakMap.js
var isWeakMap_default;
var init_isWeakMap = __esm({ "node_modules/underscore/modules/isWeakMap.js": (() => {
	init__tagTester();
	init__stringTagBug();
	init__methodFingerprint();
	isWeakMap_default = isIE11 ? ie11fingerprint(weakMapMethods) : tagTester("WeakMap");
}) });

//#endregion
//#region node_modules/underscore/modules/isSet.js
var isSet_default;
var init_isSet = __esm({ "node_modules/underscore/modules/isSet.js": (() => {
	init__tagTester();
	init__stringTagBug();
	init__methodFingerprint();
	isSet_default = isIE11 ? ie11fingerprint(setMethods) : tagTester("Set");
}) });

//#endregion
//#region node_modules/underscore/modules/isWeakSet.js
var isWeakSet_default;
var init_isWeakSet = __esm({ "node_modules/underscore/modules/isWeakSet.js": (() => {
	init__tagTester();
	isWeakSet_default = tagTester("WeakSet");
}) });

//#endregion
//#region node_modules/underscore/modules/values.js
function values(obj) {
	var _keys = keys(obj);
	var length = _keys.length;
	var values$1 = Array(length);
	for (var i$2 = 0; i$2 < length; i$2++) values$1[i$2] = obj[_keys[i$2]];
	return values$1;
}
var init_values = __esm({ "node_modules/underscore/modules/values.js": (() => {
	init_keys();
}) });

//#endregion
//#region node_modules/underscore/modules/pairs.js
function pairs(obj) {
	var _keys = keys(obj);
	var length = _keys.length;
	var pairs$1 = Array(length);
	for (var i$2 = 0; i$2 < length; i$2++) pairs$1[i$2] = [_keys[i$2], obj[_keys[i$2]]];
	return pairs$1;
}
var init_pairs = __esm({ "node_modules/underscore/modules/pairs.js": (() => {
	init_keys();
}) });

//#endregion
//#region node_modules/underscore/modules/invert.js
function invert(obj) {
	var result$1 = {};
	var _keys = keys(obj);
	for (var i$2 = 0, length = _keys.length; i$2 < length; i$2++) result$1[obj[_keys[i$2]]] = _keys[i$2];
	return result$1;
}
var init_invert = __esm({ "node_modules/underscore/modules/invert.js": (() => {
	init_keys();
}) });

//#endregion
//#region node_modules/underscore/modules/functions.js
function functions(obj) {
	var names = [];
	for (var key in obj) if (isFunction_default(obj[key])) names.push(key);
	return names.sort();
}
var init_functions = __esm({ "node_modules/underscore/modules/functions.js": (() => {
	init_isFunction();
}) });

//#endregion
//#region node_modules/underscore/modules/_createAssigner.js
function createAssigner(keysFunc, defaults) {
	return function(obj) {
		var length = arguments.length;
		if (defaults) obj = Object(obj);
		if (length < 2 || obj == null) return obj;
		for (var index = 1; index < length; index++) {
			var source = arguments[index], keys$1 = keysFunc(source), l = keys$1.length;
			for (var i$2 = 0; i$2 < l; i$2++) {
				var key = keys$1[i$2];
				if (!defaults || obj[key] === void 0) obj[key] = source[key];
			}
		}
		return obj;
	};
}
var init__createAssigner = __esm({ "node_modules/underscore/modules/_createAssigner.js": (() => {}) });

//#endregion
//#region node_modules/underscore/modules/extend.js
var extend_default;
var init_extend = __esm({ "node_modules/underscore/modules/extend.js": (() => {
	init__createAssigner();
	init_allKeys();
	extend_default = createAssigner(allKeys);
}) });

//#endregion
//#region node_modules/underscore/modules/extendOwn.js
var extendOwn_default;
var init_extendOwn = __esm({ "node_modules/underscore/modules/extendOwn.js": (() => {
	init__createAssigner();
	init_keys();
	extendOwn_default = createAssigner(keys);
}) });

//#endregion
//#region node_modules/underscore/modules/defaults.js
var defaults_default;
var init_defaults = __esm({ "node_modules/underscore/modules/defaults.js": (() => {
	init__createAssigner();
	init_allKeys();
	defaults_default = createAssigner(allKeys, true);
}) });

//#endregion
//#region node_modules/underscore/modules/_baseCreate.js
function ctor() {
	return function() {};
}
function baseCreate(prototype) {
	if (!isObject$1(prototype)) return {};
	if (nativeCreate) return nativeCreate(prototype);
	var Ctor = ctor();
	Ctor.prototype = prototype;
	var result$1 = new Ctor();
	Ctor.prototype = null;
	return result$1;
}
var init__baseCreate = __esm({ "node_modules/underscore/modules/_baseCreate.js": (() => {
	init_isObject();
	init__setup();
}) });

//#endregion
//#region node_modules/underscore/modules/create.js
function create(prototype, props) {
	var result$1 = baseCreate(prototype);
	if (props) extendOwn_default(result$1, props);
	return result$1;
}
var init_create = __esm({ "node_modules/underscore/modules/create.js": (() => {
	init__baseCreate();
	init_extendOwn();
}) });

//#endregion
//#region node_modules/underscore/modules/clone.js
function clone(obj) {
	if (!isObject$1(obj)) return obj;
	return isArray_default(obj) ? obj.slice() : extend_default({}, obj);
}
var init_clone = __esm({ "node_modules/underscore/modules/clone.js": (() => {
	init_isObject();
	init_isArray();
	init_extend();
}) });

//#endregion
//#region node_modules/underscore/modules/tap.js
function tap(obj, interceptor) {
	interceptor(obj);
	return obj;
}
var init_tap = __esm({ "node_modules/underscore/modules/tap.js": (() => {}) });

//#endregion
//#region node_modules/underscore/modules/toPath.js
function toPath(path) {
	return isArray_default(path) ? path : [path];
}
var init_toPath = __esm({ "node_modules/underscore/modules/toPath.js": (() => {
	init_underscore();
	init_isArray();
	_$22.toPath = toPath;
}) });

//#endregion
//#region node_modules/underscore/modules/_toPath.js
function toPath$1(path) {
	return _$22.toPath(path);
}
var init__toPath = __esm({ "node_modules/underscore/modules/_toPath.js": (() => {
	init_underscore();
	init_toPath();
}) });

//#endregion
//#region node_modules/underscore/modules/_deepGet.js
function deepGet(obj, path) {
	var length = path.length;
	for (var i$2 = 0; i$2 < length; i$2++) {
		if (obj == null) return void 0;
		obj = obj[path[i$2]];
	}
	return length ? obj : void 0;
}
var init__deepGet = __esm({ "node_modules/underscore/modules/_deepGet.js": (() => {}) });

//#endregion
//#region node_modules/underscore/modules/get.js
function get(object$1, path, defaultValue) {
	var value = deepGet(object$1, toPath$1(path));
	return isUndefined(value) ? defaultValue : value;
}
var init_get = __esm({ "node_modules/underscore/modules/get.js": (() => {
	init__toPath();
	init__deepGet();
	init_isUndefined();
}) });

//#endregion
//#region node_modules/underscore/modules/has.js
function has$1(obj, path) {
	path = toPath$1(path);
	var length = path.length;
	for (var i$2 = 0; i$2 < length; i$2++) {
		var key = path[i$2];
		if (!has$2(obj, key)) return false;
		obj = obj[key];
	}
	return !!length;
}
var init_has = __esm({ "node_modules/underscore/modules/has.js": (() => {
	init__has();
	init__toPath();
}) });

//#endregion
//#region node_modules/underscore/modules/identity.js
function identity$3(value) {
	return value;
}
var init_identity = __esm({ "node_modules/underscore/modules/identity.js": (() => {}) });

//#endregion
//#region node_modules/underscore/modules/matcher.js
function matcher(attrs) {
	attrs = extendOwn_default({}, attrs);
	return function(obj) {
		return isMatch(obj, attrs);
	};
}
var init_matcher = __esm({ "node_modules/underscore/modules/matcher.js": (() => {
	init_extendOwn();
	init_isMatch();
}) });

//#endregion
//#region node_modules/underscore/modules/property.js
function property(path) {
	path = toPath$1(path);
	return function(obj) {
		return deepGet(obj, path);
	};
}
var init_property = __esm({ "node_modules/underscore/modules/property.js": (() => {
	init__deepGet();
	init__toPath();
}) });

//#endregion
//#region node_modules/underscore/modules/_optimizeCb.js
function optimizeCb(func, context, argCount) {
	if (context === void 0) return func;
	switch (argCount == null ? 3 : argCount) {
		case 1: return function(value) {
			return func.call(context, value);
		};
		case 3: return function(value, index, collection) {
			return func.call(context, value, index, collection);
		};
		case 4: return function(accumulator, value, index, collection) {
			return func.call(context, accumulator, value, index, collection);
		};
	}
	return function() {
		return func.apply(context, arguments);
	};
}
var init__optimizeCb = __esm({ "node_modules/underscore/modules/_optimizeCb.js": (() => {}) });

//#endregion
//#region node_modules/underscore/modules/_baseIteratee.js
function baseIteratee(value, context, argCount) {
	if (value == null) return identity$3;
	if (isFunction_default(value)) return optimizeCb(value, context, argCount);
	if (isObject$1(value) && !isArray_default(value)) return matcher(value);
	return property(value);
}
var init__baseIteratee = __esm({ "node_modules/underscore/modules/_baseIteratee.js": (() => {
	init_identity();
	init_isFunction();
	init_isObject();
	init_isArray();
	init_matcher();
	init_property();
	init__optimizeCb();
}) });

//#endregion
//#region node_modules/underscore/modules/iteratee.js
function iteratee(value, context) {
	return baseIteratee(value, context, Infinity);
}
var init_iteratee = __esm({ "node_modules/underscore/modules/iteratee.js": (() => {
	init_underscore();
	init__baseIteratee();
	_$22.iteratee = iteratee;
}) });

//#endregion
//#region node_modules/underscore/modules/_cb.js
function cb(value, context, argCount) {
	if (_$22.iteratee !== iteratee) return _$22.iteratee(value, context);
	return baseIteratee(value, context, argCount);
}
var init__cb = __esm({ "node_modules/underscore/modules/_cb.js": (() => {
	init_underscore();
	init__baseIteratee();
	init_iteratee();
}) });

//#endregion
//#region node_modules/underscore/modules/mapObject.js
function mapObject(obj, iteratee$1, context) {
	iteratee$1 = cb(iteratee$1, context);
	var _keys = keys(obj), length = _keys.length, results$4 = {};
	for (var index = 0; index < length; index++) {
		var currentKey = _keys[index];
		results$4[currentKey] = iteratee$1(obj[currentKey], currentKey, obj);
	}
	return results$4;
}
var init_mapObject = __esm({ "node_modules/underscore/modules/mapObject.js": (() => {
	init__cb();
	init_keys();
}) });

//#endregion
//#region node_modules/underscore/modules/noop.js
function noop() {}
var init_noop = __esm({ "node_modules/underscore/modules/noop.js": (() => {}) });

//#endregion
//#region node_modules/underscore/modules/propertyOf.js
function propertyOf(obj) {
	if (obj == null) return noop;
	return function(path) {
		return get(obj, path);
	};
}
var init_propertyOf = __esm({ "node_modules/underscore/modules/propertyOf.js": (() => {
	init_noop();
	init_get();
}) });

//#endregion
//#region node_modules/underscore/modules/times.js
function times(n, iteratee$1, context) {
	var accum = Array(Math.max(0, n));
	iteratee$1 = optimizeCb(iteratee$1, context, 1);
	for (var i$2 = 0; i$2 < n; i$2++) accum[i$2] = iteratee$1(i$2);
	return accum;
}
var init_times = __esm({ "node_modules/underscore/modules/times.js": (() => {
	init__optimizeCb();
}) });

//#endregion
//#region node_modules/underscore/modules/random.js
function random(min$1, max$1) {
	if (max$1 == null) {
		max$1 = min$1;
		min$1 = 0;
	}
	return min$1 + Math.floor(Math.random() * (max$1 - min$1 + 1));
}
var init_random = __esm({ "node_modules/underscore/modules/random.js": (() => {}) });

//#endregion
//#region node_modules/underscore/modules/now.js
var now_default;
var init_now = __esm({ "node_modules/underscore/modules/now.js": (() => {
	now_default = Date.now || function() {
		return (/* @__PURE__ */ new Date()).getTime();
	};
}) });

//#endregion
//#region node_modules/underscore/modules/_createEscaper.js
function createEscaper(map$1) {
	var escaper = function(match) {
		return map$1[match];
	};
	var source = "(?:" + keys(map$1).join("|") + ")";
	var testRegexp = RegExp(source);
	var replaceRegexp = RegExp(source, "g");
	return function(string) {
		string = string == null ? "" : "" + string;
		return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;
	};
}
var init__createEscaper = __esm({ "node_modules/underscore/modules/_createEscaper.js": (() => {
	init_keys();
}) });

//#endregion
//#region node_modules/underscore/modules/_escapeMap.js
var _escapeMap_default;
var init__escapeMap = __esm({ "node_modules/underscore/modules/_escapeMap.js": (() => {
	_escapeMap_default = {
		"&": "&amp;",
		"<": "&lt;",
		">": "&gt;",
		"\"": "&quot;",
		"'": "&#x27;",
		"`": "&#x60;"
	};
}) });

//#endregion
//#region node_modules/underscore/modules/escape.js
var escape_default;
var init_escape = __esm({ "node_modules/underscore/modules/escape.js": (() => {
	init__createEscaper();
	init__escapeMap();
	escape_default = createEscaper(_escapeMap_default);
}) });

//#endregion
//#region node_modules/underscore/modules/_unescapeMap.js
var _unescapeMap_default;
var init__unescapeMap = __esm({ "node_modules/underscore/modules/_unescapeMap.js": (() => {
	init_invert();
	init__escapeMap();
	_unescapeMap_default = invert(_escapeMap_default);
}) });

//#endregion
//#region node_modules/underscore/modules/unescape.js
var unescape_default;
var init_unescape = __esm({ "node_modules/underscore/modules/unescape.js": (() => {
	init__createEscaper();
	init__unescapeMap();
	unescape_default = createEscaper(_unescapeMap_default);
}) });

//#endregion
//#region node_modules/underscore/modules/templateSettings.js
var templateSettings_default;
var init_templateSettings = __esm({ "node_modules/underscore/modules/templateSettings.js": (() => {
	init_underscore();
	templateSettings_default = _$22.templateSettings = {
		evaluate: /<%([\s\S]+?)%>/g,
		interpolate: /<%=([\s\S]+?)%>/g,
		escape: /<%-([\s\S]+?)%>/g
	};
}) });

//#endregion
//#region node_modules/underscore/modules/template.js
function escapeChar(match) {
	return "\\" + escapes[match];
}
function template(text$1, settings, oldSettings) {
	if (!settings && oldSettings) settings = oldSettings;
	settings = defaults_default({}, settings, _$22.templateSettings);
	var matcher$1 = RegExp([
		(settings.escape || noMatch).source,
		(settings.interpolate || noMatch).source,
		(settings.evaluate || noMatch).source
	].join("|") + "|$", "g");
	var index = 0;
	var source = "__p+='";
	text$1.replace(matcher$1, function(match, escape, interpolate, evaluate, offset) {
		source += text$1.slice(index, offset).replace(escapeRegExp, escapeChar);
		index = offset + match.length;
		if (escape) source += "'+\n((__t=(" + escape + "))==null?'':_.escape(__t))+\n'";
		else if (interpolate) source += "'+\n((__t=(" + interpolate + "))==null?'':__t)+\n'";
		else if (evaluate) source += "';\n" + evaluate + "\n__p+='";
		return match;
	});
	source += "';\n";
	var argument = settings.variable;
	if (argument) {
		if (!bareIdentifier.test(argument)) throw new Error("variable is not a bare identifier: " + argument);
	} else {
		source = "with(obj||{}){\n" + source + "}\n";
		argument = "obj";
	}
	source = "var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n" + source + "return __p;\n";
	var render;
	try {
		render = new Function(argument, "_", source);
	} catch (e) {
		e.source = source;
		throw e;
	}
	var template$1 = function(data) {
		return render.call(this, data, _$22);
	};
	template$1.source = "function(" + argument + "){\n" + source + "}";
	return template$1;
}
var noMatch, escapes, escapeRegExp, bareIdentifier;
var init_template = __esm({ "node_modules/underscore/modules/template.js": (() => {
	init_defaults();
	init_underscore();
	init_templateSettings();
	noMatch = /(.)^/;
	escapes = {
		"'": "'",
		"\\": "\\",
		"\r": "r",
		"\n": "n",
		"\u2028": "u2028",
		"\u2029": "u2029"
	};
	escapeRegExp = /\\|'|\r|\n|\u2028|\u2029/g;
	bareIdentifier = /^\s*(\w|\$)+\s*$/;
}) });

//#endregion
//#region node_modules/underscore/modules/result.js
function result(obj, path, fallback) {
	path = toPath$1(path);
	var length = path.length;
	if (!length) return isFunction_default(fallback) ? fallback.call(obj) : fallback;
	for (var i$2 = 0; i$2 < length; i$2++) {
		var prop = obj == null ? void 0 : obj[path[i$2]];
		if (prop === void 0) {
			prop = fallback;
			i$2 = length;
		}
		obj = isFunction_default(prop) ? prop.call(obj) : prop;
	}
	return obj;
}
var init_result = __esm({ "node_modules/underscore/modules/result.js": (() => {
	init_isFunction();
	init__toPath();
}) });

//#endregion
//#region node_modules/underscore/modules/uniqueId.js
function uniqueId(prefix) {
	var id = ++idCounter + "";
	return prefix ? prefix + id : id;
}
var idCounter;
var init_uniqueId = __esm({ "node_modules/underscore/modules/uniqueId.js": (() => {
	idCounter = 0;
}) });

//#endregion
//#region node_modules/underscore/modules/chain.js
function chain(obj) {
	var instance = _$22(obj);
	instance._chain = true;
	return instance;
}
var init_chain = __esm({ "node_modules/underscore/modules/chain.js": (() => {
	init_underscore();
}) });

//#endregion
//#region node_modules/underscore/modules/_executeBound.js
function executeBound(sourceFunc, boundFunc, context, callingContext, args) {
	if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);
	var self$1 = baseCreate(sourceFunc.prototype);
	var result$1 = sourceFunc.apply(self$1, args);
	if (isObject$1(result$1)) return result$1;
	return self$1;
}
var init__executeBound = __esm({ "node_modules/underscore/modules/_executeBound.js": (() => {
	init__baseCreate();
	init_isObject();
}) });

//#endregion
//#region node_modules/underscore/modules/partial.js
var partial, partial_default;
var init_partial = __esm({ "node_modules/underscore/modules/partial.js": (() => {
	init_restArguments();
	init__executeBound();
	init_underscore();
	partial = restArguments(function(func, boundArgs) {
		var placeholder = partial.placeholder;
		var bound = function() {
			var position$1 = 0, length = boundArgs.length;
			var args = Array(length);
			for (var i$2 = 0; i$2 < length; i$2++) args[i$2] = boundArgs[i$2] === placeholder ? arguments[position$1++] : boundArgs[i$2];
			while (position$1 < arguments.length) args.push(arguments[position$1++]);
			return executeBound(func, bound, this, this, args);
		};
		return bound;
	});
	partial.placeholder = _$22;
	partial_default = partial;
}) });

//#endregion
//#region node_modules/underscore/modules/bind.js
var bind_default;
var init_bind = __esm({ "node_modules/underscore/modules/bind.js": (() => {
	init_restArguments();
	init_isFunction();
	init__executeBound();
	bind_default = restArguments(function(func, context, args) {
		if (!isFunction_default(func)) throw new TypeError("Bind must be called on a function");
		var bound = restArguments(function(callArgs) {
			return executeBound(func, bound, context, this, args.concat(callArgs));
		});
		return bound;
	});
}) });

//#endregion
//#region node_modules/underscore/modules/_isArrayLike.js
var _isArrayLike_default;
var init__isArrayLike = __esm({ "node_modules/underscore/modules/_isArrayLike.js": (() => {
	init__createSizePropertyCheck();
	init__getLength();
	_isArrayLike_default = createSizePropertyCheck(_getLength_default);
}) });

//#endregion
//#region node_modules/underscore/modules/_flatten.js
function flatten$1(input, depth, strict, output) {
	output = output || [];
	if (!depth && depth !== 0) depth = Infinity;
	else if (depth <= 0) return output.concat(input);
	var idx = output.length;
	for (var i$2 = 0, length = _getLength_default(input); i$2 < length; i$2++) {
		var value = input[i$2];
		if (_isArrayLike_default(value) && (isArray_default(value) || isArguments_default(value))) if (depth > 1) {
			flatten$1(value, depth - 1, strict, output);
			idx = output.length;
		} else {
			var j = 0, len$1 = value.length;
			while (j < len$1) output[idx++] = value[j++];
		}
		else if (!strict) output[idx++] = value;
	}
	return output;
}
var init__flatten = __esm({ "node_modules/underscore/modules/_flatten.js": (() => {
	init__getLength();
	init__isArrayLike();
	init_isArray();
	init_isArguments();
}) });

//#endregion
//#region node_modules/underscore/modules/bindAll.js
var bindAll_default;
var init_bindAll = __esm({ "node_modules/underscore/modules/bindAll.js": (() => {
	init_restArguments();
	init__flatten();
	init_bind();
	bindAll_default = restArguments(function(obj, keys$1) {
		keys$1 = flatten$1(keys$1, false, false);
		var index = keys$1.length;
		if (index < 1) throw new Error("bindAll must be passed function names");
		while (index--) {
			var key = keys$1[index];
			obj[key] = bind_default(obj[key], obj);
		}
		return obj;
	});
}) });

//#endregion
//#region node_modules/underscore/modules/memoize.js
function memoize(func, hasher) {
	var memoize$1 = function(key) {
		var cache = memoize$1.cache;
		var address = "" + (hasher ? hasher.apply(this, arguments) : key);
		if (!has$2(cache, address)) cache[address] = func.apply(this, arguments);
		return cache[address];
	};
	memoize$1.cache = {};
	return memoize$1;
}
var init_memoize = __esm({ "node_modules/underscore/modules/memoize.js": (() => {
	init__has();
}) });

//#endregion
//#region node_modules/underscore/modules/delay.js
var delay_default;
var init_delay = __esm({ "node_modules/underscore/modules/delay.js": (() => {
	init_restArguments();
	delay_default = restArguments(function(func, wait, args) {
		return setTimeout(function() {
			return func.apply(null, args);
		}, wait);
	});
}) });

//#endregion
//#region node_modules/underscore/modules/defer.js
var defer_default;
var init_defer = __esm({ "node_modules/underscore/modules/defer.js": (() => {
	init_partial();
	init_delay();
	init_underscore();
	defer_default = partial_default(delay_default, _$22, 1);
}) });

//#endregion
//#region node_modules/underscore/modules/throttle.js
function throttle(func, wait, options$1) {
	var timeout, context, args, result$1;
	var previous = 0;
	if (!options$1) options$1 = {};
	var later = function() {
		previous = options$1.leading === false ? 0 : now_default();
		timeout = null;
		result$1 = func.apply(context, args);
		if (!timeout) context = args = null;
	};
	var throttled = function() {
		var _now = now_default();
		if (!previous && options$1.leading === false) previous = _now;
		var remaining = wait - (_now - previous);
		context = this;
		args = arguments;
		if (remaining <= 0 || remaining > wait) {
			if (timeout) {
				clearTimeout(timeout);
				timeout = null;
			}
			previous = _now;
			result$1 = func.apply(context, args);
			if (!timeout) context = args = null;
		} else if (!timeout && options$1.trailing !== false) timeout = setTimeout(later, remaining);
		return result$1;
	};
	throttled.cancel = function() {
		clearTimeout(timeout);
		previous = 0;
		timeout = context = args = null;
	};
	return throttled;
}
var init_throttle = __esm({ "node_modules/underscore/modules/throttle.js": (() => {
	init_now();
}) });

//#endregion
//#region node_modules/underscore/modules/debounce.js
function debounce(func, wait, immediate) {
	var timeout, previous, args, result$1, context;
	var later = function() {
		var passed = now_default() - previous;
		if (wait > passed) timeout = setTimeout(later, wait - passed);
		else {
			timeout = null;
			if (!immediate) result$1 = func.apply(context, args);
			if (!timeout) args = context = null;
		}
	};
	var debounced = restArguments(function(_args) {
		context = this;
		args = _args;
		previous = now_default();
		if (!timeout) {
			timeout = setTimeout(later, wait);
			if (immediate) result$1 = func.apply(context, args);
		}
		return result$1;
	});
	debounced.cancel = function() {
		clearTimeout(timeout);
		timeout = args = context = null;
	};
	return debounced;
}
var init_debounce = __esm({ "node_modules/underscore/modules/debounce.js": (() => {
	init_restArguments();
	init_now();
}) });

//#endregion
//#region node_modules/underscore/modules/wrap.js
function wrap(func, wrapper) {
	return partial_default(wrapper, func);
}
var init_wrap = __esm({ "node_modules/underscore/modules/wrap.js": (() => {
	init_partial();
}) });

//#endregion
//#region node_modules/underscore/modules/negate.js
function negate(predicate) {
	return function() {
		return !predicate.apply(this, arguments);
	};
}
var init_negate = __esm({ "node_modules/underscore/modules/negate.js": (() => {}) });

//#endregion
//#region node_modules/underscore/modules/compose.js
function compose() {
	var args = arguments;
	var start = args.length - 1;
	return function() {
		var i$2 = start;
		var result$1 = args[start].apply(this, arguments);
		while (i$2--) result$1 = args[i$2].call(this, result$1);
		return result$1;
	};
}
var init_compose = __esm({ "node_modules/underscore/modules/compose.js": (() => {}) });

//#endregion
//#region node_modules/underscore/modules/after.js
function after(times$1, func) {
	return function() {
		if (--times$1 < 1) return func.apply(this, arguments);
	};
}
var init_after = __esm({ "node_modules/underscore/modules/after.js": (() => {}) });

//#endregion
//#region node_modules/underscore/modules/before.js
function before(times$1, func) {
	var memo;
	return function() {
		if (--times$1 > 0) memo = func.apply(this, arguments);
		if (times$1 <= 1) func = null;
		return memo;
	};
}
var init_before = __esm({ "node_modules/underscore/modules/before.js": (() => {}) });

//#endregion
//#region node_modules/underscore/modules/once.js
var once_default;
var init_once = __esm({ "node_modules/underscore/modules/once.js": (() => {
	init_partial();
	init_before();
	once_default = partial_default(before, 2);
}) });

//#endregion
//#region node_modules/underscore/modules/findKey.js
function findKey(obj, predicate, context) {
	predicate = cb(predicate, context);
	var _keys = keys(obj), key;
	for (var i$2 = 0, length = _keys.length; i$2 < length; i$2++) {
		key = _keys[i$2];
		if (predicate(obj[key], key, obj)) return key;
	}
}
var init_findKey = __esm({ "node_modules/underscore/modules/findKey.js": (() => {
	init__cb();
	init_keys();
}) });

//#endregion
//#region node_modules/underscore/modules/_createPredicateIndexFinder.js
function createPredicateIndexFinder(dir) {
	return function(array, predicate, context) {
		predicate = cb(predicate, context);
		var length = _getLength_default(array);
		var index = dir > 0 ? 0 : length - 1;
		for (; index >= 0 && index < length; index += dir) if (predicate(array[index], index, array)) return index;
		return -1;
	};
}
var init__createPredicateIndexFinder = __esm({ "node_modules/underscore/modules/_createPredicateIndexFinder.js": (() => {
	init__cb();
	init__getLength();
}) });

//#endregion
//#region node_modules/underscore/modules/findIndex.js
var findIndex_default;
var init_findIndex = __esm({ "node_modules/underscore/modules/findIndex.js": (() => {
	init__createPredicateIndexFinder();
	findIndex_default = createPredicateIndexFinder(1);
}) });

//#endregion
//#region node_modules/underscore/modules/findLastIndex.js
var findLastIndex_default;
var init_findLastIndex = __esm({ "node_modules/underscore/modules/findLastIndex.js": (() => {
	init__createPredicateIndexFinder();
	findLastIndex_default = createPredicateIndexFinder(-1);
}) });

//#endregion
//#region node_modules/underscore/modules/sortedIndex.js
function sortedIndex(array, obj, iteratee$1, context) {
	iteratee$1 = cb(iteratee$1, context, 1);
	var value = iteratee$1(obj);
	var low = 0, high = _getLength_default(array);
	while (low < high) {
		var mid = Math.floor((low + high) / 2);
		if (iteratee$1(array[mid]) < value) low = mid + 1;
		else high = mid;
	}
	return low;
}
var init_sortedIndex = __esm({ "node_modules/underscore/modules/sortedIndex.js": (() => {
	init__cb();
	init__getLength();
}) });

//#endregion
//#region node_modules/underscore/modules/_createIndexFinder.js
function createIndexFinder(dir, predicateFind, sortedIndex$1) {
	return function(array, item, idx) {
		var i$2 = 0, length = _getLength_default(array);
		if (typeof idx == "number") if (dir > 0) i$2 = idx >= 0 ? idx : Math.max(idx + length, i$2);
		else length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;
		else if (sortedIndex$1 && idx && length) {
			idx = sortedIndex$1(array, item);
			return array[idx] === item ? idx : -1;
		}
		if (item !== item) {
			idx = predicateFind(slice.call(array, i$2, length), isNaN$1);
			return idx >= 0 ? idx + i$2 : -1;
		}
		for (idx = dir > 0 ? i$2 : length - 1; idx >= 0 && idx < length; idx += dir) if (array[idx] === item) return idx;
		return -1;
	};
}
var init__createIndexFinder = __esm({ "node_modules/underscore/modules/_createIndexFinder.js": (() => {
	init__getLength();
	init__setup();
	init_isNaN();
}) });

//#endregion
//#region node_modules/underscore/modules/indexOf.js
var indexOf_default;
var init_indexOf = __esm({ "node_modules/underscore/modules/indexOf.js": (() => {
	init_sortedIndex();
	init_findIndex();
	init__createIndexFinder();
	indexOf_default = createIndexFinder(1, findIndex_default, sortedIndex);
}) });

//#endregion
//#region node_modules/underscore/modules/lastIndexOf.js
var lastIndexOf_default;
var init_lastIndexOf = __esm({ "node_modules/underscore/modules/lastIndexOf.js": (() => {
	init_findLastIndex();
	init__createIndexFinder();
	lastIndexOf_default = createIndexFinder(-1, findLastIndex_default);
}) });

//#endregion
//#region node_modules/underscore/modules/find.js
function find$2(obj, predicate, context) {
	var key = (_isArrayLike_default(obj) ? findIndex_default : findKey)(obj, predicate, context);
	if (key !== void 0 && key !== -1) return obj[key];
}
var init_find = __esm({ "node_modules/underscore/modules/find.js": (() => {
	init__isArrayLike();
	init_findIndex();
	init_findKey();
}) });

//#endregion
//#region node_modules/underscore/modules/findWhere.js
function findWhere(obj, attrs) {
	return find$2(obj, matcher(attrs));
}
var init_findWhere = __esm({ "node_modules/underscore/modules/findWhere.js": (() => {
	init_find();
	init_matcher();
}) });

//#endregion
//#region node_modules/underscore/modules/each.js
function each(obj, iteratee$1, context) {
	iteratee$1 = optimizeCb(iteratee$1, context);
	var i$2, length;
	if (_isArrayLike_default(obj)) for (i$2 = 0, length = obj.length; i$2 < length; i$2++) iteratee$1(obj[i$2], i$2, obj);
	else {
		var _keys = keys(obj);
		for (i$2 = 0, length = _keys.length; i$2 < length; i$2++) iteratee$1(obj[_keys[i$2]], _keys[i$2], obj);
	}
	return obj;
}
var init_each = __esm({ "node_modules/underscore/modules/each.js": (() => {
	init__optimizeCb();
	init__isArrayLike();
	init_keys();
}) });

//#endregion
//#region node_modules/underscore/modules/map.js
function map(obj, iteratee$1, context) {
	iteratee$1 = cb(iteratee$1, context);
	var _keys = !_isArrayLike_default(obj) && keys(obj), length = (_keys || obj).length, results$4 = Array(length);
	for (var index = 0; index < length; index++) {
		var currentKey = _keys ? _keys[index] : index;
		results$4[index] = iteratee$1(obj[currentKey], currentKey, obj);
	}
	return results$4;
}
var init_map = __esm({ "node_modules/underscore/modules/map.js": (() => {
	init__cb();
	init__isArrayLike();
	init_keys();
}) });

//#endregion
//#region node_modules/underscore/modules/_createReduce.js
function createReduce(dir) {
	var reducer = function(obj, iteratee$1, memo, initial$1) {
		var _keys = !_isArrayLike_default(obj) && keys(obj), length = (_keys || obj).length, index = dir > 0 ? 0 : length - 1;
		if (!initial$1) {
			memo = obj[_keys ? _keys[index] : index];
			index += dir;
		}
		for (; index >= 0 && index < length; index += dir) {
			var currentKey = _keys ? _keys[index] : index;
			memo = iteratee$1(memo, obj[currentKey], currentKey, obj);
		}
		return memo;
	};
	return function(obj, iteratee$1, memo, context) {
		var initial$1 = arguments.length >= 3;
		return reducer(obj, optimizeCb(iteratee$1, context, 4), memo, initial$1);
	};
}
var init__createReduce = __esm({ "node_modules/underscore/modules/_createReduce.js": (() => {
	init__isArrayLike();
	init_keys();
	init__optimizeCb();
}) });

//#endregion
//#region node_modules/underscore/modules/reduce.js
var reduce_default;
var init_reduce = __esm({ "node_modules/underscore/modules/reduce.js": (() => {
	init__createReduce();
	reduce_default = createReduce(1);
}) });

//#endregion
//#region node_modules/underscore/modules/reduceRight.js
var reduceRight_default;
var init_reduceRight = __esm({ "node_modules/underscore/modules/reduceRight.js": (() => {
	init__createReduce();
	reduceRight_default = createReduce(-1);
}) });

//#endregion
//#region node_modules/underscore/modules/filter.js
function filter(obj, predicate, context) {
	var results$4 = [];
	predicate = cb(predicate, context);
	each(obj, function(value, index, list) {
		if (predicate(value, index, list)) results$4.push(value);
	});
	return results$4;
}
var init_filter = __esm({ "node_modules/underscore/modules/filter.js": (() => {
	init__cb();
	init_each();
}) });

//#endregion
//#region node_modules/underscore/modules/reject.js
function reject(obj, predicate, context) {
	return filter(obj, negate(cb(predicate)), context);
}
var init_reject = __esm({ "node_modules/underscore/modules/reject.js": (() => {
	init_filter();
	init_negate();
	init__cb();
}) });

//#endregion
//#region node_modules/underscore/modules/every.js
function every(obj, predicate, context) {
	predicate = cb(predicate, context);
	var _keys = !_isArrayLike_default(obj) && keys(obj), length = (_keys || obj).length;
	for (var index = 0; index < length; index++) {
		var currentKey = _keys ? _keys[index] : index;
		if (!predicate(obj[currentKey], currentKey, obj)) return false;
	}
	return true;
}
var init_every = __esm({ "node_modules/underscore/modules/every.js": (() => {
	init__cb();
	init__isArrayLike();
	init_keys();
}) });

//#endregion
//#region node_modules/underscore/modules/some.js
function some(obj, predicate, context) {
	predicate = cb(predicate, context);
	var _keys = !_isArrayLike_default(obj) && keys(obj), length = (_keys || obj).length;
	for (var index = 0; index < length; index++) {
		var currentKey = _keys ? _keys[index] : index;
		if (predicate(obj[currentKey], currentKey, obj)) return true;
	}
	return false;
}
var init_some = __esm({ "node_modules/underscore/modules/some.js": (() => {
	init__cb();
	init__isArrayLike();
	init_keys();
}) });

//#endregion
//#region node_modules/underscore/modules/contains.js
function contains(obj, item, fromIndex, guard) {
	if (!_isArrayLike_default(obj)) obj = values(obj);
	if (typeof fromIndex != "number" || guard) fromIndex = 0;
	return indexOf_default(obj, item, fromIndex) >= 0;
}
var init_contains = __esm({ "node_modules/underscore/modules/contains.js": (() => {
	init__isArrayLike();
	init_values();
	init_indexOf();
}) });

//#endregion
//#region node_modules/underscore/modules/invoke.js
var invoke_default;
var init_invoke = __esm({ "node_modules/underscore/modules/invoke.js": (() => {
	init_restArguments();
	init_isFunction();
	init_map();
	init__deepGet();
	init__toPath();
	invoke_default = restArguments(function(obj, path, args) {
		var contextPath, func;
		if (isFunction_default(path)) func = path;
		else {
			path = toPath$1(path);
			contextPath = path.slice(0, -1);
			path = path[path.length - 1];
		}
		return map(obj, function(context) {
			var method = func;
			if (!method) {
				if (contextPath && contextPath.length) context = deepGet(context, contextPath);
				if (context == null) return void 0;
				method = context[path];
			}
			return method == null ? method : method.apply(context, args);
		});
	});
}) });

//#endregion
//#region node_modules/underscore/modules/pluck.js
function pluck(obj, key) {
	return map(obj, property(key));
}
var init_pluck = __esm({ "node_modules/underscore/modules/pluck.js": (() => {
	init_map();
	init_property();
}) });

//#endregion
//#region node_modules/underscore/modules/where.js
function where(obj, attrs) {
	return filter(obj, matcher(attrs));
}
var init_where = __esm({ "node_modules/underscore/modules/where.js": (() => {
	init_filter();
	init_matcher();
}) });

//#endregion
//#region node_modules/underscore/modules/max.js
function max(obj, iteratee$1, context) {
	var result$1 = -Infinity, lastComputed = -Infinity, value, computed;
	if (iteratee$1 == null || typeof iteratee$1 == "number" && typeof obj[0] != "object" && obj != null) {
		obj = _isArrayLike_default(obj) ? obj : values(obj);
		for (var i$2 = 0, length = obj.length; i$2 < length; i$2++) {
			value = obj[i$2];
			if (value != null && value > result$1) result$1 = value;
		}
	} else {
		iteratee$1 = cb(iteratee$1, context);
		each(obj, function(v, index, list) {
			computed = iteratee$1(v, index, list);
			if (computed > lastComputed || computed === -Infinity && result$1 === -Infinity) {
				result$1 = v;
				lastComputed = computed;
			}
		});
	}
	return result$1;
}
var init_max = __esm({ "node_modules/underscore/modules/max.js": (() => {
	init__isArrayLike();
	init_values();
	init__cb();
	init_each();
}) });

//#endregion
//#region node_modules/underscore/modules/min.js
function min(obj, iteratee$1, context) {
	var result$1 = Infinity, lastComputed = Infinity, value, computed;
	if (iteratee$1 == null || typeof iteratee$1 == "number" && typeof obj[0] != "object" && obj != null) {
		obj = _isArrayLike_default(obj) ? obj : values(obj);
		for (var i$2 = 0, length = obj.length; i$2 < length; i$2++) {
			value = obj[i$2];
			if (value != null && value < result$1) result$1 = value;
		}
	} else {
		iteratee$1 = cb(iteratee$1, context);
		each(obj, function(v, index, list) {
			computed = iteratee$1(v, index, list);
			if (computed < lastComputed || computed === Infinity && result$1 === Infinity) {
				result$1 = v;
				lastComputed = computed;
			}
		});
	}
	return result$1;
}
var init_min = __esm({ "node_modules/underscore/modules/min.js": (() => {
	init__isArrayLike();
	init_values();
	init__cb();
	init_each();
}) });

//#endregion
//#region node_modules/underscore/modules/toArray.js
function toArray(obj) {
	if (!obj) return [];
	if (isArray_default(obj)) return slice.call(obj);
	if (isString_default(obj)) return obj.match(reStrSymbol);
	if (_isArrayLike_default(obj)) return map(obj, identity$3);
	return values(obj);
}
var reStrSymbol;
var init_toArray = __esm({ "node_modules/underscore/modules/toArray.js": (() => {
	init_isArray();
	init__setup();
	init_isString();
	init__isArrayLike();
	init_map();
	init_identity();
	init_values();
	reStrSymbol = /[^\ud800-\udfff]|[\ud800-\udbff][\udc00-\udfff]|[\ud800-\udfff]/g;
}) });

//#endregion
//#region node_modules/underscore/modules/sample.js
function sample(obj, n, guard) {
	if (n == null || guard) {
		if (!_isArrayLike_default(obj)) obj = values(obj);
		return obj[random(obj.length - 1)];
	}
	var sample$1 = toArray(obj);
	var length = _getLength_default(sample$1);
	n = Math.max(Math.min(n, length), 0);
	var last$1 = length - 1;
	for (var index = 0; index < n; index++) {
		var rand = random(index, last$1);
		var temp = sample$1[index];
		sample$1[index] = sample$1[rand];
		sample$1[rand] = temp;
	}
	return sample$1.slice(0, n);
}
var init_sample = __esm({ "node_modules/underscore/modules/sample.js": (() => {
	init__isArrayLike();
	init_values();
	init__getLength();
	init_random();
	init_toArray();
}) });

//#endregion
//#region node_modules/underscore/modules/shuffle.js
function shuffle(obj) {
	return sample(obj, Infinity);
}
var init_shuffle = __esm({ "node_modules/underscore/modules/shuffle.js": (() => {
	init_sample();
}) });

//#endregion
//#region node_modules/underscore/modules/sortBy.js
function sortBy(obj, iteratee$1, context) {
	var index = 0;
	iteratee$1 = cb(iteratee$1, context);
	return pluck(map(obj, function(value, key, list) {
		return {
			value,
			index: index++,
			criteria: iteratee$1(value, key, list)
		};
	}).sort(function(left, right) {
		var a = left.criteria;
		var b = right.criteria;
		if (a !== b) {
			if (a > b || a === void 0) return 1;
			if (a < b || b === void 0) return -1;
		}
		return left.index - right.index;
	}), "value");
}
var init_sortBy = __esm({ "node_modules/underscore/modules/sortBy.js": (() => {
	init__cb();
	init_pluck();
	init_map();
}) });

//#endregion
//#region node_modules/underscore/modules/_group.js
function group(behavior, partition) {
	return function(obj, iteratee$1, context) {
		var result$1 = partition ? [[], []] : {};
		iteratee$1 = cb(iteratee$1, context);
		each(obj, function(value, index) {
			var key = iteratee$1(value, index, obj);
			behavior(result$1, value, key);
		});
		return result$1;
	};
}
var init__group = __esm({ "node_modules/underscore/modules/_group.js": (() => {
	init__cb();
	init_each();
}) });

//#endregion
//#region node_modules/underscore/modules/groupBy.js
var groupBy_default;
var init_groupBy = __esm({ "node_modules/underscore/modules/groupBy.js": (() => {
	init__group();
	init__has();
	groupBy_default = group(function(result$1, value, key) {
		if (has$2(result$1, key)) result$1[key].push(value);
		else result$1[key] = [value];
	});
}) });

//#endregion
//#region node_modules/underscore/modules/indexBy.js
var indexBy_default;
var init_indexBy = __esm({ "node_modules/underscore/modules/indexBy.js": (() => {
	init__group();
	indexBy_default = group(function(result$1, value, key) {
		result$1[key] = value;
	});
}) });

//#endregion
//#region node_modules/underscore/modules/countBy.js
var countBy_default;
var init_countBy = __esm({ "node_modules/underscore/modules/countBy.js": (() => {
	init__group();
	init__has();
	countBy_default = group(function(result$1, value, key) {
		if (has$2(result$1, key)) result$1[key]++;
		else result$1[key] = 1;
	});
}) });

//#endregion
//#region node_modules/underscore/modules/partition.js
var partition_default;
var init_partition = __esm({ "node_modules/underscore/modules/partition.js": (() => {
	init__group();
	partition_default = group(function(result$1, value, pass) {
		result$1[pass ? 0 : 1].push(value);
	}, true);
}) });

//#endregion
//#region node_modules/underscore/modules/size.js
function size(obj) {
	if (obj == null) return 0;
	return _isArrayLike_default(obj) ? obj.length : keys(obj).length;
}
var init_size = __esm({ "node_modules/underscore/modules/size.js": (() => {
	init__isArrayLike();
	init_keys();
}) });

//#endregion
//#region node_modules/underscore/modules/_keyInObj.js
function keyInObj(value, key, obj) {
	return key in obj;
}
var init__keyInObj = __esm({ "node_modules/underscore/modules/_keyInObj.js": (() => {}) });

//#endregion
//#region node_modules/underscore/modules/pick.js
var pick_default;
var init_pick = __esm({ "node_modules/underscore/modules/pick.js": (() => {
	init_restArguments();
	init_isFunction();
	init__optimizeCb();
	init_allKeys();
	init__keyInObj();
	init__flatten();
	pick_default = restArguments(function(obj, keys$1) {
		var result$1 = {}, iteratee$1 = keys$1[0];
		if (obj == null) return result$1;
		if (isFunction_default(iteratee$1)) {
			if (keys$1.length > 1) iteratee$1 = optimizeCb(iteratee$1, keys$1[1]);
			keys$1 = allKeys(obj);
		} else {
			iteratee$1 = keyInObj;
			keys$1 = flatten$1(keys$1, false, false);
			obj = Object(obj);
		}
		for (var i$2 = 0, length = keys$1.length; i$2 < length; i$2++) {
			var key = keys$1[i$2];
			var value = obj[key];
			if (iteratee$1(value, key, obj)) result$1[key] = value;
		}
		return result$1;
	});
}) });

//#endregion
//#region node_modules/underscore/modules/omit.js
var omit_default;
var init_omit = __esm({ "node_modules/underscore/modules/omit.js": (() => {
	init_restArguments();
	init_isFunction();
	init_negate();
	init_map();
	init__flatten();
	init_contains();
	init_pick();
	omit_default = restArguments(function(obj, keys$1) {
		var iteratee$1 = keys$1[0], context;
		if (isFunction_default(iteratee$1)) {
			iteratee$1 = negate(iteratee$1);
			if (keys$1.length > 1) context = keys$1[1];
		} else {
			keys$1 = map(flatten$1(keys$1, false, false), String);
			iteratee$1 = function(value, key) {
				return !contains(keys$1, key);
			};
		}
		return pick_default(obj, iteratee$1, context);
	});
}) });

//#endregion
//#region node_modules/underscore/modules/initial.js
function initial(array, n, guard) {
	return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));
}
var init_initial = __esm({ "node_modules/underscore/modules/initial.js": (() => {
	init__setup();
}) });

//#endregion
//#region node_modules/underscore/modules/first.js
function first(array, n, guard) {
	if (array == null || array.length < 1) return n == null || guard ? void 0 : [];
	if (n == null || guard) return array[0];
	return initial(array, array.length - n);
}
var init_first = __esm({ "node_modules/underscore/modules/first.js": (() => {
	init_initial();
}) });

//#endregion
//#region node_modules/underscore/modules/rest.js
function rest(array, n, guard) {
	return slice.call(array, n == null || guard ? 1 : n);
}
var init_rest = __esm({ "node_modules/underscore/modules/rest.js": (() => {
	init__setup();
}) });

//#endregion
//#region node_modules/underscore/modules/last.js
function last(array, n, guard) {
	if (array == null || array.length < 1) return n == null || guard ? void 0 : [];
	if (n == null || guard) return array[array.length - 1];
	return rest(array, Math.max(0, array.length - n));
}
var init_last = __esm({ "node_modules/underscore/modules/last.js": (() => {
	init_rest();
}) });

//#endregion
//#region node_modules/underscore/modules/compact.js
function compact(array) {
	return filter(array, Boolean);
}
var init_compact = __esm({ "node_modules/underscore/modules/compact.js": (() => {
	init_filter();
}) });

//#endregion
//#region node_modules/underscore/modules/flatten.js
function flatten(array, depth) {
	return flatten$1(array, depth, false);
}
var init_flatten = __esm({ "node_modules/underscore/modules/flatten.js": (() => {
	init__flatten();
}) });

//#endregion
//#region node_modules/underscore/modules/difference.js
var difference_default;
var init_difference = __esm({ "node_modules/underscore/modules/difference.js": (() => {
	init_restArguments();
	init__flatten();
	init_filter();
	init_contains();
	difference_default = restArguments(function(array, rest$1) {
		rest$1 = flatten$1(rest$1, true, true);
		return filter(array, function(value) {
			return !contains(rest$1, value);
		});
	});
}) });

//#endregion
//#region node_modules/underscore/modules/without.js
var without_default;
var init_without = __esm({ "node_modules/underscore/modules/without.js": (() => {
	init_restArguments();
	init_difference();
	without_default = restArguments(function(array, otherArrays) {
		return difference_default(array, otherArrays);
	});
}) });

//#endregion
//#region node_modules/underscore/modules/uniq.js
function uniq(array, isSorted, iteratee$1, context) {
	if (!isBoolean(isSorted)) {
		context = iteratee$1;
		iteratee$1 = isSorted;
		isSorted = false;
	}
	if (iteratee$1 != null) iteratee$1 = cb(iteratee$1, context);
	var result$1 = [];
	var seen = [];
	for (var i$2 = 0, length = _getLength_default(array); i$2 < length; i$2++) {
		var value = array[i$2], computed = iteratee$1 ? iteratee$1(value, i$2, array) : value;
		if (isSorted && !iteratee$1) {
			if (!i$2 || seen !== computed) result$1.push(value);
			seen = computed;
		} else if (iteratee$1) {
			if (!contains(seen, computed)) {
				seen.push(computed);
				result$1.push(value);
			}
		} else if (!contains(result$1, value)) result$1.push(value);
	}
	return result$1;
}
var init_uniq = __esm({ "node_modules/underscore/modules/uniq.js": (() => {
	init_isBoolean();
	init__cb();
	init__getLength();
	init_contains();
}) });

//#endregion
//#region node_modules/underscore/modules/union.js
var union_default;
var init_union = __esm({ "node_modules/underscore/modules/union.js": (() => {
	init_restArguments();
	init_uniq();
	init__flatten();
	union_default = restArguments(function(arrays) {
		return uniq(flatten$1(arrays, true, true));
	});
}) });

//#endregion
//#region node_modules/underscore/modules/intersection.js
function intersection(array) {
	var result$1 = [];
	var argsLength = arguments.length;
	for (var i$2 = 0, length = _getLength_default(array); i$2 < length; i$2++) {
		var item = array[i$2];
		if (contains(result$1, item)) continue;
		var j;
		for (j = 1; j < argsLength; j++) if (!contains(arguments[j], item)) break;
		if (j === argsLength) result$1.push(item);
	}
	return result$1;
}
var init_intersection = __esm({ "node_modules/underscore/modules/intersection.js": (() => {
	init__getLength();
	init_contains();
}) });

//#endregion
//#region node_modules/underscore/modules/unzip.js
function unzip$1(array) {
	var length = array && max(array, _getLength_default).length || 0;
	var result$1 = Array(length);
	for (var index = 0; index < length; index++) result$1[index] = pluck(array, index);
	return result$1;
}
var init_unzip = __esm({ "node_modules/underscore/modules/unzip.js": (() => {
	init_max();
	init__getLength();
	init_pluck();
}) });

//#endregion
//#region node_modules/underscore/modules/zip.js
var zip_default;
var init_zip = __esm({ "node_modules/underscore/modules/zip.js": (() => {
	init_restArguments();
	init_unzip();
	zip_default = restArguments(unzip$1);
}) });

//#endregion
//#region node_modules/underscore/modules/object.js
function object(list, values$1) {
	var result$1 = {};
	for (var i$2 = 0, length = _getLength_default(list); i$2 < length; i$2++) if (values$1) result$1[list[i$2]] = values$1[i$2];
	else result$1[list[i$2][0]] = list[i$2][1];
	return result$1;
}
var init_object = __esm({ "node_modules/underscore/modules/object.js": (() => {
	init__getLength();
}) });

//#endregion
//#region node_modules/underscore/modules/range.js
function range(start, stop, step) {
	if (stop == null) {
		stop = start || 0;
		start = 0;
	}
	if (!step) step = stop < start ? -1 : 1;
	var length = Math.max(Math.ceil((stop - start) / step), 0);
	var range$1 = Array(length);
	for (var idx = 0; idx < length; idx++, start += step) range$1[idx] = start;
	return range$1;
}
var init_range = __esm({ "node_modules/underscore/modules/range.js": (() => {}) });

//#endregion
//#region node_modules/underscore/modules/chunk.js
function chunk(array, count) {
	if (count == null || count < 1) return [];
	var result$1 = [];
	var i$2 = 0, length = array.length;
	while (i$2 < length) result$1.push(slice.call(array, i$2, i$2 += count));
	return result$1;
}
var init_chunk = __esm({ "node_modules/underscore/modules/chunk.js": (() => {
	init__setup();
}) });

//#endregion
//#region node_modules/underscore/modules/_chainResult.js
function chainResult(instance, obj) {
	return instance._chain ? _$22(obj).chain() : obj;
}
var init__chainResult = __esm({ "node_modules/underscore/modules/_chainResult.js": (() => {
	init_underscore();
}) });

//#endregion
//#region node_modules/underscore/modules/mixin.js
function mixin(obj) {
	each(functions(obj), function(name) {
		var func = _$22[name] = obj[name];
		_$22.prototype[name] = function() {
			var args = [this._wrapped];
			push.apply(args, arguments);
			return chainResult(this, func.apply(_$22, args));
		};
	});
	return _$22;
}
var init_mixin = __esm({ "node_modules/underscore/modules/mixin.js": (() => {
	init_underscore();
	init_each();
	init_functions();
	init__setup();
	init__chainResult();
}) });

//#endregion
//#region node_modules/underscore/modules/underscore-array-methods.js
var underscore_array_methods_default;
var init_underscore_array_methods = __esm({ "node_modules/underscore/modules/underscore-array-methods.js": (() => {
	init_underscore();
	init_each();
	init__setup();
	init__chainResult();
	each([
		"pop",
		"push",
		"reverse",
		"shift",
		"sort",
		"splice",
		"unshift"
	], function(name) {
		var method = ArrayProto[name];
		_$22.prototype[name] = function() {
			var obj = this._wrapped;
			if (obj != null) {
				method.apply(obj, arguments);
				if ((name === "shift" || name === "splice") && obj.length === 0) delete obj[0];
			}
			return chainResult(this, obj);
		};
	});
	each([
		"concat",
		"join",
		"slice"
	], function(name) {
		var method = ArrayProto[name];
		_$22.prototype[name] = function() {
			var obj = this._wrapped;
			if (obj != null) obj = method.apply(obj, arguments);
			return chainResult(this, obj);
		};
	});
	underscore_array_methods_default = _$22;
}) });

//#endregion
//#region node_modules/underscore/modules/index.js
var modules_exports = /* @__PURE__ */ __export({
	VERSION: () => VERSION,
	after: () => after,
	all: () => every,
	allKeys: () => allKeys,
	any: () => some,
	assign: () => extendOwn_default,
	before: () => before,
	bind: () => bind_default,
	bindAll: () => bindAll_default,
	chain: () => chain,
	chunk: () => chunk,
	clone: () => clone,
	collect: () => map,
	compact: () => compact,
	compose: () => compose,
	constant: () => constant,
	contains: () => contains,
	countBy: () => countBy_default,
	create: () => create,
	debounce: () => debounce,
	default: () => underscore_array_methods_default,
	defaults: () => defaults_default,
	defer: () => defer_default,
	delay: () => delay_default,
	detect: () => find$2,
	difference: () => difference_default,
	drop: () => rest,
	each: () => each,
	escape: () => escape_default,
	every: () => every,
	extend: () => extend_default,
	extendOwn: () => extendOwn_default,
	filter: () => filter,
	find: () => find$2,
	findIndex: () => findIndex_default,
	findKey: () => findKey,
	findLastIndex: () => findLastIndex_default,
	findWhere: () => findWhere,
	first: () => first,
	flatten: () => flatten,
	foldl: () => reduce_default,
	foldr: () => reduceRight_default,
	forEach: () => each,
	functions: () => functions,
	get: () => get,
	groupBy: () => groupBy_default,
	has: () => has$1,
	head: () => first,
	identity: () => identity$3,
	include: () => contains,
	includes: () => contains,
	indexBy: () => indexBy_default,
	indexOf: () => indexOf_default,
	initial: () => initial,
	inject: () => reduce_default,
	intersection: () => intersection,
	invert: () => invert,
	invoke: () => invoke_default,
	isArguments: () => isArguments_default,
	isArray: () => isArray_default,
	isArrayBuffer: () => isArrayBuffer_default,
	isBoolean: () => isBoolean,
	isDataView: () => isDataView_default,
	isDate: () => isDate_default,
	isElement: () => isElement,
	isEmpty: () => isEmpty,
	isEqual: () => isEqual,
	isError: () => isError_default,
	isFinite: () => isFinite$1,
	isFunction: () => isFunction_default,
	isMap: () => isMap_default,
	isMatch: () => isMatch,
	isNaN: () => isNaN$1,
	isNull: () => isNull,
	isNumber: () => isNumber_default,
	isObject: () => isObject$1,
	isRegExp: () => isRegExp_default,
	isSet: () => isSet_default,
	isString: () => isString_default,
	isSymbol: () => isSymbol_default,
	isTypedArray: () => isTypedArray_default,
	isUndefined: () => isUndefined,
	isWeakMap: () => isWeakMap_default,
	isWeakSet: () => isWeakSet_default,
	iteratee: () => iteratee,
	keys: () => keys,
	last: () => last,
	lastIndexOf: () => lastIndexOf_default,
	map: () => map,
	mapObject: () => mapObject,
	matcher: () => matcher,
	matches: () => matcher,
	max: () => max,
	memoize: () => memoize,
	methods: () => functions,
	min: () => min,
	mixin: () => mixin,
	negate: () => negate,
	noop: () => noop,
	now: () => now_default,
	object: () => object,
	omit: () => omit_default,
	once: () => once_default,
	pairs: () => pairs,
	partial: () => partial_default,
	partition: () => partition_default,
	pick: () => pick_default,
	pluck: () => pluck,
	property: () => property,
	propertyOf: () => propertyOf,
	random: () => random,
	range: () => range,
	reduce: () => reduce_default,
	reduceRight: () => reduceRight_default,
	reject: () => reject,
	rest: () => rest,
	restArguments: () => restArguments,
	result: () => result,
	sample: () => sample,
	select: () => filter,
	shuffle: () => shuffle,
	size: () => size,
	some: () => some,
	sortBy: () => sortBy,
	sortedIndex: () => sortedIndex,
	tail: () => rest,
	take: () => first,
	tap: () => tap,
	template: () => template,
	templateSettings: () => templateSettings_default,
	throttle: () => throttle,
	times: () => times,
	toArray: () => toArray,
	toPath: () => toPath,
	transpose: () => unzip$1,
	unescape: () => unescape_default,
	union: () => union_default,
	uniq: () => uniq,
	unique: () => uniq,
	uniqueId: () => uniqueId,
	unzip: () => unzip$1,
	values: () => values,
	where: () => where,
	without: () => without_default,
	wrap: () => wrap,
	zip: () => zip_default
});
var init_modules = __esm({ "node_modules/underscore/modules/index.js": (() => {
	init__setup();
	init_restArguments();
	init_isObject();
	init_isNull();
	init_isUndefined();
	init_isBoolean();
	init_isElement();
	init_isString();
	init_isNumber();
	init_isDate();
	init_isRegExp();
	init_isError();
	init_isSymbol();
	init_isArrayBuffer();
	init_isDataView();
	init_isArray();
	init_isFunction();
	init_isArguments();
	init_isFinite();
	init_isNaN();
	init_isTypedArray();
	init_isEmpty();
	init_isMatch();
	init_isEqual();
	init_isMap();
	init_isWeakMap();
	init_isSet();
	init_isWeakSet();
	init_keys();
	init_allKeys();
	init_values();
	init_pairs();
	init_invert();
	init_functions();
	init_extend();
	init_extendOwn();
	init_defaults();
	init_create();
	init_clone();
	init_tap();
	init_get();
	init_has();
	init_mapObject();
	init_identity();
	init_constant();
	init_noop();
	init_toPath();
	init_property();
	init_propertyOf();
	init_matcher();
	init_times();
	init_random();
	init_now();
	init_escape();
	init_unescape();
	init_templateSettings();
	init_template();
	init_result();
	init_uniqueId();
	init_chain();
	init_iteratee();
	init_partial();
	init_bind();
	init_bindAll();
	init_memoize();
	init_delay();
	init_defer();
	init_throttle();
	init_debounce();
	init_wrap();
	init_negate();
	init_compose();
	init_after();
	init_before();
	init_once();
	init_findKey();
	init_findIndex();
	init_findLastIndex();
	init_sortedIndex();
	init_indexOf();
	init_lastIndexOf();
	init_find();
	init_findWhere();
	init_each();
	init_map();
	init_reduce();
	init_reduceRight();
	init_filter();
	init_reject();
	init_every();
	init_some();
	init_contains();
	init_invoke();
	init_pluck();
	init_where();
	init_max();
	init_min();
	init_shuffle();
	init_sample();
	init_sortBy();
	init_groupBy();
	init_indexBy();
	init_countBy();
	init_partition();
	init_toArray();
	init_size();
	init_pick();
	init_omit();
	init_first();
	init_initial();
	init_last();
	init_rest();
	init_compact();
	init_flatten();
	init_without();
	init_uniq();
	init_union();
	init_intersection();
	init_difference();
	init_unzip();
	init_zip();
	init_object();
	init_range();
	init_chunk();
	init_mixin();
	init_underscore_array_methods();
}) });

//#endregion
//#region node_modules/underscore/modules/index-default.js
var _$21, index_default_default;
var init_index_default = __esm({ "node_modules/underscore/modules/index-default.js": (() => {
	init_modules();
	_$21 = mixin(modules_exports);
	_$21._ = _$21;
	index_default_default = _$21;
}) });

//#endregion
//#region node_modules/underscore/modules/index-all.js
var index_all_exports = /* @__PURE__ */ __export({
	VERSION: () => VERSION,
	after: () => after,
	all: () => every,
	allKeys: () => allKeys,
	any: () => some,
	assign: () => extendOwn_default,
	before: () => before,
	bind: () => bind_default,
	bindAll: () => bindAll_default,
	chain: () => chain,
	chunk: () => chunk,
	clone: () => clone,
	collect: () => map,
	compact: () => compact,
	compose: () => compose,
	constant: () => constant,
	contains: () => contains,
	countBy: () => countBy_default,
	create: () => create,
	debounce: () => debounce,
	default: () => index_default_default,
	defaults: () => defaults_default,
	defer: () => defer_default,
	delay: () => delay_default,
	detect: () => find$2,
	difference: () => difference_default,
	drop: () => rest,
	each: () => each,
	escape: () => escape_default,
	every: () => every,
	extend: () => extend_default,
	extendOwn: () => extendOwn_default,
	filter: () => filter,
	find: () => find$2,
	findIndex: () => findIndex_default,
	findKey: () => findKey,
	findLastIndex: () => findLastIndex_default,
	findWhere: () => findWhere,
	first: () => first,
	flatten: () => flatten,
	foldl: () => reduce_default,
	foldr: () => reduceRight_default,
	forEach: () => each,
	functions: () => functions,
	get: () => get,
	groupBy: () => groupBy_default,
	has: () => has$1,
	head: () => first,
	identity: () => identity$3,
	include: () => contains,
	includes: () => contains,
	indexBy: () => indexBy_default,
	indexOf: () => indexOf_default,
	initial: () => initial,
	inject: () => reduce_default,
	intersection: () => intersection,
	invert: () => invert,
	invoke: () => invoke_default,
	isArguments: () => isArguments_default,
	isArray: () => isArray_default,
	isArrayBuffer: () => isArrayBuffer_default,
	isBoolean: () => isBoolean,
	isDataView: () => isDataView_default,
	isDate: () => isDate_default,
	isElement: () => isElement,
	isEmpty: () => isEmpty,
	isEqual: () => isEqual,
	isError: () => isError_default,
	isFinite: () => isFinite$1,
	isFunction: () => isFunction_default,
	isMap: () => isMap_default,
	isMatch: () => isMatch,
	isNaN: () => isNaN$1,
	isNull: () => isNull,
	isNumber: () => isNumber_default,
	isObject: () => isObject$1,
	isRegExp: () => isRegExp_default,
	isSet: () => isSet_default,
	isString: () => isString_default,
	isSymbol: () => isSymbol_default,
	isTypedArray: () => isTypedArray_default,
	isUndefined: () => isUndefined,
	isWeakMap: () => isWeakMap_default,
	isWeakSet: () => isWeakSet_default,
	iteratee: () => iteratee,
	keys: () => keys,
	last: () => last,
	lastIndexOf: () => lastIndexOf_default,
	map: () => map,
	mapObject: () => mapObject,
	matcher: () => matcher,
	matches: () => matcher,
	max: () => max,
	memoize: () => memoize,
	methods: () => functions,
	min: () => min,
	mixin: () => mixin,
	negate: () => negate,
	noop: () => noop,
	now: () => now_default,
	object: () => object,
	omit: () => omit_default,
	once: () => once_default,
	pairs: () => pairs,
	partial: () => partial_default,
	partition: () => partition_default,
	pick: () => pick_default,
	pluck: () => pluck,
	property: () => property,
	propertyOf: () => propertyOf,
	random: () => random,
	range: () => range,
	reduce: () => reduce_default,
	reduceRight: () => reduceRight_default,
	reject: () => reject,
	rest: () => rest,
	restArguments: () => restArguments,
	result: () => result,
	sample: () => sample,
	select: () => filter,
	shuffle: () => shuffle,
	size: () => size,
	some: () => some,
	sortBy: () => sortBy,
	sortedIndex: () => sortedIndex,
	tail: () => rest,
	take: () => first,
	tap: () => tap,
	template: () => template,
	templateSettings: () => templateSettings_default,
	throttle: () => throttle,
	times: () => times,
	toArray: () => toArray,
	toPath: () => toPath,
	transpose: () => unzip$1,
	unescape: () => unescape_default,
	union: () => union_default,
	uniq: () => uniq,
	unique: () => uniq,
	uniqueId: () => uniqueId,
	unzip: () => unzip$1,
	values: () => values,
	where: () => where,
	without: () => without_default,
	wrap: () => wrap,
	zip: () => zip_default
});
var init_index_all = __esm({ "node_modules/underscore/modules/index-all.js": (() => {
	init_index_default();
	init_modules();
}) });

//#endregion
//#region node_modules/bluebird/js/release/es5.js
var require_es5 = /* @__PURE__ */ __commonJS({ "node_modules/bluebird/js/release/es5.js": ((exports, module) => {
	var isES5 = (function() {
		return this === void 0;
	})();
	if (isES5) module.exports = {
		freeze: Object.freeze,
		defineProperty: Object.defineProperty,
		getDescriptor: Object.getOwnPropertyDescriptor,
		keys: Object.keys,
		names: Object.getOwnPropertyNames,
		getPrototypeOf: Object.getPrototypeOf,
		isArray: Array.isArray,
		isES5,
		propertyIsWritable: function(obj, prop) {
			var descriptor = Object.getOwnPropertyDescriptor(obj, prop);
			return !!(!descriptor || descriptor.writable || descriptor.set);
		}
	};
	else {
		var has = {}.hasOwnProperty;
		var str = {}.toString;
		var proto = {}.constructor.prototype;
		var ObjectKeys = function(o) {
			var ret$1 = [];
			for (var key in o) if (has.call(o, key)) ret$1.push(key);
			return ret$1;
		};
		var ObjectGetDescriptor = function(o, key) {
			return { value: o[key] };
		};
		var ObjectDefineProperty = function(o, key, desc) {
			o[key] = desc.value;
			return o;
		};
		var ObjectFreeze = function(obj) {
			return obj;
		};
		var ObjectGetPrototypeOf = function(obj) {
			try {
				return Object(obj).constructor.prototype;
			} catch (e) {
				return proto;
			}
		};
		var ArrayIsArray = function(obj) {
			try {
				return str.call(obj) === "[object Array]";
			} catch (e) {
				return false;
			}
		};
		module.exports = {
			isArray: ArrayIsArray,
			keys: ObjectKeys,
			names: ObjectKeys,
			defineProperty: ObjectDefineProperty,
			getDescriptor: ObjectGetDescriptor,
			freeze: ObjectFreeze,
			getPrototypeOf: ObjectGetPrototypeOf,
			isES5,
			propertyIsWritable: function() {
				return true;
			}
		};
	}
}) });

//#endregion
//#region node_modules/bluebird/js/release/util.js
var require_util = /* @__PURE__ */ __commonJS({ "node_modules/bluebird/js/release/util.js": ((exports, module) => {
	var es5$2 = require_es5();
	var canEvaluate = typeof navigator == "undefined";
	var errorObj = { e: {} };
	var tryCatchTarget;
	var globalObject = typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : exports !== void 0 ? exports : null;
	function tryCatcher() {
		try {
			var target = tryCatchTarget;
			tryCatchTarget = null;
			return target.apply(this, arguments);
		} catch (e) {
			errorObj.e = e;
			return errorObj;
		}
	}
	function tryCatch(fn) {
		tryCatchTarget = fn;
		return tryCatcher;
	}
	var inherits$1 = function(Child, Parent) {
		var hasProp = {}.hasOwnProperty;
		function T() {
			this.constructor = Child;
			this.constructor$ = Parent;
			for (var propertyName in Parent.prototype) if (hasProp.call(Parent.prototype, propertyName) && propertyName.charAt(propertyName.length - 1) !== "$") this[propertyName + "$"] = Parent.prototype[propertyName];
		}
		T.prototype = Parent.prototype;
		Child.prototype = new T();
		return Child.prototype;
	};
	function isPrimitive(val) {
		return val == null || val === true || val === false || typeof val === "string" || typeof val === "number";
	}
	function isObject(value) {
		return typeof value === "function" || typeof value === "object" && value !== null;
	}
	function maybeWrapAsError$1(maybeError) {
		if (!isPrimitive(maybeError)) return maybeError;
		return new Error(safeToString(maybeError));
	}
	function withAppended(target, appendee) {
		var len$1 = target.length;
		var ret$1 = new Array(len$1 + 1);
		var i$2;
		for (i$2 = 0; i$2 < len$1; ++i$2) ret$1[i$2] = target[i$2];
		ret$1[i$2] = appendee;
		return ret$1;
	}
	function getDataPropertyOrDefault(obj, key, defaultValue) {
		if (es5$2.isES5) {
			var desc = Object.getOwnPropertyDescriptor(obj, key);
			if (desc != null) return desc.get == null && desc.set == null ? desc.value : defaultValue;
		} else return {}.hasOwnProperty.call(obj, key) ? obj[key] : void 0;
	}
	function notEnumerableProp$1(obj, name, value) {
		if (isPrimitive(obj)) return obj;
		var descriptor = {
			value,
			configurable: true,
			enumerable: false,
			writable: true
		};
		es5$2.defineProperty(obj, name, descriptor);
		return obj;
	}
	function thrower(r) {
		throw r;
	}
	var inheritedDataKeys = (function() {
		var excludedPrototypes = [
			Array.prototype,
			Object.prototype,
			Function.prototype
		];
		var isExcludedProto = function(val) {
			for (var i$2 = 0; i$2 < excludedPrototypes.length; ++i$2) if (excludedPrototypes[i$2] === val) return true;
			return false;
		};
		if (es5$2.isES5) {
			var getKeys = Object.getOwnPropertyNames;
			return function(obj) {
				var ret$1 = [];
				var visitedKeys = Object.create(null);
				while (obj != null && !isExcludedProto(obj)) {
					var keys$1;
					try {
						keys$1 = getKeys(obj);
					} catch (e) {
						return ret$1;
					}
					for (var i$2 = 0; i$2 < keys$1.length; ++i$2) {
						var key = keys$1[i$2];
						if (visitedKeys[key]) continue;
						visitedKeys[key] = true;
						var desc = Object.getOwnPropertyDescriptor(obj, key);
						if (desc != null && desc.get == null && desc.set == null) ret$1.push(key);
					}
					obj = es5$2.getPrototypeOf(obj);
				}
				return ret$1;
			};
		} else {
			var hasProp = {}.hasOwnProperty;
			return function(obj) {
				if (isExcludedProto(obj)) return [];
				var ret$1 = [];
				enumeration: for (var key in obj) if (hasProp.call(obj, key)) ret$1.push(key);
				else {
					for (var i$2 = 0; i$2 < excludedPrototypes.length; ++i$2) if (hasProp.call(excludedPrototypes[i$2], key)) continue enumeration;
					ret$1.push(key);
				}
				return ret$1;
			};
		}
	})();
	var thisAssignmentPattern = /this\s*\.\s*\S+\s*=/;
	function isClass(fn) {
		try {
			if (typeof fn === "function") {
				var keys$1 = es5$2.names(fn.prototype);
				var hasMethods = es5$2.isES5 && keys$1.length > 1;
				var hasMethodsOtherThanConstructor = keys$1.length > 0 && !(keys$1.length === 1 && keys$1[0] === "constructor");
				var hasThisAssignmentAndStaticMethods = thisAssignmentPattern.test(fn + "") && es5$2.names(fn).length > 0;
				if (hasMethods || hasMethodsOtherThanConstructor || hasThisAssignmentAndStaticMethods) return true;
			}
			return false;
		} catch (e) {
			return false;
		}
	}
	function toFastProperties(obj) {
		function FakeConstructor() {}
		FakeConstructor.prototype = obj;
		var l = 8;
		while (l--) new FakeConstructor();
		return obj;
	}
	var rident = /^[a-z$_][a-z$_0-9]*$/i;
	function isIdentifier(str$1) {
		return rident.test(str$1);
	}
	function filledRange(count, prefix, suffix) {
		var ret$1 = new Array(count);
		for (var i$2 = 0; i$2 < count; ++i$2) ret$1[i$2] = prefix + i$2 + suffix;
		return ret$1;
	}
	function safeToString(obj) {
		try {
			return obj + "";
		} catch (e) {
			return "[no string representation]";
		}
	}
	function isError(obj) {
		return obj !== null && typeof obj === "object" && typeof obj.message === "string" && typeof obj.name === "string";
	}
	function markAsOriginatingFromRejection(e) {
		try {
			notEnumerableProp$1(e, "isOperational", true);
		} catch (ignore) {}
	}
	function originatesFromRejection(e) {
		if (e == null) return false;
		return e instanceof Error["__BluebirdErrorTypes__"].OperationalError || e["isOperational"] === true;
	}
	function canAttachTrace(obj) {
		return isError(obj) && es5$2.propertyIsWritable(obj, "stack");
	}
	var ensureErrorObject = (function() {
		if (!("stack" in /* @__PURE__ */ new Error())) return function(value) {
			if (canAttachTrace(value)) return value;
			try {
				throw new Error(safeToString(value));
			} catch (err) {
				return err;
			}
		};
		else return function(value) {
			if (canAttachTrace(value)) return value;
			return new Error(safeToString(value));
		};
	})();
	function classString(obj) {
		return {}.toString.call(obj);
	}
	function copyDescriptors(from, to, filter$1) {
		var keys$1 = es5$2.names(from);
		for (var i$2 = 0; i$2 < keys$1.length; ++i$2) {
			var key = keys$1[i$2];
			if (filter$1(key)) try {
				es5$2.defineProperty(to, key, es5$2.getDescriptor(from, key));
			} catch (ignore) {}
		}
	}
	var asArray = function(v) {
		if (es5$2.isArray(v)) return v;
		return null;
	};
	if (typeof Symbol !== "undefined" && Symbol.iterator) {
		var ArrayFrom = typeof Array.from === "function" ? function(v) {
			return Array.from(v);
		} : function(v) {
			var ret$1 = [];
			var it = v[Symbol.iterator]();
			var itResult;
			while (!(itResult = it.next()).done) ret$1.push(itResult.value);
			return ret$1;
		};
		asArray = function(v) {
			if (es5$2.isArray(v)) return v;
			else if (v != null && typeof v[Symbol.iterator] === "function") return ArrayFrom(v);
			return null;
		};
	}
	var isNode = typeof process !== "undefined" && classString(process).toLowerCase() === "[object process]";
	var hasEnvVariables = typeof process !== "undefined" && typeof process.env !== "undefined";
	function env(key) {
		return hasEnvVariables ? process.env[key] : void 0;
	}
	function getNativePromise() {
		if (typeof Promise === "function") try {
			var promise = new Promise(function() {});
			if ({}.toString.call(promise) === "[object Promise]") return Promise;
		} catch (e) {}
	}
	function domainBind(self$1, cb$1) {
		return self$1.bind(cb$1);
	}
	var ret = {
		isClass,
		isIdentifier,
		inheritedDataKeys,
		getDataPropertyOrDefault,
		thrower,
		isArray: es5$2.isArray,
		asArray,
		notEnumerableProp: notEnumerableProp$1,
		isPrimitive,
		isObject,
		isError,
		canEvaluate,
		errorObj,
		tryCatch,
		inherits: inherits$1,
		withAppended,
		maybeWrapAsError: maybeWrapAsError$1,
		toFastProperties,
		filledRange,
		toString: safeToString,
		canAttachTrace,
		ensureErrorObject,
		originatesFromRejection,
		markAsOriginatingFromRejection,
		classString,
		copyDescriptors,
		hasDevTools: typeof chrome !== "undefined" && chrome && typeof chrome.loadTimes === "function",
		isNode,
		hasEnvVariables,
		env,
		global: globalObject,
		getNativePromise,
		domainBind
	};
	ret.isRecentNode = ret.isNode && (function() {
		var version = process.versions.node.split(".").map(Number);
		return version[0] === 0 && version[1] > 10 || version[0] > 0;
	})();
	if (ret.isNode) ret.toFastProperties(process);
	try {
		throw new Error();
	} catch (e) {
		ret.lastLineError = e;
	}
	module.exports = ret;
}) });

//#endregion
//#region node_modules/bluebird/js/release/schedule.js
var require_schedule = /* @__PURE__ */ __commonJS({ "node_modules/bluebird/js/release/schedule.js": ((exports, module) => {
	var util$3 = require_util();
	var schedule$1;
	var noAsyncScheduler = function() {
		throw new Error("No async scheduler available\n\n    See http://goo.gl/MqrFmX\n");
	};
	var NativePromise = util$3.getNativePromise();
	if (util$3.isNode && typeof MutationObserver === "undefined") {
		var GlobalSetImmediate = global.setImmediate;
		var ProcessNextTick = process.nextTick;
		schedule$1 = util$3.isRecentNode ? function(fn) {
			GlobalSetImmediate.call(global, fn);
		} : function(fn) {
			ProcessNextTick.call(process, fn);
		};
	} else if (typeof NativePromise === "function" && typeof NativePromise.resolve === "function") {
		var nativePromise = NativePromise.resolve();
		schedule$1 = function(fn) {
			nativePromise.then(fn);
		};
	} else if (typeof MutationObserver !== "undefined" && !(typeof window !== "undefined" && window.navigator && (window.navigator.standalone || window.cordova))) schedule$1 = (function() {
		var div = document.createElement("div");
		var opts = { attributes: true };
		var toggleScheduled = false;
		var div2 = document.createElement("div");
		new MutationObserver(function() {
			div.classList.toggle("foo");
			toggleScheduled = false;
		}).observe(div2, opts);
		var scheduleToggle = function() {
			if (toggleScheduled) return;
			toggleScheduled = true;
			div2.classList.toggle("foo");
		};
		return function schedule$2(fn) {
			var o = new MutationObserver(function() {
				o.disconnect();
				fn();
			});
			o.observe(div, opts);
			scheduleToggle();
		};
	})();
	else if (typeof setImmediate !== "undefined") schedule$1 = function(fn) {
		setImmediate(fn);
	};
	else if (typeof setTimeout !== "undefined") schedule$1 = function(fn) {
		setTimeout(fn, 0);
	};
	else schedule$1 = noAsyncScheduler;
	module.exports = schedule$1;
}) });

//#endregion
//#region node_modules/bluebird/js/release/queue.js
var require_queue = /* @__PURE__ */ __commonJS({ "node_modules/bluebird/js/release/queue.js": ((exports, module) => {
	function arrayMove(src, srcIndex, dst, dstIndex, len$1) {
		for (var j = 0; j < len$1; ++j) {
			dst[j + dstIndex] = src[j + srcIndex];
			src[j + srcIndex] = void 0;
		}
	}
	function Queue$1(capacity) {
		this._capacity = capacity;
		this._length = 0;
		this._front = 0;
	}
	Queue$1.prototype._willBeOverCapacity = function(size$1) {
		return this._capacity < size$1;
	};
	Queue$1.prototype._pushOne = function(arg) {
		var length = this.length();
		this._checkCapacity(length + 1);
		var i$2 = this._front + length & this._capacity - 1;
		this[i$2] = arg;
		this._length = length + 1;
	};
	Queue$1.prototype.push = function(fn, receiver, arg) {
		var length = this.length() + 3;
		if (this._willBeOverCapacity(length)) {
			this._pushOne(fn);
			this._pushOne(receiver);
			this._pushOne(arg);
			return;
		}
		var j = this._front + length - 3;
		this._checkCapacity(length);
		var wrapMask = this._capacity - 1;
		this[j + 0 & wrapMask] = fn;
		this[j + 1 & wrapMask] = receiver;
		this[j + 2 & wrapMask] = arg;
		this._length = length;
	};
	Queue$1.prototype.shift = function() {
		var front = this._front, ret$1 = this[front];
		this[front] = void 0;
		this._front = front + 1 & this._capacity - 1;
		this._length--;
		return ret$1;
	};
	Queue$1.prototype.length = function() {
		return this._length;
	};
	Queue$1.prototype._checkCapacity = function(size$1) {
		if (this._capacity < size$1) this._resizeTo(this._capacity << 1);
	};
	Queue$1.prototype._resizeTo = function(capacity) {
		var oldCapacity = this._capacity;
		this._capacity = capacity;
		var front = this._front;
		var length = this._length;
		var moveItemsCount = front + length & oldCapacity - 1;
		arrayMove(this, 0, this, oldCapacity, moveItemsCount);
	};
	module.exports = Queue$1;
}) });

//#endregion
//#region node_modules/bluebird/js/release/async.js
var require_async = /* @__PURE__ */ __commonJS({ "node_modules/bluebird/js/release/async.js": ((exports, module) => {
	var firstLineError;
	try {
		throw new Error();
	} catch (e) {
		firstLineError = e;
	}
	var schedule = require_schedule();
	var Queue = require_queue();
	var util$2 = require_util();
	function Async() {
		this._customScheduler = false;
		this._isTickUsed = false;
		this._lateQueue = new Queue(16);
		this._normalQueue = new Queue(16);
		this._haveDrainedQueues = false;
		this._trampolineEnabled = true;
		var self$1 = this;
		this.drainQueues = function() {
			self$1._drainQueues();
		};
		this._schedule = schedule;
	}
	Async.prototype.setScheduler = function(fn) {
		var prev = this._schedule;
		this._schedule = fn;
		this._customScheduler = true;
		return prev;
	};
	Async.prototype.hasCustomScheduler = function() {
		return this._customScheduler;
	};
	Async.prototype.enableTrampoline = function() {
		this._trampolineEnabled = true;
	};
	Async.prototype.disableTrampolineIfNecessary = function() {
		if (util$2.hasDevTools) this._trampolineEnabled = false;
	};
	Async.prototype.haveItemsQueued = function() {
		return this._isTickUsed || this._haveDrainedQueues;
	};
	Async.prototype.fatalError = function(e, isNode$1) {
		if (isNode$1) {
			process.stderr.write("Fatal " + (e instanceof Error ? e.stack : e) + "\n");
			process.exit(2);
		} else this.throwLater(e);
	};
	Async.prototype.throwLater = function(fn, arg) {
		if (arguments.length === 1) {
			arg = fn;
			fn = function() {
				throw arg;
			};
		}
		if (typeof setTimeout !== "undefined") setTimeout(function() {
			fn(arg);
		}, 0);
		else try {
			this._schedule(function() {
				fn(arg);
			});
		} catch (e) {
			throw new Error("No async scheduler available\n\n    See http://goo.gl/MqrFmX\n");
		}
	};
	function AsyncInvokeLater(fn, receiver, arg) {
		this._lateQueue.push(fn, receiver, arg);
		this._queueTick();
	}
	function AsyncInvoke(fn, receiver, arg) {
		this._normalQueue.push(fn, receiver, arg);
		this._queueTick();
	}
	function AsyncSettlePromises(promise) {
		this._normalQueue._pushOne(promise);
		this._queueTick();
	}
	if (!util$2.hasDevTools) {
		Async.prototype.invokeLater = AsyncInvokeLater;
		Async.prototype.invoke = AsyncInvoke;
		Async.prototype.settlePromises = AsyncSettlePromises;
	} else {
		Async.prototype.invokeLater = function(fn, receiver, arg) {
			if (this._trampolineEnabled) AsyncInvokeLater.call(this, fn, receiver, arg);
			else this._schedule(function() {
				setTimeout(function() {
					fn.call(receiver, arg);
				}, 100);
			});
		};
		Async.prototype.invoke = function(fn, receiver, arg) {
			if (this._trampolineEnabled) AsyncInvoke.call(this, fn, receiver, arg);
			else this._schedule(function() {
				fn.call(receiver, arg);
			});
		};
		Async.prototype.settlePromises = function(promise) {
			if (this._trampolineEnabled) AsyncSettlePromises.call(this, promise);
			else this._schedule(function() {
				promise._settlePromises();
			});
		};
	}
	Async.prototype._drainQueue = function(queue) {
		while (queue.length() > 0) {
			var fn = queue.shift();
			if (typeof fn !== "function") {
				fn._settlePromises();
				continue;
			}
			var receiver = queue.shift();
			var arg = queue.shift();
			fn.call(receiver, arg);
		}
	};
	Async.prototype._drainQueues = function() {
		this._drainQueue(this._normalQueue);
		this._reset();
		this._haveDrainedQueues = true;
		this._drainQueue(this._lateQueue);
	};
	Async.prototype._queueTick = function() {
		if (!this._isTickUsed) {
			this._isTickUsed = true;
			this._schedule(this.drainQueues);
		}
	};
	Async.prototype._reset = function() {
		this._isTickUsed = false;
	};
	module.exports = Async;
	module.exports.firstLineError = firstLineError;
}) });

//#endregion
//#region node_modules/bluebird/js/release/errors.js
var require_errors$1 = /* @__PURE__ */ __commonJS({ "node_modules/bluebird/js/release/errors.js": ((exports, module) => {
	var es5$1 = require_es5();
	var Objectfreeze = es5$1.freeze;
	var util$1 = require_util();
	var inherits = util$1.inherits;
	var notEnumerableProp = util$1.notEnumerableProp;
	function subError(nameProperty, defaultMessage) {
		function SubError(message) {
			if (!(this instanceof SubError)) return new SubError(message);
			notEnumerableProp(this, "message", typeof message === "string" ? message : defaultMessage);
			notEnumerableProp(this, "name", nameProperty);
			if (Error.captureStackTrace) Error.captureStackTrace(this, this.constructor);
			else Error.call(this);
		}
		inherits(SubError, Error);
		return SubError;
	}
	var _TypeError, _RangeError;
	var Warning = subError("Warning", "warning");
	var CancellationError = subError("CancellationError", "cancellation error");
	var TimeoutError = subError("TimeoutError", "timeout error");
	var AggregateError = subError("AggregateError", "aggregate error");
	try {
		_TypeError = TypeError;
		_RangeError = RangeError;
	} catch (e) {
		_TypeError = subError("TypeError", "type error");
		_RangeError = subError("RangeError", "range error");
	}
	var methods = "join pop push shift unshift slice filter forEach some every map indexOf lastIndexOf reduce reduceRight sort reverse".split(" ");
	for (var i$1 = 0; i$1 < methods.length; ++i$1) if (typeof Array.prototype[methods[i$1]] === "function") AggregateError.prototype[methods[i$1]] = Array.prototype[methods[i$1]];
	es5$1.defineProperty(AggregateError.prototype, "length", {
		value: 0,
		configurable: false,
		writable: true,
		enumerable: true
	});
	AggregateError.prototype["isOperational"] = true;
	var level = 0;
	AggregateError.prototype.toString = function() {
		var indent = Array(level * 4 + 1).join(" ");
		var ret$1 = "\n" + indent + "AggregateError of:\n";
		level++;
		indent = Array(level * 4 + 1).join(" ");
		for (var i$2 = 0; i$2 < this.length; ++i$2) {
			var str$1 = this[i$2] === this ? "[Circular AggregateError]" : this[i$2] + "";
			var lines = str$1.split("\n");
			for (var j = 0; j < lines.length; ++j) lines[j] = indent + lines[j];
			str$1 = lines.join("\n");
			ret$1 += str$1 + "\n";
		}
		level--;
		return ret$1;
	};
	function OperationalError$1(message) {
		if (!(this instanceof OperationalError$1)) return new OperationalError$1(message);
		notEnumerableProp(this, "name", "OperationalError");
		notEnumerableProp(this, "message", message);
		this.cause = message;
		this["isOperational"] = true;
		if (message instanceof Error) {
			notEnumerableProp(this, "message", message.message);
			notEnumerableProp(this, "stack", message.stack);
		} else if (Error.captureStackTrace) Error.captureStackTrace(this, this.constructor);
	}
	inherits(OperationalError$1, Error);
	var errorTypes = Error["__BluebirdErrorTypes__"];
	if (!errorTypes) {
		errorTypes = Objectfreeze({
			CancellationError,
			TimeoutError,
			OperationalError: OperationalError$1,
			RejectionError: OperationalError$1,
			AggregateError
		});
		es5$1.defineProperty(Error, "__BluebirdErrorTypes__", {
			value: errorTypes,
			writable: false,
			enumerable: false,
			configurable: false
		});
	}
	module.exports = {
		Error,
		TypeError: _TypeError,
		RangeError: _RangeError,
		CancellationError: errorTypes.CancellationError,
		OperationalError: errorTypes.OperationalError,
		TimeoutError: errorTypes.TimeoutError,
		AggregateError: errorTypes.AggregateError,
		Warning
	};
}) });

//#endregion
//#region node_modules/bluebird/js/release/thenables.js
var require_thenables = /* @__PURE__ */ __commonJS({ "node_modules/bluebird/js/release/thenables.js": ((exports, module) => {
	module.exports = function(Promise$1, INTERNAL) {
		var util$4 = require_util();
		var errorObj$1 = util$4.errorObj;
		var isObject$2 = util$4.isObject;
		function tryConvertToPromise(obj, context) {
			if (isObject$2(obj)) {
				if (obj instanceof Promise$1) return obj;
				var then = getThen(obj);
				if (then === errorObj$1) {
					if (context) context._pushContext();
					var ret$1 = Promise$1.reject(then.e);
					if (context) context._popContext();
					return ret$1;
				} else if (typeof then === "function") {
					if (isAnyBluebirdPromise(obj)) {
						var ret$1 = new Promise$1(INTERNAL);
						obj._then(ret$1._fulfill, ret$1._reject, void 0, ret$1, null);
						return ret$1;
					}
					return doThenable(obj, then, context);
				}
			}
			return obj;
		}
		function doGetThen(obj) {
			return obj.then;
		}
		function getThen(obj) {
			try {
				return doGetThen(obj);
			} catch (e) {
				errorObj$1.e = e;
				return errorObj$1;
			}
		}
		var hasProp = {}.hasOwnProperty;
		function isAnyBluebirdPromise(obj) {
			try {
				return hasProp.call(obj, "_promise0");
			} catch (e) {
				return false;
			}
		}
		function doThenable(x, then, context) {
			var promise = new Promise$1(INTERNAL);
			var ret$1 = promise;
			if (context) context._pushContext();
			promise._captureStackTrace();
			if (context) context._popContext();
			var synchronous = true;
			var result$1 = util$4.tryCatch(then).call(x, resolve, reject$1);
			synchronous = false;
			if (promise && result$1 === errorObj$1) {
				promise._rejectCallback(result$1.e, true, true);
				promise = null;
			}
			function resolve(value) {
				if (!promise) return;
				promise._resolveCallback(value);
				promise = null;
			}
			function reject$1(reason) {
				if (!promise) return;
				promise._rejectCallback(reason, synchronous, true);
				promise = null;
			}
			return ret$1;
		}
		return tryConvertToPromise;
	};
}) });

//#endregion
//#region node_modules/bluebird/js/release/promise_array.js
var require_promise_array = /* @__PURE__ */ __commonJS({ "node_modules/bluebird/js/release/promise_array.js": ((exports, module) => {
	module.exports = function(Promise$1, INTERNAL, tryConvertToPromise, apiRejection, Proxyable) {
		var util$4 = require_util();
		util$4.isArray;
		function toResolutionValue(val) {
			switch (val) {
				case -2: return [];
				case -3: return {};
			}
		}
		function PromiseArray(values$1) {
			var promise = this._promise = new Promise$1(INTERNAL);
			if (values$1 instanceof Promise$1) promise._propagateFrom(values$1, 3);
			promise._setOnCancel(this);
			this._values = values$1;
			this._length = 0;
			this._totalResolved = 0;
			this._init(void 0, -2);
		}
		util$4.inherits(PromiseArray, Proxyable);
		PromiseArray.prototype.length = function() {
			return this._length;
		};
		PromiseArray.prototype.promise = function() {
			return this._promise;
		};
		PromiseArray.prototype._init = function init(_$23, resolveValueIfEmpty) {
			var values$1 = tryConvertToPromise(this._values, this._promise);
			if (values$1 instanceof Promise$1) {
				values$1 = values$1._target();
				var bitField = values$1._bitField;
				this._values = values$1;
				if ((bitField & 50397184) === 0) {
					this._promise._setAsyncGuaranteed();
					return values$1._then(init, this._reject, void 0, this, resolveValueIfEmpty);
				} else if ((bitField & 33554432) !== 0) values$1 = values$1._value();
				else if ((bitField & 16777216) !== 0) return this._reject(values$1._reason());
				else return this._cancel();
			}
			values$1 = util$4.asArray(values$1);
			if (values$1 === null) {
				var err = apiRejection("expecting an array or an iterable object but got " + util$4.classString(values$1)).reason();
				this._promise._rejectCallback(err, false);
				return;
			}
			if (values$1.length === 0) {
				if (resolveValueIfEmpty === -5) this._resolveEmptyArray();
				else this._resolve(toResolutionValue(resolveValueIfEmpty));
				return;
			}
			this._iterate(values$1);
		};
		PromiseArray.prototype._iterate = function(values$1) {
			var len$1 = this.getActualLength(values$1.length);
			this._length = len$1;
			this._values = this.shouldCopyValues() ? new Array(len$1) : this._values;
			var result$1 = this._promise;
			var isResolved = false;
			var bitField = null;
			for (var i$2 = 0; i$2 < len$1; ++i$2) {
				var maybePromise = tryConvertToPromise(values$1[i$2], result$1);
				if (maybePromise instanceof Promise$1) {
					maybePromise = maybePromise._target();
					bitField = maybePromise._bitField;
				} else bitField = null;
				if (isResolved) {
					if (bitField !== null) maybePromise.suppressUnhandledRejections();
				} else if (bitField !== null) if ((bitField & 50397184) === 0) {
					maybePromise._proxy(this, i$2);
					this._values[i$2] = maybePromise;
				} else if ((bitField & 33554432) !== 0) isResolved = this._promiseFulfilled(maybePromise._value(), i$2);
				else if ((bitField & 16777216) !== 0) isResolved = this._promiseRejected(maybePromise._reason(), i$2);
				else isResolved = this._promiseCancelled(i$2);
				else isResolved = this._promiseFulfilled(maybePromise, i$2);
			}
			if (!isResolved) result$1._setAsyncGuaranteed();
		};
		PromiseArray.prototype._isResolved = function() {
			return this._values === null;
		};
		PromiseArray.prototype._resolve = function(value) {
			this._values = null;
			this._promise._fulfill(value);
		};
		PromiseArray.prototype._cancel = function() {
			if (this._isResolved() || !this._promise._isCancellable()) return;
			this._values = null;
			this._promise._cancel();
		};
		PromiseArray.prototype._reject = function(reason) {
			this._values = null;
			this._promise._rejectCallback(reason, false);
		};
		PromiseArray.prototype._promiseFulfilled = function(value, index) {
			this._values[index] = value;
			if (++this._totalResolved >= this._length) {
				this._resolve(this._values);
				return true;
			}
			return false;
		};
		PromiseArray.prototype._promiseCancelled = function() {
			this._cancel();
			return true;
		};
		PromiseArray.prototype._promiseRejected = function(reason) {
			this._totalResolved++;
			this._reject(reason);
			return true;
		};
		PromiseArray.prototype._resultCancelled = function() {
			if (this._isResolved()) return;
			var values$1 = this._values;
			this._cancel();
			if (values$1 instanceof Promise$1) values$1.cancel();
			else for (var i$2 = 0; i$2 < values$1.length; ++i$2) if (values$1[i$2] instanceof Promise$1) values$1[i$2].cancel();
		};
		PromiseArray.prototype.shouldCopyValues = function() {
			return true;
		};
		PromiseArray.prototype.getActualLength = function(len$1) {
			return len$1;
		};
		return PromiseArray;
	};
}) });

//#endregion
//#region node_modules/bluebird/js/release/context.js
var require_context = /* @__PURE__ */ __commonJS({ "node_modules/bluebird/js/release/context.js": ((exports, module) => {
	module.exports = function(Promise$1) {
		var longStackTraces = false;
		var contextStack = [];
		Promise$1.prototype._promiseCreated = function() {};
		Promise$1.prototype._pushContext = function() {};
		Promise$1.prototype._popContext = function() {
			return null;
		};
		Promise$1._peekContext = Promise$1.prototype._peekContext = function() {};
		function Context() {
			this._trace = new Context.CapturedTrace(peekContext());
		}
		Context.prototype._pushContext = function() {
			if (this._trace !== void 0) {
				this._trace._promiseCreated = null;
				contextStack.push(this._trace);
			}
		};
		Context.prototype._popContext = function() {
			if (this._trace !== void 0) {
				var trace = contextStack.pop();
				var ret$1 = trace._promiseCreated;
				trace._promiseCreated = null;
				return ret$1;
			}
			return null;
		};
		function createContext() {
			if (longStackTraces) return new Context();
		}
		function peekContext() {
			var lastIndex = contextStack.length - 1;
			if (lastIndex >= 0) return contextStack[lastIndex];
		}
		Context.CapturedTrace = null;
		Context.create = createContext;
		Context.deactivateLongStackTraces = function() {};
		Context.activateLongStackTraces = function() {
			var Promise_pushContext = Promise$1.prototype._pushContext;
			var Promise_popContext = Promise$1.prototype._popContext;
			var Promise_PeekContext = Promise$1._peekContext;
			var Promise_peekContext = Promise$1.prototype._peekContext;
			var Promise_promiseCreated = Promise$1.prototype._promiseCreated;
			Context.deactivateLongStackTraces = function() {
				Promise$1.prototype._pushContext = Promise_pushContext;
				Promise$1.prototype._popContext = Promise_popContext;
				Promise$1._peekContext = Promise_PeekContext;
				Promise$1.prototype._peekContext = Promise_peekContext;
				Promise$1.prototype._promiseCreated = Promise_promiseCreated;
				longStackTraces = false;
			};
			longStackTraces = true;
			Promise$1.prototype._pushContext = Context.prototype._pushContext;
			Promise$1.prototype._popContext = Context.prototype._popContext;
			Promise$1._peekContext = Promise$1.prototype._peekContext = peekContext;
			Promise$1.prototype._promiseCreated = function() {
				var ctx = this._peekContext();
				if (ctx && ctx._promiseCreated == null) ctx._promiseCreated = this;
			};
		};
		return Context;
	};
}) });

//#endregion
//#region node_modules/bluebird/js/release/debuggability.js
var require_debuggability = /* @__PURE__ */ __commonJS({ "node_modules/bluebird/js/release/debuggability.js": ((exports, module) => {
	module.exports = function(Promise$1, Context) {
		var getDomain = Promise$1._getDomain;
		var async = Promise$1._async;
		var Warning$1 = require_errors$1().Warning;
		var util$4 = require_util();
		var canAttachTrace$1 = util$4.canAttachTrace;
		var unhandledRejectionHandled;
		var possiblyUnhandledRejection;
		var bluebirdFramePattern = /[\\\/]bluebird[\\\/]js[\\\/](release|debug|instrumented)/;
		var nodeFramePattern = /\((?:timers\.js):\d+:\d+\)/;
		var parseLinePattern = /[\/<\(](.+?):(\d+):(\d+)\)?\s*$/;
		var stackFramePattern = null;
		var formatStack = null;
		var indentStackFrames = false;
		var printWarning;
		var debugging = !!(util$4.env("BLUEBIRD_DEBUG") != 0 && (util$4.env("BLUEBIRD_DEBUG") || util$4.env("NODE_ENV") === "development"));
		var warnings = !!(util$4.env("BLUEBIRD_WARNINGS") != 0 && (debugging || util$4.env("BLUEBIRD_WARNINGS")));
		var longStackTraces = !!(util$4.env("BLUEBIRD_LONG_STACK_TRACES") != 0 && (debugging || util$4.env("BLUEBIRD_LONG_STACK_TRACES")));
		var wForgottenReturn = util$4.env("BLUEBIRD_W_FORGOTTEN_RETURN") != 0 && (warnings || !!util$4.env("BLUEBIRD_W_FORGOTTEN_RETURN"));
		Promise$1.prototype.suppressUnhandledRejections = function() {
			var target = this._target();
			target._bitField = target._bitField & -1048577 | 524288;
		};
		Promise$1.prototype._ensurePossibleRejectionHandled = function() {
			if ((this._bitField & 524288) !== 0) return;
			this._setRejectionIsUnhandled();
			async.invokeLater(this._notifyUnhandledRejection, this, void 0);
		};
		Promise$1.prototype._notifyUnhandledRejectionIsHandled = function() {
			fireRejectionEvent("rejectionHandled", unhandledRejectionHandled, void 0, this);
		};
		Promise$1.prototype._setReturnedNonUndefined = function() {
			this._bitField = this._bitField | 268435456;
		};
		Promise$1.prototype._returnedNonUndefined = function() {
			return (this._bitField & 268435456) !== 0;
		};
		Promise$1.prototype._notifyUnhandledRejection = function() {
			if (this._isRejectionUnhandled()) {
				var reason = this._settledValue();
				this._setUnhandledRejectionIsNotified();
				fireRejectionEvent("unhandledRejection", possiblyUnhandledRejection, reason, this);
			}
		};
		Promise$1.prototype._setUnhandledRejectionIsNotified = function() {
			this._bitField = this._bitField | 262144;
		};
		Promise$1.prototype._unsetUnhandledRejectionIsNotified = function() {
			this._bitField = this._bitField & -262145;
		};
		Promise$1.prototype._isUnhandledRejectionNotified = function() {
			return (this._bitField & 262144) > 0;
		};
		Promise$1.prototype._setRejectionIsUnhandled = function() {
			this._bitField = this._bitField | 1048576;
		};
		Promise$1.prototype._unsetRejectionIsUnhandled = function() {
			this._bitField = this._bitField & -1048577;
			if (this._isUnhandledRejectionNotified()) {
				this._unsetUnhandledRejectionIsNotified();
				this._notifyUnhandledRejectionIsHandled();
			}
		};
		Promise$1.prototype._isRejectionUnhandled = function() {
			return (this._bitField & 1048576) > 0;
		};
		Promise$1.prototype._warn = function(message, shouldUseOwnTrace, promise) {
			return warn(message, shouldUseOwnTrace, promise || this);
		};
		Promise$1.onPossiblyUnhandledRejection = function(fn) {
			var domain = getDomain();
			possiblyUnhandledRejection = typeof fn === "function" ? domain === null ? fn : util$4.domainBind(domain, fn) : void 0;
		};
		Promise$1.onUnhandledRejectionHandled = function(fn) {
			var domain = getDomain();
			unhandledRejectionHandled = typeof fn === "function" ? domain === null ? fn : util$4.domainBind(domain, fn) : void 0;
		};
		var disableLongStackTraces = function() {};
		Promise$1.longStackTraces = function() {
			if (async.haveItemsQueued() && !config.longStackTraces) throw new Error("cannot enable long stack traces after promises have been created\n\n    See http://goo.gl/MqrFmX\n");
			if (!config.longStackTraces && longStackTracesIsSupported()) {
				var Promise_captureStackTrace = Promise$1.prototype._captureStackTrace;
				var Promise_attachExtraTrace = Promise$1.prototype._attachExtraTrace;
				config.longStackTraces = true;
				disableLongStackTraces = function() {
					if (async.haveItemsQueued() && !config.longStackTraces) throw new Error("cannot enable long stack traces after promises have been created\n\n    See http://goo.gl/MqrFmX\n");
					Promise$1.prototype._captureStackTrace = Promise_captureStackTrace;
					Promise$1.prototype._attachExtraTrace = Promise_attachExtraTrace;
					Context.deactivateLongStackTraces();
					async.enableTrampoline();
					config.longStackTraces = false;
				};
				Promise$1.prototype._captureStackTrace = longStackTracesCaptureStackTrace;
				Promise$1.prototype._attachExtraTrace = longStackTracesAttachExtraTrace;
				Context.activateLongStackTraces();
				async.disableTrampolineIfNecessary();
			}
		};
		Promise$1.hasLongStackTraces = function() {
			return config.longStackTraces && longStackTracesIsSupported();
		};
		var fireDomEvent = (function() {
			try {
				if (typeof CustomEvent === "function") {
					var event = new CustomEvent("CustomEvent");
					util$4.global.dispatchEvent(event);
					return function(name, event$1) {
						var domEvent = new CustomEvent(name.toLowerCase(), {
							detail: event$1,
							cancelable: true
						});
						return !util$4.global.dispatchEvent(domEvent);
					};
				} else if (typeof Event === "function") {
					var event = new Event("CustomEvent");
					util$4.global.dispatchEvent(event);
					return function(name, event$1) {
						var domEvent = new Event(name.toLowerCase(), { cancelable: true });
						domEvent.detail = event$1;
						return !util$4.global.dispatchEvent(domEvent);
					};
				} else {
					var event = document.createEvent("CustomEvent");
					event.initCustomEvent("testingtheevent", false, true, {});
					util$4.global.dispatchEvent(event);
					return function(name, event$1) {
						var domEvent = document.createEvent("CustomEvent");
						domEvent.initCustomEvent(name.toLowerCase(), false, true, event$1);
						return !util$4.global.dispatchEvent(domEvent);
					};
				}
			} catch (e) {}
			return function() {
				return false;
			};
		})();
		var fireGlobalEvent = (function() {
			if (util$4.isNode) return function() {
				return process.emit.apply(process, arguments);
			};
			else {
				if (!util$4.global) return function() {
					return false;
				};
				return function(name) {
					var methodName = "on" + name.toLowerCase();
					var method = util$4.global[methodName];
					if (!method) return false;
					method.apply(util$4.global, [].slice.call(arguments, 1));
					return true;
				};
			}
		})();
		function generatePromiseLifecycleEventObject(name, promise) {
			return { promise };
		}
		var eventToObjectGenerator = {
			promiseCreated: generatePromiseLifecycleEventObject,
			promiseFulfilled: generatePromiseLifecycleEventObject,
			promiseRejected: generatePromiseLifecycleEventObject,
			promiseResolved: generatePromiseLifecycleEventObject,
			promiseCancelled: generatePromiseLifecycleEventObject,
			promiseChained: function(name, promise, child) {
				return {
					promise,
					child
				};
			},
			warning: function(name, warning$2) {
				return { warning: warning$2 };
			},
			unhandledRejection: function(name, reason, promise) {
				return {
					reason,
					promise
				};
			},
			rejectionHandled: generatePromiseLifecycleEventObject
		};
		var activeFireEvent = function(name) {
			var globalEventFired = false;
			try {
				globalEventFired = fireGlobalEvent.apply(null, arguments);
			} catch (e) {
				async.throwLater(e);
				globalEventFired = true;
			}
			var domEventFired = false;
			try {
				domEventFired = fireDomEvent(name, eventToObjectGenerator[name].apply(null, arguments));
			} catch (e) {
				async.throwLater(e);
				domEventFired = true;
			}
			return domEventFired || globalEventFired;
		};
		Promise$1.config = function(opts) {
			opts = Object(opts);
			if ("longStackTraces" in opts) {
				if (opts.longStackTraces) Promise$1.longStackTraces();
				else if (!opts.longStackTraces && Promise$1.hasLongStackTraces()) disableLongStackTraces();
			}
			if ("warnings" in opts) {
				var warningsOption = opts.warnings;
				config.warnings = !!warningsOption;
				wForgottenReturn = config.warnings;
				if (util$4.isObject(warningsOption)) {
					if ("wForgottenReturn" in warningsOption) wForgottenReturn = !!warningsOption.wForgottenReturn;
				}
			}
			if ("cancellation" in opts && opts.cancellation && !config.cancellation) {
				if (async.haveItemsQueued()) throw new Error("cannot enable cancellation after promises are in use");
				Promise$1.prototype._clearCancellationData = cancellationClearCancellationData;
				Promise$1.prototype._propagateFrom = cancellationPropagateFrom;
				Promise$1.prototype._onCancel = cancellationOnCancel;
				Promise$1.prototype._setOnCancel = cancellationSetOnCancel;
				Promise$1.prototype._attachCancellationCallback = cancellationAttachCancellationCallback;
				Promise$1.prototype._execute = cancellationExecute;
				propagateFromFunction = cancellationPropagateFrom;
				config.cancellation = true;
			}
			if ("monitoring" in opts) {
				if (opts.monitoring && !config.monitoring) {
					config.monitoring = true;
					Promise$1.prototype._fireEvent = activeFireEvent;
				} else if (!opts.monitoring && config.monitoring) {
					config.monitoring = false;
					Promise$1.prototype._fireEvent = defaultFireEvent;
				}
			}
			return Promise$1;
		};
		function defaultFireEvent() {
			return false;
		}
		Promise$1.prototype._fireEvent = defaultFireEvent;
		Promise$1.prototype._execute = function(executor, resolve, reject$1) {
			try {
				executor(resolve, reject$1);
			} catch (e) {
				return e;
			}
		};
		Promise$1.prototype._onCancel = function() {};
		Promise$1.prototype._setOnCancel = function(handler) {};
		Promise$1.prototype._attachCancellationCallback = function(onCancel) {};
		Promise$1.prototype._captureStackTrace = function() {};
		Promise$1.prototype._attachExtraTrace = function() {};
		Promise$1.prototype._clearCancellationData = function() {};
		Promise$1.prototype._propagateFrom = function(parent, flags) {};
		function cancellationExecute(executor, resolve, reject$1) {
			var promise = this;
			try {
				executor(resolve, reject$1, function(onCancel) {
					if (typeof onCancel !== "function") throw new TypeError("onCancel must be a function, got: " + util$4.toString(onCancel));
					promise._attachCancellationCallback(onCancel);
				});
			} catch (e) {
				return e;
			}
		}
		function cancellationAttachCancellationCallback(onCancel) {
			if (!this._isCancellable()) return this;
			var previousOnCancel = this._onCancel();
			if (previousOnCancel !== void 0) if (util$4.isArray(previousOnCancel)) previousOnCancel.push(onCancel);
			else this._setOnCancel([previousOnCancel, onCancel]);
			else this._setOnCancel(onCancel);
		}
		function cancellationOnCancel() {
			return this._onCancelField;
		}
		function cancellationSetOnCancel(onCancel) {
			this._onCancelField = onCancel;
		}
		function cancellationClearCancellationData() {
			this._cancellationParent = void 0;
			this._onCancelField = void 0;
		}
		function cancellationPropagateFrom(parent, flags) {
			if ((flags & 1) !== 0) {
				this._cancellationParent = parent;
				var branchesRemainingToCancel = parent._branchesRemainingToCancel;
				if (branchesRemainingToCancel === void 0) branchesRemainingToCancel = 0;
				parent._branchesRemainingToCancel = branchesRemainingToCancel + 1;
			}
			if ((flags & 2) !== 0 && parent._isBound()) this._setBoundTo(parent._boundTo);
		}
		function bindingPropagateFrom(parent, flags) {
			if ((flags & 2) !== 0 && parent._isBound()) this._setBoundTo(parent._boundTo);
		}
		var propagateFromFunction = bindingPropagateFrom;
		function boundValueFunction() {
			var ret$1 = this._boundTo;
			if (ret$1 !== void 0) {
				if (ret$1 instanceof Promise$1) if (ret$1.isFulfilled()) return ret$1.value();
				else return;
			}
			return ret$1;
		}
		function longStackTracesCaptureStackTrace() {
			this._trace = new CapturedTrace(this._peekContext());
		}
		function longStackTracesAttachExtraTrace(error$1, ignoreSelf) {
			if (canAttachTrace$1(error$1)) {
				var trace = this._trace;
				if (trace !== void 0) {
					if (ignoreSelf) trace = trace._parent;
				}
				if (trace !== void 0) trace.attachExtraTrace(error$1);
				else if (!error$1.__stackCleaned__) {
					var parsed = parseStackAndMessage(error$1);
					util$4.notEnumerableProp(error$1, "stack", parsed.message + "\n" + parsed.stack.join("\n"));
					util$4.notEnumerableProp(error$1, "__stackCleaned__", true);
				}
			}
		}
		function checkForgottenReturns(returnValue, promiseCreated, name, promise, parent) {
			if (returnValue === void 0 && promiseCreated !== null && wForgottenReturn) {
				if (parent !== void 0 && parent._returnedNonUndefined()) return;
				if ((promise._bitField & 65535) === 0) return;
				if (name) name = name + " ";
				var handlerLine = "";
				var creatorLine = "";
				if (promiseCreated._trace) {
					var traceLines = promiseCreated._trace.stack.split("\n");
					var stack = cleanStack(traceLines);
					for (var i$2 = stack.length - 1; i$2 >= 0; --i$2) {
						var line = stack[i$2];
						if (!nodeFramePattern.test(line)) {
							var lineMatches = line.match(parseLinePattern);
							if (lineMatches) handlerLine = "at " + lineMatches[1] + ":" + lineMatches[2] + ":" + lineMatches[3] + " ";
							break;
						}
					}
					if (stack.length > 0) {
						var firstUserLine = stack[0];
						for (var i$2 = 0; i$2 < traceLines.length; ++i$2) if (traceLines[i$2] === firstUserLine) {
							if (i$2 > 0) creatorLine = "\n" + traceLines[i$2 - 1];
							break;
						}
					}
				}
				var msg = "a promise was created in a " + name + "handler " + handlerLine + "but was not returned from it, see http://goo.gl/rRqMUw" + creatorLine;
				promise._warn(msg, true, promiseCreated);
			}
		}
		function deprecated(name, replacement) {
			var message = name + " is deprecated and will be removed in a future version.";
			if (replacement) message += " Use " + replacement + " instead.";
			return warn(message);
		}
		function warn(message, shouldUseOwnTrace, promise) {
			if (!config.warnings) return;
			var warning$2 = new Warning$1(message);
			var ctx;
			if (shouldUseOwnTrace) promise._attachExtraTrace(warning$2);
			else if (config.longStackTraces && (ctx = Promise$1._peekContext())) ctx.attachExtraTrace(warning$2);
			else {
				var parsed = parseStackAndMessage(warning$2);
				warning$2.stack = parsed.message + "\n" + parsed.stack.join("\n");
			}
			if (!activeFireEvent("warning", warning$2)) formatAndLogError(warning$2, "", true);
		}
		function reconstructStack(message, stacks) {
			for (var i$2 = 0; i$2 < stacks.length - 1; ++i$2) {
				stacks[i$2].push("From previous event:");
				stacks[i$2] = stacks[i$2].join("\n");
			}
			if (i$2 < stacks.length) stacks[i$2] = stacks[i$2].join("\n");
			return message + "\n" + stacks.join("\n");
		}
		function removeDuplicateOrEmptyJumps(stacks) {
			for (var i$2 = 0; i$2 < stacks.length; ++i$2) if (stacks[i$2].length === 0 || i$2 + 1 < stacks.length && stacks[i$2][0] === stacks[i$2 + 1][0]) {
				stacks.splice(i$2, 1);
				i$2--;
			}
		}
		function removeCommonRoots(stacks) {
			var current = stacks[0];
			for (var i$2 = 1; i$2 < stacks.length; ++i$2) {
				var prev = stacks[i$2];
				var currentLastIndex = current.length - 1;
				var currentLastLine = current[currentLastIndex];
				var commonRootMeetPoint = -1;
				for (var j = prev.length - 1; j >= 0; --j) if (prev[j] === currentLastLine) {
					commonRootMeetPoint = j;
					break;
				}
				for (var j = commonRootMeetPoint; j >= 0; --j) {
					var line = prev[j];
					if (current[currentLastIndex] === line) {
						current.pop();
						currentLastIndex--;
					} else break;
				}
				current = prev;
			}
		}
		function cleanStack(stack) {
			var ret$1 = [];
			for (var i$2 = 0; i$2 < stack.length; ++i$2) {
				var line = stack[i$2];
				var isTraceLine = "    (No stack trace)" === line || stackFramePattern.test(line);
				var isInternalFrame = isTraceLine && shouldIgnore(line);
				if (isTraceLine && !isInternalFrame) {
					if (indentStackFrames && line.charAt(0) !== " ") line = "    " + line;
					ret$1.push(line);
				}
			}
			return ret$1;
		}
		function stackFramesAsArray(error$1) {
			var stack = error$1.stack.replace(/\s+$/g, "").split("\n");
			for (var i$2 = 0; i$2 < stack.length; ++i$2) {
				var line = stack[i$2];
				if ("    (No stack trace)" === line || stackFramePattern.test(line)) break;
			}
			if (i$2 > 0 && error$1.name != "SyntaxError") stack = stack.slice(i$2);
			return stack;
		}
		function parseStackAndMessage(error$1) {
			var stack = error$1.stack;
			var message = error$1.toString();
			stack = typeof stack === "string" && stack.length > 0 ? stackFramesAsArray(error$1) : ["    (No stack trace)"];
			return {
				message,
				stack: error$1.name == "SyntaxError" ? stack : cleanStack(stack)
			};
		}
		function formatAndLogError(error$1, title, isSoft) {
			if (typeof console !== "undefined") {
				var message;
				if (util$4.isObject(error$1)) {
					var stack = error$1.stack;
					message = title + formatStack(stack, error$1);
				} else message = title + String(error$1);
				if (typeof printWarning === "function") printWarning(message, isSoft);
				else if (typeof console.log === "function" || typeof console.log === "object") console.log(message);
			}
		}
		function fireRejectionEvent(name, localHandler, reason, promise) {
			var localEventFired = false;
			try {
				if (typeof localHandler === "function") {
					localEventFired = true;
					if (name === "rejectionHandled") localHandler(promise);
					else localHandler(reason, promise);
				}
			} catch (e) {
				async.throwLater(e);
			}
			if (name === "unhandledRejection") {
				if (!activeFireEvent(name, reason, promise) && !localEventFired) formatAndLogError(reason, "Unhandled rejection ");
			} else activeFireEvent(name, promise);
		}
		function formatNonError(obj) {
			var str$1;
			if (typeof obj === "function") str$1 = "[function " + (obj.name || "anonymous") + "]";
			else {
				str$1 = obj && typeof obj.toString === "function" ? obj.toString() : util$4.toString(obj);
				if (/\[object [a-zA-Z0-9$_]+\]/.test(str$1)) try {
					str$1 = JSON.stringify(obj);
				} catch (e) {}
				if (str$1.length === 0) str$1 = "(empty array)";
			}
			return "(<" + snip(str$1) + ">, no stack trace)";
		}
		function snip(str$1) {
			var maxChars = 41;
			if (str$1.length < maxChars) return str$1;
			return str$1.substr(0, maxChars - 3) + "...";
		}
		function longStackTracesIsSupported() {
			return typeof captureStackTrace === "function";
		}
		var shouldIgnore = function() {
			return false;
		};
		var parseLineInfoRegex = /[\/<\(]([^:\/]+):(\d+):(?:\d+)\)?\s*$/;
		function parseLineInfo(line) {
			var matches = line.match(parseLineInfoRegex);
			if (matches) return {
				fileName: matches[1],
				line: parseInt(matches[2], 10)
			};
		}
		function setBounds(firstLineError$1, lastLineError) {
			if (!longStackTracesIsSupported()) return;
			var firstStackLines = firstLineError$1.stack.split("\n");
			var lastStackLines = lastLineError.stack.split("\n");
			var firstIndex = -1;
			var lastIndex = -1;
			var firstFileName;
			var lastFileName;
			for (var i$2 = 0; i$2 < firstStackLines.length; ++i$2) {
				var result$1 = parseLineInfo(firstStackLines[i$2]);
				if (result$1) {
					firstFileName = result$1.fileName;
					firstIndex = result$1.line;
					break;
				}
			}
			for (var i$2 = 0; i$2 < lastStackLines.length; ++i$2) {
				var result$1 = parseLineInfo(lastStackLines[i$2]);
				if (result$1) {
					lastFileName = result$1.fileName;
					lastIndex = result$1.line;
					break;
				}
			}
			if (firstIndex < 0 || lastIndex < 0 || !firstFileName || !lastFileName || firstFileName !== lastFileName || firstIndex >= lastIndex) return;
			shouldIgnore = function(line) {
				if (bluebirdFramePattern.test(line)) return true;
				var info = parseLineInfo(line);
				if (info) {
					if (info.fileName === firstFileName && firstIndex <= info.line && info.line <= lastIndex) return true;
				}
				return false;
			};
		}
		function CapturedTrace(parent) {
			this._parent = parent;
			this._promisesCreated = 0;
			var length = this._length = 1 + (parent === void 0 ? 0 : parent._length);
			captureStackTrace(this, CapturedTrace);
			if (length > 32) this.uncycle();
		}
		util$4.inherits(CapturedTrace, Error);
		Context.CapturedTrace = CapturedTrace;
		CapturedTrace.prototype.uncycle = function() {
			var length = this._length;
			if (length < 2) return;
			var nodes$2 = [];
			var stackToIndex = {};
			for (var i$2 = 0, node = this; node !== void 0; ++i$2) {
				nodes$2.push(node);
				node = node._parent;
			}
			length = this._length = i$2;
			for (var i$2 = length - 1; i$2 >= 0; --i$2) {
				var stack = nodes$2[i$2].stack;
				if (stackToIndex[stack] === void 0) stackToIndex[stack] = i$2;
			}
			for (var i$2 = 0; i$2 < length; ++i$2) {
				var currentStack = nodes$2[i$2].stack;
				var index = stackToIndex[currentStack];
				if (index !== void 0 && index !== i$2) {
					if (index > 0) {
						nodes$2[index - 1]._parent = void 0;
						nodes$2[index - 1]._length = 1;
					}
					nodes$2[i$2]._parent = void 0;
					nodes$2[i$2]._length = 1;
					var cycleEdgeNode = i$2 > 0 ? nodes$2[i$2 - 1] : this;
					if (index < length - 1) {
						cycleEdgeNode._parent = nodes$2[index + 1];
						cycleEdgeNode._parent.uncycle();
						cycleEdgeNode._length = cycleEdgeNode._parent._length + 1;
					} else {
						cycleEdgeNode._parent = void 0;
						cycleEdgeNode._length = 1;
					}
					var currentChildLength = cycleEdgeNode._length + 1;
					for (var j = i$2 - 2; j >= 0; --j) {
						nodes$2[j]._length = currentChildLength;
						currentChildLength++;
					}
					return;
				}
			}
		};
		CapturedTrace.prototype.attachExtraTrace = function(error$1) {
			if (error$1.__stackCleaned__) return;
			this.uncycle();
			var parsed = parseStackAndMessage(error$1);
			var message = parsed.message;
			var stacks = [parsed.stack];
			var trace = this;
			while (trace !== void 0) {
				stacks.push(cleanStack(trace.stack.split("\n")));
				trace = trace._parent;
			}
			removeCommonRoots(stacks);
			removeDuplicateOrEmptyJumps(stacks);
			util$4.notEnumerableProp(error$1, "stack", reconstructStack(message, stacks));
			util$4.notEnumerableProp(error$1, "__stackCleaned__", true);
		};
		var captureStackTrace = (function stackDetection() {
			var v8stackFramePattern = /^\s*at\s*/;
			var v8stackFormatter = function(stack, error$1) {
				if (typeof stack === "string") return stack;
				if (error$1.name !== void 0 && error$1.message !== void 0) return error$1.toString();
				return formatNonError(error$1);
			};
			if (typeof Error.stackTraceLimit === "number" && typeof Error.captureStackTrace === "function") {
				Error.stackTraceLimit += 6;
				stackFramePattern = v8stackFramePattern;
				formatStack = v8stackFormatter;
				var captureStackTrace$1 = Error.captureStackTrace;
				shouldIgnore = function(line) {
					return bluebirdFramePattern.test(line);
				};
				return function(receiver, ignoreUntil) {
					Error.stackTraceLimit += 6;
					captureStackTrace$1(receiver, ignoreUntil);
					Error.stackTraceLimit -= 6;
				};
			}
			var err = /* @__PURE__ */ new Error();
			if (typeof err.stack === "string" && err.stack.split("\n")[0].indexOf("stackDetection@") >= 0) {
				stackFramePattern = /@/;
				formatStack = v8stackFormatter;
				indentStackFrames = true;
				return function captureStackTrace$2(o) {
					o.stack = (/* @__PURE__ */ new Error()).stack;
				};
			}
			var hasStackAfterThrow;
			try {
				throw new Error();
			} catch (e) {
				hasStackAfterThrow = "stack" in e;
			}
			if (!("stack" in err) && hasStackAfterThrow && typeof Error.stackTraceLimit === "number") {
				stackFramePattern = v8stackFramePattern;
				formatStack = v8stackFormatter;
				return function captureStackTrace$2(o) {
					Error.stackTraceLimit += 6;
					try {
						throw new Error();
					} catch (e) {
						o.stack = e.stack;
					}
					Error.stackTraceLimit -= 6;
				};
			}
			formatStack = function(stack, error$1) {
				if (typeof stack === "string") return stack;
				if ((typeof error$1 === "object" || typeof error$1 === "function") && error$1.name !== void 0 && error$1.message !== void 0) return error$1.toString();
				return formatNonError(error$1);
			};
			return null;
		})([]);
		if (typeof console !== "undefined" && typeof console.warn !== "undefined") {
			printWarning = function(message) {
				console.warn(message);
			};
			if (util$4.isNode && process.stderr.isTTY) printWarning = function(message, isSoft) {
				var color = isSoft ? "\x1B[33m" : "\x1B[31m";
				console.warn(color + message + "\x1B[0m\n");
			};
			else if (!util$4.isNode && typeof (/* @__PURE__ */ new Error()).stack === "string") printWarning = function(message, isSoft) {
				console.warn("%c" + message, isSoft ? "color: darkorange" : "color: red");
			};
		}
		var config = {
			warnings,
			longStackTraces: false,
			cancellation: false,
			monitoring: false
		};
		if (longStackTraces) Promise$1.longStackTraces();
		return {
			longStackTraces: function() {
				return config.longStackTraces;
			},
			warnings: function() {
				return config.warnings;
			},
			cancellation: function() {
				return config.cancellation;
			},
			monitoring: function() {
				return config.monitoring;
			},
			propagateFromFunction: function() {
				return propagateFromFunction;
			},
			boundValueFunction: function() {
				return boundValueFunction;
			},
			checkForgottenReturns,
			setBounds,
			warn,
			deprecated,
			CapturedTrace,
			fireDomEvent,
			fireGlobalEvent
		};
	};
}) });

//#endregion
//#region node_modules/bluebird/js/release/finally.js
var require_finally = /* @__PURE__ */ __commonJS({ "node_modules/bluebird/js/release/finally.js": ((exports, module) => {
	module.exports = function(Promise$1, tryConvertToPromise) {
		var util$4 = require_util();
		var CancellationError$1 = Promise$1.CancellationError;
		var errorObj$1 = util$4.errorObj;
		function PassThroughHandlerContext(promise, type, handler) {
			this.promise = promise;
			this.type = type;
			this.handler = handler;
			this.called = false;
			this.cancelPromise = null;
		}
		PassThroughHandlerContext.prototype.isFinallyHandler = function() {
			return this.type === 0;
		};
		function FinallyHandlerCancelReaction(finallyHandler$1) {
			this.finallyHandler = finallyHandler$1;
		}
		FinallyHandlerCancelReaction.prototype._resultCancelled = function() {
			checkCancel(this.finallyHandler);
		};
		function checkCancel(ctx, reason) {
			if (ctx.cancelPromise != null) {
				if (arguments.length > 1) ctx.cancelPromise._reject(reason);
				else ctx.cancelPromise._cancel();
				ctx.cancelPromise = null;
				return true;
			}
			return false;
		}
		function succeed() {
			return finallyHandler.call(this, this.promise._target()._settledValue());
		}
		function fail(reason) {
			if (checkCancel(this, reason)) return;
			errorObj$1.e = reason;
			return errorObj$1;
		}
		function finallyHandler(reasonOrValue) {
			var promise = this.promise;
			var handler = this.handler;
			if (!this.called) {
				this.called = true;
				var ret$1 = this.isFinallyHandler() ? handler.call(promise._boundValue()) : handler.call(promise._boundValue(), reasonOrValue);
				if (ret$1 !== void 0) {
					promise._setReturnedNonUndefined();
					var maybePromise = tryConvertToPromise(ret$1, promise);
					if (maybePromise instanceof Promise$1) {
						if (this.cancelPromise != null) {
							if (maybePromise._isCancelled()) {
								var reason = new CancellationError$1("late cancellation observer");
								promise._attachExtraTrace(reason);
								errorObj$1.e = reason;
								return errorObj$1;
							} else if (maybePromise.isPending()) maybePromise._attachCancellationCallback(new FinallyHandlerCancelReaction(this));
						}
						return maybePromise._then(succeed, fail, void 0, this, void 0);
					}
				}
			}
			if (promise.isRejected()) {
				checkCancel(this);
				errorObj$1.e = reasonOrValue;
				return errorObj$1;
			} else {
				checkCancel(this);
				return reasonOrValue;
			}
		}
		Promise$1.prototype._passThrough = function(handler, type, success$1, fail$1) {
			if (typeof handler !== "function") return this.then();
			return this._then(success$1, fail$1, void 0, new PassThroughHandlerContext(this, type, handler), void 0);
		};
		Promise$1.prototype.lastly = Promise$1.prototype["finally"] = function(handler) {
			return this._passThrough(handler, 0, finallyHandler, finallyHandler);
		};
		Promise$1.prototype.tap = function(handler) {
			return this._passThrough(handler, 1, finallyHandler);
		};
		return PassThroughHandlerContext;
	};
}) });

//#endregion
//#region node_modules/bluebird/js/release/catch_filter.js
var require_catch_filter = /* @__PURE__ */ __commonJS({ "node_modules/bluebird/js/release/catch_filter.js": ((exports, module) => {
	module.exports = function(NEXT_FILTER) {
		var util$4 = require_util();
		var getKeys = require_es5().keys;
		var tryCatch$1 = util$4.tryCatch;
		var errorObj$1 = util$4.errorObj;
		function catchFilter(instances, cb$1, promise) {
			return function(e) {
				var boundTo = promise._boundValue();
				predicateLoop: for (var i$2 = 0; i$2 < instances.length; ++i$2) {
					var item = instances[i$2];
					if (item === Error || item != null && item.prototype instanceof Error) {
						if (e instanceof item) return tryCatch$1(cb$1).call(boundTo, e);
					} else if (typeof item === "function") {
						var matchesPredicate = tryCatch$1(item).call(boundTo, e);
						if (matchesPredicate === errorObj$1) return matchesPredicate;
						else if (matchesPredicate) return tryCatch$1(cb$1).call(boundTo, e);
					} else if (util$4.isObject(e)) {
						var keys$1 = getKeys(item);
						for (var j = 0; j < keys$1.length; ++j) {
							var key = keys$1[j];
							if (item[key] != e[key]) continue predicateLoop;
						}
						return tryCatch$1(cb$1).call(boundTo, e);
					}
				}
				return NEXT_FILTER;
			};
		}
		return catchFilter;
	};
}) });

//#endregion
//#region node_modules/bluebird/js/release/nodeback.js
var require_nodeback = /* @__PURE__ */ __commonJS({ "node_modules/bluebird/js/release/nodeback.js": ((exports, module) => {
	var util = require_util();
	var maybeWrapAsError = util.maybeWrapAsError;
	var OperationalError = require_errors$1().OperationalError;
	var es5 = require_es5();
	function isUntypedError(obj) {
		return obj instanceof Error && es5.getPrototypeOf(obj) === Error.prototype;
	}
	var rErrorKey = /^(?:name|message|stack|cause)$/;
	function wrapAsOperationalError(obj) {
		var ret$1;
		if (isUntypedError(obj)) {
			ret$1 = new OperationalError(obj);
			ret$1.name = obj.name;
			ret$1.message = obj.message;
			ret$1.stack = obj.stack;
			var keys$1 = es5.keys(obj);
			for (var i$2 = 0; i$2 < keys$1.length; ++i$2) {
				var key = keys$1[i$2];
				if (!rErrorKey.test(key)) ret$1[key] = obj[key];
			}
			return ret$1;
		}
		util.markAsOriginatingFromRejection(obj);
		return obj;
	}
	function nodebackForPromise(promise, multiArgs) {
		return function(err, value) {
			if (promise === null) return;
			if (err) {
				var wrapped = wrapAsOperationalError(maybeWrapAsError(err));
				promise._attachExtraTrace(wrapped);
				promise._reject(wrapped);
			} else if (!multiArgs) promise._fulfill(value);
			else {
				var $_len = arguments.length;
				var args = new Array(Math.max($_len - 1, 0));
				for (var $_i = 1; $_i < $_len; ++$_i) args[$_i - 1] = arguments[$_i];
				promise._fulfill(args);
			}
			promise = null;
		};
	}
	module.exports = nodebackForPromise;
}) });

//#endregion
//#region node_modules/bluebird/js/release/method.js
var require_method = /* @__PURE__ */ __commonJS({ "node_modules/bluebird/js/release/method.js": ((exports, module) => {
	module.exports = function(Promise$1, INTERNAL, tryConvertToPromise, apiRejection, debug) {
		var util$4 = require_util();
		var tryCatch$1 = util$4.tryCatch;
		Promise$1.method = function(fn) {
			if (typeof fn !== "function") throw new Promise$1.TypeError("expecting a function but got " + util$4.classString(fn));
			return function() {
				var ret$1 = new Promise$1(INTERNAL);
				ret$1._captureStackTrace();
				ret$1._pushContext();
				var value = tryCatch$1(fn).apply(this, arguments);
				var promiseCreated = ret$1._popContext();
				debug.checkForgottenReturns(value, promiseCreated, "Promise.method", ret$1);
				ret$1._resolveFromSyncValue(value);
				return ret$1;
			};
		};
		Promise$1.attempt = Promise$1["try"] = function(fn) {
			if (typeof fn !== "function") return apiRejection("expecting a function but got " + util$4.classString(fn));
			var ret$1 = new Promise$1(INTERNAL);
			ret$1._captureStackTrace();
			ret$1._pushContext();
			var value;
			if (arguments.length > 1) {
				debug.deprecated("calling Promise.try with more than 1 argument");
				var arg = arguments[1];
				var ctx = arguments[2];
				value = util$4.isArray(arg) ? tryCatch$1(fn).apply(ctx, arg) : tryCatch$1(fn).call(ctx, arg);
			} else value = tryCatch$1(fn)();
			var promiseCreated = ret$1._popContext();
			debug.checkForgottenReturns(value, promiseCreated, "Promise.try", ret$1);
			ret$1._resolveFromSyncValue(value);
			return ret$1;
		};
		Promise$1.prototype._resolveFromSyncValue = function(value) {
			if (value === util$4.errorObj) this._rejectCallback(value.e, false);
			else this._resolveCallback(value, true);
		};
	};
}) });

//#endregion
//#region node_modules/bluebird/js/release/bind.js
var require_bind = /* @__PURE__ */ __commonJS({ "node_modules/bluebird/js/release/bind.js": ((exports, module) => {
	module.exports = function(Promise$1, INTERNAL, tryConvertToPromise, debug) {
		var calledBind = false;
		var rejectThis = function(_$23, e) {
			this._reject(e);
		};
		var targetRejected = function(e, context) {
			context.promiseRejectionQueued = true;
			context.bindingPromise._then(rejectThis, rejectThis, null, this, e);
		};
		var bindingResolved = function(thisArg, context) {
			if ((this._bitField & 50397184) === 0) this._resolveCallback(context.target);
		};
		var bindingRejected = function(e, context) {
			if (!context.promiseRejectionQueued) this._reject(e);
		};
		Promise$1.prototype.bind = function(thisArg) {
			if (!calledBind) {
				calledBind = true;
				Promise$1.prototype._propagateFrom = debug.propagateFromFunction();
				Promise$1.prototype._boundValue = debug.boundValueFunction();
			}
			var maybePromise = tryConvertToPromise(thisArg);
			var ret$1 = new Promise$1(INTERNAL);
			ret$1._propagateFrom(this, 1);
			var target = this._target();
			ret$1._setBoundTo(maybePromise);
			if (maybePromise instanceof Promise$1) {
				var context = {
					promiseRejectionQueued: false,
					promise: ret$1,
					target,
					bindingPromise: maybePromise
				};
				target._then(INTERNAL, targetRejected, void 0, ret$1, context);
				maybePromise._then(bindingResolved, bindingRejected, void 0, ret$1, context);
				ret$1._setOnCancel(maybePromise);
			} else ret$1._resolveCallback(target);
			return ret$1;
		};
		Promise$1.prototype._setBoundTo = function(obj) {
			if (obj !== void 0) {
				this._bitField = this._bitField | 2097152;
				this._boundTo = obj;
			} else this._bitField = this._bitField & -2097153;
		};
		Promise$1.prototype._isBound = function() {
			return (this._bitField & 2097152) === 2097152;
		};
		Promise$1.bind = function(thisArg, value) {
			return Promise$1.resolve(value).bind(thisArg);
		};
	};
}) });

//#endregion
//#region node_modules/bluebird/js/release/cancel.js
var require_cancel = /* @__PURE__ */ __commonJS({ "node_modules/bluebird/js/release/cancel.js": ((exports, module) => {
	module.exports = function(Promise$1, PromiseArray, apiRejection, debug) {
		var util$4 = require_util();
		var tryCatch$1 = util$4.tryCatch;
		var errorObj$1 = util$4.errorObj;
		var async = Promise$1._async;
		Promise$1.prototype["break"] = Promise$1.prototype.cancel = function() {
			if (!debug.cancellation()) return this._warn("cancellation is disabled");
			var promise = this;
			var child = promise;
			while (promise._isCancellable()) {
				if (!promise._cancelBy(child)) {
					if (child._isFollowing()) child._followee().cancel();
					else child._cancelBranched();
					break;
				}
				var parent = promise._cancellationParent;
				if (parent == null || !parent._isCancellable()) {
					if (promise._isFollowing()) promise._followee().cancel();
					else promise._cancelBranched();
					break;
				} else {
					if (promise._isFollowing()) promise._followee().cancel();
					promise._setWillBeCancelled();
					child = promise;
					promise = parent;
				}
			}
		};
		Promise$1.prototype._branchHasCancelled = function() {
			this._branchesRemainingToCancel--;
		};
		Promise$1.prototype._enoughBranchesHaveCancelled = function() {
			return this._branchesRemainingToCancel === void 0 || this._branchesRemainingToCancel <= 0;
		};
		Promise$1.prototype._cancelBy = function(canceller) {
			if (canceller === this) {
				this._branchesRemainingToCancel = 0;
				this._invokeOnCancel();
				return true;
			} else {
				this._branchHasCancelled();
				if (this._enoughBranchesHaveCancelled()) {
					this._invokeOnCancel();
					return true;
				}
			}
			return false;
		};
		Promise$1.prototype._cancelBranched = function() {
			if (this._enoughBranchesHaveCancelled()) this._cancel();
		};
		Promise$1.prototype._cancel = function() {
			if (!this._isCancellable()) return;
			this._setCancelled();
			async.invoke(this._cancelPromises, this, void 0);
		};
		Promise$1.prototype._cancelPromises = function() {
			if (this._length() > 0) this._settlePromises();
		};
		Promise$1.prototype._unsetOnCancel = function() {
			this._onCancelField = void 0;
		};
		Promise$1.prototype._isCancellable = function() {
			return this.isPending() && !this._isCancelled();
		};
		Promise$1.prototype.isCancellable = function() {
			return this.isPending() && !this.isCancelled();
		};
		Promise$1.prototype._doInvokeOnCancel = function(onCancelCallback, internalOnly) {
			if (util$4.isArray(onCancelCallback)) for (var i$2 = 0; i$2 < onCancelCallback.length; ++i$2) this._doInvokeOnCancel(onCancelCallback[i$2], internalOnly);
			else if (onCancelCallback !== void 0) if (typeof onCancelCallback === "function") {
				if (!internalOnly) {
					var e = tryCatch$1(onCancelCallback).call(this._boundValue());
					if (e === errorObj$1) {
						this._attachExtraTrace(e.e);
						async.throwLater(e.e);
					}
				}
			} else onCancelCallback._resultCancelled(this);
		};
		Promise$1.prototype._invokeOnCancel = function() {
			var onCancelCallback = this._onCancel();
			this._unsetOnCancel();
			async.invoke(this._doInvokeOnCancel, this, onCancelCallback);
		};
		Promise$1.prototype._invokeInternalOnCancel = function() {
			if (this._isCancellable()) {
				this._doInvokeOnCancel(this._onCancel(), true);
				this._unsetOnCancel();
			}
		};
		Promise$1.prototype._resultCancelled = function() {
			this.cancel();
		};
	};
}) });

//#endregion
//#region node_modules/bluebird/js/release/direct_resolve.js
var require_direct_resolve = /* @__PURE__ */ __commonJS({ "node_modules/bluebird/js/release/direct_resolve.js": ((exports, module) => {
	module.exports = function(Promise$1) {
		function returner() {
			return this.value;
		}
		function thrower$1() {
			throw this.reason;
		}
		Promise$1.prototype["return"] = Promise$1.prototype.thenReturn = function(value) {
			if (value instanceof Promise$1) value.suppressUnhandledRejections();
			return this._then(returner, void 0, void 0, { value }, void 0);
		};
		Promise$1.prototype["throw"] = Promise$1.prototype.thenThrow = function(reason) {
			return this._then(thrower$1, void 0, void 0, { reason }, void 0);
		};
		Promise$1.prototype.catchThrow = function(reason) {
			if (arguments.length <= 1) return this._then(void 0, thrower$1, void 0, { reason }, void 0);
			else {
				var _reason = arguments[1];
				var handler = function() {
					throw _reason;
				};
				return this.caught(reason, handler);
			}
		};
		Promise$1.prototype.catchReturn = function(value) {
			if (arguments.length <= 1) {
				if (value instanceof Promise$1) value.suppressUnhandledRejections();
				return this._then(void 0, returner, void 0, { value }, void 0);
			} else {
				var _value = arguments[1];
				if (_value instanceof Promise$1) _value.suppressUnhandledRejections();
				var handler = function() {
					return _value;
				};
				return this.caught(value, handler);
			}
		};
	};
}) });

//#endregion
//#region node_modules/bluebird/js/release/synchronous_inspection.js
var require_synchronous_inspection = /* @__PURE__ */ __commonJS({ "node_modules/bluebird/js/release/synchronous_inspection.js": ((exports, module) => {
	module.exports = function(Promise$1) {
		function PromiseInspection(promise) {
			if (promise !== void 0) {
				promise = promise._target();
				this._bitField = promise._bitField;
				this._settledValueField = promise._isFateSealed() ? promise._settledValue() : void 0;
			} else {
				this._bitField = 0;
				this._settledValueField = void 0;
			}
		}
		PromiseInspection.prototype._settledValue = function() {
			return this._settledValueField;
		};
		var value = PromiseInspection.prototype.value = function() {
			if (!this.isFulfilled()) throw new TypeError("cannot get fulfillment value of a non-fulfilled promise\n\n    See http://goo.gl/MqrFmX\n");
			return this._settledValue();
		};
		var reason = PromiseInspection.prototype.error = PromiseInspection.prototype.reason = function() {
			if (!this.isRejected()) throw new TypeError("cannot get rejection reason of a non-rejected promise\n\n    See http://goo.gl/MqrFmX\n");
			return this._settledValue();
		};
		var isFulfilled = PromiseInspection.prototype.isFulfilled = function() {
			return (this._bitField & 33554432) !== 0;
		};
		var isRejected = PromiseInspection.prototype.isRejected = function() {
			return (this._bitField & 16777216) !== 0;
		};
		var isPending = PromiseInspection.prototype.isPending = function() {
			return (this._bitField & 50397184) === 0;
		};
		var isResolved = PromiseInspection.prototype.isResolved = function() {
			return (this._bitField & 50331648) !== 0;
		};
		PromiseInspection.prototype.isCancelled = function() {
			return (this._bitField & 8454144) !== 0;
		};
		Promise$1.prototype.__isCancelled = function() {
			return (this._bitField & 65536) === 65536;
		};
		Promise$1.prototype._isCancelled = function() {
			return this._target().__isCancelled();
		};
		Promise$1.prototype.isCancelled = function() {
			return (this._target()._bitField & 8454144) !== 0;
		};
		Promise$1.prototype.isPending = function() {
			return isPending.call(this._target());
		};
		Promise$1.prototype.isRejected = function() {
			return isRejected.call(this._target());
		};
		Promise$1.prototype.isFulfilled = function() {
			return isFulfilled.call(this._target());
		};
		Promise$1.prototype.isResolved = function() {
			return isResolved.call(this._target());
		};
		Promise$1.prototype.value = function() {
			return value.call(this._target());
		};
		Promise$1.prototype.reason = function() {
			var target = this._target();
			target._unsetRejectionIsUnhandled();
			return reason.call(target);
		};
		Promise$1.prototype._value = function() {
			return this._settledValue();
		};
		Promise$1.prototype._reason = function() {
			this._unsetRejectionIsUnhandled();
			return this._settledValue();
		};
		Promise$1.PromiseInspection = PromiseInspection;
	};
}) });

//#endregion
//#region node_modules/bluebird/js/release/join.js
var require_join = /* @__PURE__ */ __commonJS({ "node_modules/bluebird/js/release/join.js": ((exports, module) => {
	module.exports = function(Promise$1, PromiseArray, tryConvertToPromise, INTERNAL, async, getDomain) {
		var util$4 = require_util();
		var canEvaluate$1 = util$4.canEvaluate;
		var tryCatch$1 = util$4.tryCatch;
		var errorObj$1 = util$4.errorObj;
		var reject$1;
		if (canEvaluate$1) {
			var thenCallback = function(i$3) {
				return new Function("value", "holder", "                             \n            'use strict';                                                    \n            holder.pIndex = value;                                           \n            holder.checkFulfillment(this);                                   \n            ".replace(/Index/g, i$3));
			};
			var promiseSetter = function(i$3) {
				return new Function("promise", "holder", "                           \n            'use strict';                                                    \n            holder.pIndex = promise;                                         \n            ".replace(/Index/g, i$3));
			};
			var generateHolderClass = function(total) {
				var props = new Array(total);
				for (var i$3 = 0; i$3 < props.length; ++i$3) props[i$3] = "this.p" + (i$3 + 1);
				var assignment = props.join(" = ") + " = null;";
				var cancellationCode = "var promise;\n" + props.map(function(prop) {
					return "                                                         \n                promise = " + prop + ";                                      \n                if (promise instanceof Promise) {                            \n                    promise.cancel();                                        \n                }                                                            \n            ";
				}).join("\n");
				var passedArguments = props.join(", ");
				var name = "Holder$" + total;
				var code$1 = "return function(tryCatch, errorObj, Promise, async) {    \n            'use strict';                                                    \n            function [TheName](fn) {                                         \n                [TheProperties]                                              \n                this.fn = fn;                                                \n                this.asyncNeeded = true;                                     \n                this.now = 0;                                                \n            }                                                                \n                                                                             \n            [TheName].prototype._callFunction = function(promise) {          \n                promise._pushContext();                                      \n                var ret = tryCatch(this.fn)([ThePassedArguments]);           \n                promise._popContext();                                       \n                if (ret === errorObj) {                                      \n                    promise._rejectCallback(ret.e, false);                   \n                } else {                                                     \n                    promise._resolveCallback(ret);                           \n                }                                                            \n            };                                                               \n                                                                             \n            [TheName].prototype.checkFulfillment = function(promise) {       \n                var now = ++this.now;                                        \n                if (now === [TheTotal]) {                                    \n                    if (this.asyncNeeded) {                                  \n                        async.invoke(this._callFunction, this, promise);     \n                    } else {                                                 \n                        this._callFunction(promise);                         \n                    }                                                        \n                                                                             \n                }                                                            \n            };                                                               \n                                                                             \n            [TheName].prototype._resultCancelled = function() {              \n                [CancellationCode]                                           \n            };                                                               \n                                                                             \n            return [TheName];                                                \n        }(tryCatch, errorObj, Promise, async);                               \n        ";
				code$1 = code$1.replace(/\[TheName\]/g, name).replace(/\[TheTotal\]/g, total).replace(/\[ThePassedArguments\]/g, passedArguments).replace(/\[TheProperties\]/g, assignment).replace(/\[CancellationCode\]/g, cancellationCode);
				return new Function("tryCatch", "errorObj", "Promise", "async", code$1)(tryCatch$1, errorObj$1, Promise$1, async);
			};
			var holderClasses = [];
			var thenCallbacks = [];
			var promiseSetters = [];
			for (var i$2 = 0; i$2 < 8; ++i$2) {
				holderClasses.push(generateHolderClass(i$2 + 1));
				thenCallbacks.push(thenCallback(i$2 + 1));
				promiseSetters.push(promiseSetter(i$2 + 1));
			}
			reject$1 = function(reason) {
				this._reject(reason);
			};
		}
		Promise$1.join = function() {
			var last$1 = arguments.length - 1;
			var fn;
			if (last$1 > 0 && typeof arguments[last$1] === "function") {
				fn = arguments[last$1];
				if (last$1 <= 8 && canEvaluate$1) {
					var ret$1 = new Promise$1(INTERNAL);
					ret$1._captureStackTrace();
					var HolderClass = holderClasses[last$1 - 1];
					var holder = new HolderClass(fn);
					var callbacks = thenCallbacks;
					for (var i$3 = 0; i$3 < last$1; ++i$3) {
						var maybePromise = tryConvertToPromise(arguments[i$3], ret$1);
						if (maybePromise instanceof Promise$1) {
							maybePromise = maybePromise._target();
							var bitField = maybePromise._bitField;
							if ((bitField & 50397184) === 0) {
								maybePromise._then(callbacks[i$3], reject$1, void 0, ret$1, holder);
								promiseSetters[i$3](maybePromise, holder);
								holder.asyncNeeded = false;
							} else if ((bitField & 33554432) !== 0) callbacks[i$3].call(ret$1, maybePromise._value(), holder);
							else if ((bitField & 16777216) !== 0) ret$1._reject(maybePromise._reason());
							else ret$1._cancel();
						} else callbacks[i$3].call(ret$1, maybePromise, holder);
					}
					if (!ret$1._isFateSealed()) {
						if (holder.asyncNeeded) {
							var domain = getDomain();
							if (domain !== null) holder.fn = util$4.domainBind(domain, holder.fn);
						}
						ret$1._setAsyncGuaranteed();
						ret$1._setOnCancel(holder);
					}
					return ret$1;
				}
			}
			var $_len = arguments.length;
			var args = new Array($_len);
			for (var $_i = 0; $_i < $_len; ++$_i) args[$_i] = arguments[$_i];
			if (fn) args.pop();
			var ret$1 = new PromiseArray(args).promise();
			return fn !== void 0 ? ret$1.spread(fn) : ret$1;
		};
	};
}) });

//#endregion
//#region node_modules/bluebird/js/release/map.js
var require_map = /* @__PURE__ */ __commonJS({ "node_modules/bluebird/js/release/map.js": ((exports, module) => {
	module.exports = function(Promise$1, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug) {
		var getDomain = Promise$1._getDomain;
		var util$4 = require_util();
		var tryCatch$1 = util$4.tryCatch;
		var errorObj$1 = util$4.errorObj;
		var async = Promise$1._async;
		function MappingPromiseArray(promises$8, fn, limit, _filter) {
			this.constructor$(promises$8);
			this._promise._captureStackTrace();
			var domain = getDomain();
			this._callback = domain === null ? fn : util$4.domainBind(domain, fn);
			this._preservedValues = _filter === INTERNAL ? new Array(this.length()) : null;
			this._limit = limit;
			this._inFlight = 0;
			this._queue = [];
			async.invoke(this._asyncInit, this, void 0);
		}
		util$4.inherits(MappingPromiseArray, PromiseArray);
		MappingPromiseArray.prototype._asyncInit = function() {
			this._init$(void 0, -2);
		};
		MappingPromiseArray.prototype._init = function() {};
		MappingPromiseArray.prototype._promiseFulfilled = function(value, index) {
			var values$1 = this._values;
			var length = this.length();
			var preservedValues = this._preservedValues;
			var limit = this._limit;
			if (index < 0) {
				index = index * -1 - 1;
				values$1[index] = value;
				if (limit >= 1) {
					this._inFlight--;
					this._drainQueue();
					if (this._isResolved()) return true;
				}
			} else {
				if (limit >= 1 && this._inFlight >= limit) {
					values$1[index] = value;
					this._queue.push(index);
					return false;
				}
				if (preservedValues !== null) preservedValues[index] = value;
				var promise = this._promise;
				var callback = this._callback;
				var receiver = promise._boundValue();
				promise._pushContext();
				var ret$1 = tryCatch$1(callback).call(receiver, value, index, length);
				var promiseCreated = promise._popContext();
				debug.checkForgottenReturns(ret$1, promiseCreated, preservedValues !== null ? "Promise.filter" : "Promise.map", promise);
				if (ret$1 === errorObj$1) {
					this._reject(ret$1.e);
					return true;
				}
				var maybePromise = tryConvertToPromise(ret$1, this._promise);
				if (maybePromise instanceof Promise$1) {
					maybePromise = maybePromise._target();
					var bitField = maybePromise._bitField;
					if ((bitField & 50397184) === 0) {
						if (limit >= 1) this._inFlight++;
						values$1[index] = maybePromise;
						maybePromise._proxy(this, (index + 1) * -1);
						return false;
					} else if ((bitField & 33554432) !== 0) ret$1 = maybePromise._value();
					else if ((bitField & 16777216) !== 0) {
						this._reject(maybePromise._reason());
						return true;
					} else {
						this._cancel();
						return true;
					}
				}
				values$1[index] = ret$1;
			}
			if (++this._totalResolved >= length) {
				if (preservedValues !== null) this._filter(values$1, preservedValues);
				else this._resolve(values$1);
				return true;
			}
			return false;
		};
		MappingPromiseArray.prototype._drainQueue = function() {
			var queue = this._queue;
			var limit = this._limit;
			var values$1 = this._values;
			while (queue.length > 0 && this._inFlight < limit) {
				if (this._isResolved()) return;
				var index = queue.pop();
				this._promiseFulfilled(values$1[index], index);
			}
		};
		MappingPromiseArray.prototype._filter = function(booleans, values$1) {
			var len$1 = values$1.length;
			var ret$1 = new Array(len$1);
			var j = 0;
			for (var i$2 = 0; i$2 < len$1; ++i$2) if (booleans[i$2]) ret$1[j++] = values$1[i$2];
			ret$1.length = j;
			this._resolve(ret$1);
		};
		MappingPromiseArray.prototype.preservedValues = function() {
			return this._preservedValues;
		};
		function map$1(promises$8, fn, options$1, _filter) {
			if (typeof fn !== "function") return apiRejection("expecting a function but got " + util$4.classString(fn));
			var limit = 0;
			if (options$1 !== void 0) if (typeof options$1 === "object" && options$1 !== null) {
				if (typeof options$1.concurrency !== "number") return Promise$1.reject(/* @__PURE__ */ new TypeError("'concurrency' must be a number but it is " + util$4.classString(options$1.concurrency)));
				limit = options$1.concurrency;
			} else return Promise$1.reject(/* @__PURE__ */ new TypeError("options argument must be an object but it is " + util$4.classString(options$1)));
			limit = typeof limit === "number" && isFinite(limit) && limit >= 1 ? limit : 0;
			return new MappingPromiseArray(promises$8, fn, limit, _filter).promise();
		}
		Promise$1.prototype.map = function(fn, options$1) {
			return map$1(this, fn, options$1, null);
		};
		Promise$1.map = function(promises$8, fn, options$1, _filter) {
			return map$1(promises$8, fn, options$1, _filter);
		};
	};
}) });

//#endregion
//#region node_modules/bluebird/js/release/call_get.js
var require_call_get = /* @__PURE__ */ __commonJS({ "node_modules/bluebird/js/release/call_get.js": ((exports, module) => {
	var cr = Object.create;
	if (cr) {
		var callerCache = cr(null);
		var getterCache = cr(null);
		callerCache[" size"] = getterCache[" size"] = 0;
	}
	module.exports = function(Promise$1) {
		var util$4 = require_util();
		var canEvaluate$1 = util$4.canEvaluate;
		var isIdentifier$1 = util$4.isIdentifier;
		var getMethodCaller;
		var getGetter;
		var makeMethodCaller = function(methodName) {
			return new Function("ensureMethod", "                                    \n        return function(obj) {                                               \n            'use strict'                                                     \n            var len = this.length;                                           \n            ensureMethod(obj, 'methodName');                                 \n            switch(len) {                                                    \n                case 1: return obj.methodName(this[0]);                      \n                case 2: return obj.methodName(this[0], this[1]);             \n                case 3: return obj.methodName(this[0], this[1], this[2]);    \n                case 0: return obj.methodName();                             \n                default:                                                     \n                    return obj.methodName.apply(obj, this);                  \n            }                                                                \n        };                                                                   \n        ".replace(/methodName/g, methodName))(ensureMethod);
		};
		var makeGetter = function(propertyName) {
			return new Function("obj", "                                             \n        'use strict';                                                        \n        return obj.propertyName;                                             \n        ".replace("propertyName", propertyName));
		};
		var getCompiled = function(name, compiler, cache) {
			var ret$1 = cache[name];
			if (typeof ret$1 !== "function") {
				if (!isIdentifier$1(name)) return null;
				ret$1 = compiler(name);
				cache[name] = ret$1;
				cache[" size"]++;
				if (cache[" size"] > 512) {
					var keys$1 = Object.keys(cache);
					for (var i$2 = 0; i$2 < 256; ++i$2) delete cache[keys$1[i$2]];
					cache[" size"] = keys$1.length - 256;
				}
			}
			return ret$1;
		};
		getMethodCaller = function(name) {
			return getCompiled(name, makeMethodCaller, callerCache);
		};
		getGetter = function(name) {
			return getCompiled(name, makeGetter, getterCache);
		};
		function ensureMethod(obj, methodName) {
			var fn;
			if (obj != null) fn = obj[methodName];
			if (typeof fn !== "function") {
				var message = "Object " + util$4.classString(obj) + " has no method '" + util$4.toString(methodName) + "'";
				throw new Promise$1.TypeError(message);
			}
			return fn;
		}
		function caller(obj) {
			var methodName = this.pop();
			return ensureMethod(obj, methodName).apply(obj, this);
		}
		Promise$1.prototype.call = function(methodName) {
			var $_len = arguments.length;
			var args = new Array(Math.max($_len - 1, 0));
			for (var $_i = 1; $_i < $_len; ++$_i) args[$_i - 1] = arguments[$_i];
			if (canEvaluate$1) {
				var maybeCaller = getMethodCaller(methodName);
				if (maybeCaller !== null) return this._then(maybeCaller, void 0, void 0, args, void 0);
			}
			args.push(methodName);
			return this._then(caller, void 0, void 0, args, void 0);
		};
		function namedGetter(obj) {
			return obj[this];
		}
		function indexedGetter(obj) {
			var index = +this;
			if (index < 0) index = Math.max(0, index + obj.length);
			return obj[index];
		}
		Promise$1.prototype.get = function(propertyName) {
			var isIndex = typeof propertyName === "number";
			var getter;
			if (!isIndex) if (canEvaluate$1) {
				var maybeGetter = getGetter(propertyName);
				getter = maybeGetter !== null ? maybeGetter : namedGetter;
			} else getter = namedGetter;
			else getter = indexedGetter;
			return this._then(getter, void 0, void 0, propertyName, void 0);
		};
	};
}) });

//#endregion
//#region node_modules/bluebird/js/release/using.js
var require_using = /* @__PURE__ */ __commonJS({ "node_modules/bluebird/js/release/using.js": ((exports, module) => {
	module.exports = function(Promise$1, apiRejection, tryConvertToPromise, createContext, INTERNAL, debug) {
		var util$4 = require_util();
		var TypeError$1 = require_errors$1().TypeError;
		var inherits$2 = require_util().inherits;
		var errorObj$1 = util$4.errorObj;
		var tryCatch$1 = util$4.tryCatch;
		var NULL = {};
		function thrower$1(e) {
			setTimeout(function() {
				throw e;
			}, 0);
		}
		function castPreservingDisposable(thenable) {
			var maybePromise = tryConvertToPromise(thenable);
			if (maybePromise !== thenable && typeof thenable._isDisposable === "function" && typeof thenable._getDisposer === "function" && thenable._isDisposable()) maybePromise._setDisposable(thenable._getDisposer());
			return maybePromise;
		}
		function dispose(resources, inspection) {
			var i$2 = 0;
			var len$1 = resources.length;
			var ret$1 = new Promise$1(INTERNAL);
			function iterator() {
				if (i$2 >= len$1) return ret$1._fulfill();
				var maybePromise = castPreservingDisposable(resources[i$2++]);
				if (maybePromise instanceof Promise$1 && maybePromise._isDisposable()) {
					try {
						maybePromise = tryConvertToPromise(maybePromise._getDisposer().tryDispose(inspection), resources.promise);
					} catch (e) {
						return thrower$1(e);
					}
					if (maybePromise instanceof Promise$1) return maybePromise._then(iterator, thrower$1, null, null, null);
				}
				iterator();
			}
			iterator();
			return ret$1;
		}
		function Disposer(data, promise, context) {
			this._data = data;
			this._promise = promise;
			this._context = context;
		}
		Disposer.prototype.data = function() {
			return this._data;
		};
		Disposer.prototype.promise = function() {
			return this._promise;
		};
		Disposer.prototype.resource = function() {
			if (this.promise().isFulfilled()) return this.promise().value();
			return NULL;
		};
		Disposer.prototype.tryDispose = function(inspection) {
			var resource = this.resource();
			var context = this._context;
			if (context !== void 0) context._pushContext();
			var ret$1 = resource !== NULL ? this.doDispose(resource, inspection) : null;
			if (context !== void 0) context._popContext();
			this._promise._unsetDisposable();
			this._data = null;
			return ret$1;
		};
		Disposer.isDisposer = function(d) {
			return d != null && typeof d.resource === "function" && typeof d.tryDispose === "function";
		};
		function FunctionDisposer(fn, promise, context) {
			this.constructor$(fn, promise, context);
		}
		inherits$2(FunctionDisposer, Disposer);
		FunctionDisposer.prototype.doDispose = function(resource, inspection) {
			return this.data().call(resource, resource, inspection);
		};
		function maybeUnwrapDisposer(value) {
			if (Disposer.isDisposer(value)) {
				this.resources[this.index]._setDisposable(value);
				return value.promise();
			}
			return value;
		}
		function ResourceList(length) {
			this.length = length;
			this.promise = null;
			this[length - 1] = null;
		}
		ResourceList.prototype._resultCancelled = function() {
			var len$1 = this.length;
			for (var i$2 = 0; i$2 < len$1; ++i$2) {
				var item = this[i$2];
				if (item instanceof Promise$1) item.cancel();
			}
		};
		Promise$1.using = function() {
			var len$1 = arguments.length;
			if (len$1 < 2) return apiRejection("you must pass at least 2 arguments to Promise.using");
			var fn = arguments[len$1 - 1];
			if (typeof fn !== "function") return apiRejection("expecting a function but got " + util$4.classString(fn));
			var input;
			var spreadArgs = true;
			if (len$1 === 2 && Array.isArray(arguments[0])) {
				input = arguments[0];
				len$1 = input.length;
				spreadArgs = false;
			} else {
				input = arguments;
				len$1--;
			}
			var resources = new ResourceList(len$1);
			for (var i$2 = 0; i$2 < len$1; ++i$2) {
				var resource = input[i$2];
				if (Disposer.isDisposer(resource)) {
					var disposer = resource;
					resource = resource.promise();
					resource._setDisposable(disposer);
				} else {
					var maybePromise = tryConvertToPromise(resource);
					if (maybePromise instanceof Promise$1) resource = maybePromise._then(maybeUnwrapDisposer, null, null, {
						resources,
						index: i$2
					}, void 0);
				}
				resources[i$2] = resource;
			}
			var reflectedResources = new Array(resources.length);
			for (var i$2 = 0; i$2 < reflectedResources.length; ++i$2) reflectedResources[i$2] = Promise$1.resolve(resources[i$2]).reflect();
			var resultPromise = Promise$1.all(reflectedResources).then(function(inspections) {
				for (var i$3 = 0; i$3 < inspections.length; ++i$3) {
					var inspection = inspections[i$3];
					if (inspection.isRejected()) {
						errorObj$1.e = inspection.error();
						return errorObj$1;
					} else if (!inspection.isFulfilled()) {
						resultPromise.cancel();
						return;
					}
					inspections[i$3] = inspection.value();
				}
				promise._pushContext();
				fn = tryCatch$1(fn);
				var ret$1 = spreadArgs ? fn.apply(void 0, inspections) : fn(inspections);
				var promiseCreated = promise._popContext();
				debug.checkForgottenReturns(ret$1, promiseCreated, "Promise.using", promise);
				return ret$1;
			});
			var promise = resultPromise.lastly(function() {
				var inspection = new Promise$1.PromiseInspection(resultPromise);
				return dispose(resources, inspection);
			});
			resources.promise = promise;
			promise._setOnCancel(resources);
			return promise;
		};
		Promise$1.prototype._setDisposable = function(disposer) {
			this._bitField = this._bitField | 131072;
			this._disposer = disposer;
		};
		Promise$1.prototype._isDisposable = function() {
			return (this._bitField & 131072) > 0;
		};
		Promise$1.prototype._getDisposer = function() {
			return this._disposer;
		};
		Promise$1.prototype._unsetDisposable = function() {
			this._bitField = this._bitField & -131073;
			this._disposer = void 0;
		};
		Promise$1.prototype.disposer = function(fn) {
			if (typeof fn === "function") return new FunctionDisposer(fn, this, createContext());
			throw new TypeError$1();
		};
	};
}) });

//#endregion
//#region node_modules/bluebird/js/release/timers.js
var require_timers = /* @__PURE__ */ __commonJS({ "node_modules/bluebird/js/release/timers.js": ((exports, module) => {
	module.exports = function(Promise$1, INTERNAL, debug) {
		var util$4 = require_util();
		var TimeoutError$1 = Promise$1.TimeoutError;
		function HandleWrapper(handle) {
			this.handle = handle;
		}
		HandleWrapper.prototype._resultCancelled = function() {
			clearTimeout(this.handle);
		};
		var afterValue = function(value) {
			return delay(+this).thenReturn(value);
		};
		var delay = Promise$1.delay = function(ms, value) {
			var ret$1;
			var handle;
			if (value !== void 0) {
				ret$1 = Promise$1.resolve(value)._then(afterValue, null, null, ms, void 0);
				if (debug.cancellation() && value instanceof Promise$1) ret$1._setOnCancel(value);
			} else {
				ret$1 = new Promise$1(INTERNAL);
				handle = setTimeout(function() {
					ret$1._fulfill();
				}, +ms);
				if (debug.cancellation()) ret$1._setOnCancel(new HandleWrapper(handle));
				ret$1._captureStackTrace();
			}
			ret$1._setAsyncGuaranteed();
			return ret$1;
		};
		Promise$1.prototype.delay = function(ms) {
			return delay(ms, this);
		};
		var afterTimeout = function(promise, message, parent) {
			var err;
			if (typeof message !== "string") if (message instanceof Error) err = message;
			else err = new TimeoutError$1("operation timed out");
			else err = new TimeoutError$1(message);
			util$4.markAsOriginatingFromRejection(err);
			promise._attachExtraTrace(err);
			promise._reject(err);
			if (parent != null) parent.cancel();
		};
		function successClear(value) {
			clearTimeout(this.handle);
			return value;
		}
		function failureClear(reason) {
			clearTimeout(this.handle);
			throw reason;
		}
		Promise$1.prototype.timeout = function(ms, message) {
			ms = +ms;
			var ret$1, parent;
			var handleWrapper = new HandleWrapper(setTimeout(function timeoutTimeout() {
				if (ret$1.isPending()) afterTimeout(ret$1, message, parent);
			}, ms));
			if (debug.cancellation()) {
				parent = this.then();
				ret$1 = parent._then(successClear, failureClear, void 0, handleWrapper, void 0);
				ret$1._setOnCancel(handleWrapper);
			} else ret$1 = this._then(successClear, failureClear, void 0, handleWrapper, void 0);
			return ret$1;
		};
	};
}) });

//#endregion
//#region node_modules/bluebird/js/release/generators.js
var require_generators = /* @__PURE__ */ __commonJS({ "node_modules/bluebird/js/release/generators.js": ((exports, module) => {
	module.exports = function(Promise$1, apiRejection, INTERNAL, tryConvertToPromise, Proxyable, debug) {
		var TypeError$1 = require_errors$1().TypeError;
		var util$4 = require_util();
		var errorObj$1 = util$4.errorObj;
		var tryCatch$1 = util$4.tryCatch;
		var yieldHandlers = [];
		function promiseFromYieldHandler(value, yieldHandlers$1, traceParent) {
			for (var i$2 = 0; i$2 < yieldHandlers$1.length; ++i$2) {
				traceParent._pushContext();
				var result$1 = tryCatch$1(yieldHandlers$1[i$2])(value);
				traceParent._popContext();
				if (result$1 === errorObj$1) {
					traceParent._pushContext();
					var ret$1 = Promise$1.reject(errorObj$1.e);
					traceParent._popContext();
					return ret$1;
				}
				var maybePromise = tryConvertToPromise(result$1, traceParent);
				if (maybePromise instanceof Promise$1) return maybePromise;
			}
			return null;
		}
		function PromiseSpawn(generatorFunction, receiver, yieldHandler, stack) {
			if (debug.cancellation()) {
				var internal = new Promise$1(INTERNAL);
				var _finallyPromise = this._finallyPromise = new Promise$1(INTERNAL);
				this._promise = internal.lastly(function() {
					return _finallyPromise;
				});
				internal._captureStackTrace();
				internal._setOnCancel(this);
			} else (this._promise = new Promise$1(INTERNAL))._captureStackTrace();
			this._stack = stack;
			this._generatorFunction = generatorFunction;
			this._receiver = receiver;
			this._generator = void 0;
			this._yieldHandlers = typeof yieldHandler === "function" ? [yieldHandler].concat(yieldHandlers) : yieldHandlers;
			this._yieldedPromise = null;
			this._cancellationPhase = false;
		}
		util$4.inherits(PromiseSpawn, Proxyable);
		PromiseSpawn.prototype._isResolved = function() {
			return this._promise === null;
		};
		PromiseSpawn.prototype._cleanup = function() {
			this._promise = this._generator = null;
			if (debug.cancellation() && this._finallyPromise !== null) {
				this._finallyPromise._fulfill();
				this._finallyPromise = null;
			}
		};
		PromiseSpawn.prototype._promiseCancelled = function() {
			if (this._isResolved()) return;
			var implementsReturn = typeof this._generator["return"] !== "undefined";
			var result$1;
			if (!implementsReturn) {
				var reason = new Promise$1.CancellationError("generator .return() sentinel");
				Promise$1.coroutine.returnSentinel = reason;
				this._promise._attachExtraTrace(reason);
				this._promise._pushContext();
				result$1 = tryCatch$1(this._generator["throw"]).call(this._generator, reason);
				this._promise._popContext();
			} else {
				this._promise._pushContext();
				result$1 = tryCatch$1(this._generator["return"]).call(this._generator, void 0);
				this._promise._popContext();
			}
			this._cancellationPhase = true;
			this._yieldedPromise = null;
			this._continue(result$1);
		};
		PromiseSpawn.prototype._promiseFulfilled = function(value) {
			this._yieldedPromise = null;
			this._promise._pushContext();
			var result$1 = tryCatch$1(this._generator.next).call(this._generator, value);
			this._promise._popContext();
			this._continue(result$1);
		};
		PromiseSpawn.prototype._promiseRejected = function(reason) {
			this._yieldedPromise = null;
			this._promise._attachExtraTrace(reason);
			this._promise._pushContext();
			var result$1 = tryCatch$1(this._generator["throw"]).call(this._generator, reason);
			this._promise._popContext();
			this._continue(result$1);
		};
		PromiseSpawn.prototype._resultCancelled = function() {
			if (this._yieldedPromise instanceof Promise$1) {
				var promise = this._yieldedPromise;
				this._yieldedPromise = null;
				promise.cancel();
			}
		};
		PromiseSpawn.prototype.promise = function() {
			return this._promise;
		};
		PromiseSpawn.prototype._run = function() {
			this._generator = this._generatorFunction.call(this._receiver);
			this._receiver = this._generatorFunction = void 0;
			this._promiseFulfilled(void 0);
		};
		PromiseSpawn.prototype._continue = function(result$1) {
			var promise = this._promise;
			if (result$1 === errorObj$1) {
				this._cleanup();
				if (this._cancellationPhase) return promise.cancel();
				else return promise._rejectCallback(result$1.e, false);
			}
			var value = result$1.value;
			if (result$1.done === true) {
				this._cleanup();
				if (this._cancellationPhase) return promise.cancel();
				else return promise._resolveCallback(value);
			} else {
				var maybePromise = tryConvertToPromise(value, this._promise);
				if (!(maybePromise instanceof Promise$1)) {
					maybePromise = promiseFromYieldHandler(maybePromise, this._yieldHandlers, this._promise);
					if (maybePromise === null) {
						this._promiseRejected(new TypeError$1("A value %s was yielded that could not be treated as a promise\n\n    See http://goo.gl/MqrFmX\n\n".replace("%s", value) + "From coroutine:\n" + this._stack.split("\n").slice(1, -7).join("\n")));
						return;
					}
				}
				maybePromise = maybePromise._target();
				var bitField = maybePromise._bitField;
				if ((bitField & 50397184) === 0) {
					this._yieldedPromise = maybePromise;
					maybePromise._proxy(this, null);
				} else if ((bitField & 33554432) !== 0) Promise$1._async.invoke(this._promiseFulfilled, this, maybePromise._value());
				else if ((bitField & 16777216) !== 0) Promise$1._async.invoke(this._promiseRejected, this, maybePromise._reason());
				else this._promiseCancelled();
			}
		};
		Promise$1.coroutine = function(generatorFunction, options$1) {
			if (typeof generatorFunction !== "function") throw new TypeError$1("generatorFunction must be a function\n\n    See http://goo.gl/MqrFmX\n");
			var yieldHandler = Object(options$1).yieldHandler;
			var PromiseSpawn$ = PromiseSpawn;
			var stack = (/* @__PURE__ */ new Error()).stack;
			return function() {
				var generator = generatorFunction.apply(this, arguments);
				var spawn = new PromiseSpawn$(void 0, void 0, yieldHandler, stack);
				var ret$1 = spawn.promise();
				spawn._generator = generator;
				spawn._promiseFulfilled(void 0);
				return ret$1;
			};
		};
		Promise$1.coroutine.addYieldHandler = function(fn) {
			if (typeof fn !== "function") throw new TypeError$1("expecting a function but got " + util$4.classString(fn));
			yieldHandlers.push(fn);
		};
		Promise$1.spawn = function(generatorFunction) {
			debug.deprecated("Promise.spawn()", "Promise.coroutine()");
			if (typeof generatorFunction !== "function") return apiRejection("generatorFunction must be a function\n\n    See http://goo.gl/MqrFmX\n");
			var spawn = new PromiseSpawn(generatorFunction, this);
			var ret$1 = spawn.promise();
			spawn._run(Promise$1.spawn);
			return ret$1;
		};
	};
}) });

//#endregion
//#region node_modules/bluebird/js/release/nodeify.js
var require_nodeify = /* @__PURE__ */ __commonJS({ "node_modules/bluebird/js/release/nodeify.js": ((exports, module) => {
	module.exports = function(Promise$1) {
		var util$4 = require_util();
		var async = Promise$1._async;
		var tryCatch$1 = util$4.tryCatch;
		var errorObj$1 = util$4.errorObj;
		function spreadAdapter(val, nodeback) {
			var promise = this;
			if (!util$4.isArray(val)) return successAdapter.call(promise, val, nodeback);
			var ret$1 = tryCatch$1(nodeback).apply(promise._boundValue(), [null].concat(val));
			if (ret$1 === errorObj$1) async.throwLater(ret$1.e);
		}
		function successAdapter(val, nodeback) {
			var receiver = this._boundValue();
			var ret$1 = val === void 0 ? tryCatch$1(nodeback).call(receiver, null) : tryCatch$1(nodeback).call(receiver, null, val);
			if (ret$1 === errorObj$1) async.throwLater(ret$1.e);
		}
		function errorAdapter(reason, nodeback) {
			var promise = this;
			if (!reason) {
				var newReason = /* @__PURE__ */ new Error(reason + "");
				newReason.cause = reason;
				reason = newReason;
			}
			var ret$1 = tryCatch$1(nodeback).call(promise._boundValue(), reason);
			if (ret$1 === errorObj$1) async.throwLater(ret$1.e);
		}
		Promise$1.prototype.asCallback = Promise$1.prototype.nodeify = function(nodeback, options$1) {
			if (typeof nodeback == "function") {
				var adapter = successAdapter;
				if (options$1 !== void 0 && Object(options$1).spread) adapter = spreadAdapter;
				this._then(adapter, errorAdapter, void 0, this, nodeback);
			}
			return this;
		};
	};
}) });

//#endregion
//#region node_modules/bluebird/js/release/promisify.js
var require_promisify = /* @__PURE__ */ __commonJS({ "node_modules/bluebird/js/release/promisify.js": ((exports, module) => {
	module.exports = function(Promise$1, INTERNAL) {
		var THIS = {};
		var util$4 = require_util();
		var nodebackForPromise$1 = require_nodeback();
		var withAppended$1 = util$4.withAppended;
		var maybeWrapAsError$2 = util$4.maybeWrapAsError;
		var canEvaluate$1 = util$4.canEvaluate;
		var TypeError$1 = require_errors$1().TypeError;
		var defaultSuffix = "Async";
		var defaultPromisified = { __isPromisified__: true };
		var noCopyPropsPattern = /* @__PURE__ */ new RegExp("^(?:" + [
			"arity",
			"length",
			"name",
			"arguments",
			"caller",
			"callee",
			"prototype",
			"__isPromisified__"
		].join("|") + ")$");
		var defaultFilter = function(name) {
			return util$4.isIdentifier(name) && name.charAt(0) !== "_" && name !== "constructor";
		};
		function propsFilter(key) {
			return !noCopyPropsPattern.test(key);
		}
		function isPromisified(fn) {
			try {
				return fn.__isPromisified__ === true;
			} catch (e) {
				return false;
			}
		}
		function hasPromisified(obj, key, suffix) {
			var val = util$4.getDataPropertyOrDefault(obj, key + suffix, defaultPromisified);
			return val ? isPromisified(val) : false;
		}
		function checkValid(ret$1, suffix, suffixRegexp) {
			for (var i$2 = 0; i$2 < ret$1.length; i$2 += 2) {
				var key = ret$1[i$2];
				if (suffixRegexp.test(key)) {
					var keyWithoutAsyncSuffix = key.replace(suffixRegexp, "");
					for (var j = 0; j < ret$1.length; j += 2) if (ret$1[j] === keyWithoutAsyncSuffix) throw new TypeError$1("Cannot promisify an API that has normal methods with '%s'-suffix\n\n    See http://goo.gl/MqrFmX\n".replace("%s", suffix));
				}
			}
		}
		function promisifiableMethods(obj, suffix, suffixRegexp, filter$1) {
			var keys$1 = util$4.inheritedDataKeys(obj);
			var ret$1 = [];
			for (var i$2 = 0; i$2 < keys$1.length; ++i$2) {
				var key = keys$1[i$2];
				var value = obj[key];
				var passesDefaultFilter = filter$1 === defaultFilter ? true : defaultFilter(key, value, obj);
				if (typeof value === "function" && !isPromisified(value) && !hasPromisified(obj, key, suffix) && filter$1(key, value, obj, passesDefaultFilter)) ret$1.push(key, value);
			}
			checkValid(ret$1, suffix, suffixRegexp);
			return ret$1;
		}
		var escapeIdentRegex = function(str$1) {
			return str$1.replace(/([$])/, "\\$");
		};
		var makeNodePromisifiedEval;
		var switchCaseArgumentOrder = function(likelyArgumentCount) {
			var ret$1 = [likelyArgumentCount];
			var min$1 = Math.max(0, likelyArgumentCount - 1 - 3);
			for (var i$2 = likelyArgumentCount - 1; i$2 >= min$1; --i$2) ret$1.push(i$2);
			for (var i$2 = likelyArgumentCount + 1; i$2 <= 3; ++i$2) ret$1.push(i$2);
			return ret$1;
		};
		var argumentSequence = function(argumentCount) {
			return util$4.filledRange(argumentCount, "_arg", "");
		};
		var parameterDeclaration = function(parameterCount$1) {
			return util$4.filledRange(Math.max(parameterCount$1, 3), "_arg", "");
		};
		var parameterCount = function(fn) {
			if (typeof fn.length === "number") return Math.max(Math.min(fn.length, 1024), 0);
			return 0;
		};
		makeNodePromisifiedEval = function(callback, receiver, originalName, fn, _$23, multiArgs) {
			var newParameterCount = Math.max(0, parameterCount(fn) - 1);
			var argumentOrder = switchCaseArgumentOrder(newParameterCount);
			var shouldProxyThis = typeof callback === "string" || receiver === THIS;
			function generateCallForArgumentCount(count) {
				var args = argumentSequence(count).join(", ");
				var comma = count > 0 ? ", " : "";
				var ret$1;
				if (shouldProxyThis) ret$1 = "ret = callback.call(this, {{args}}, nodeback); break;\n";
				else ret$1 = receiver === void 0 ? "ret = callback({{args}}, nodeback); break;\n" : "ret = callback.call(receiver, {{args}}, nodeback); break;\n";
				return ret$1.replace("{{args}}", args).replace(", ", comma);
			}
			function generateArgumentSwitchCase() {
				var ret$1 = "";
				for (var i$2 = 0; i$2 < argumentOrder.length; ++i$2) ret$1 += "case " + argumentOrder[i$2] + ":" + generateCallForArgumentCount(argumentOrder[i$2]);
				ret$1 += "                                                             \n        default:                                                             \n            var args = new Array(len + 1);                                   \n            var i = 0;                                                       \n            for (var i = 0; i < len; ++i) {                                  \n               args[i] = arguments[i];                                       \n            }                                                                \n            args[i] = nodeback;                                              \n            [CodeForCall]                                                    \n            break;                                                           \n        ".replace("[CodeForCall]", shouldProxyThis ? "ret = callback.apply(this, args);\n" : "ret = callback.apply(receiver, args);\n");
				return ret$1;
			}
			var getFunctionCode = typeof callback === "string" ? "this != null ? this['" + callback + "'] : fn" : "fn";
			var body = "'use strict';                                                \n        var ret = function (Parameters) {                                    \n            'use strict';                                                    \n            var len = arguments.length;                                      \n            var promise = new Promise(INTERNAL);                             \n            promise._captureStackTrace();                                    \n            var nodeback = nodebackForPromise(promise, " + multiArgs + ");   \n            var ret;                                                         \n            var callback = tryCatch([GetFunctionCode]);                      \n            switch(len) {                                                    \n                [CodeForSwitchCase]                                          \n            }                                                                \n            if (ret === errorObj) {                                          \n                promise._rejectCallback(maybeWrapAsError(ret.e), true, true);\n            }                                                                \n            if (!promise._isFateSealed()) promise._setAsyncGuaranteed();     \n            return promise;                                                  \n        };                                                                   \n        notEnumerableProp(ret, '__isPromisified__', true);                   \n        return ret;                                                          \n    ".replace("[CodeForSwitchCase]", generateArgumentSwitchCase()).replace("[GetFunctionCode]", getFunctionCode);
			body = body.replace("Parameters", parameterDeclaration(newParameterCount));
			return new Function("Promise", "fn", "receiver", "withAppended", "maybeWrapAsError", "nodebackForPromise", "tryCatch", "errorObj", "notEnumerableProp", "INTERNAL", body)(Promise$1, fn, receiver, withAppended$1, maybeWrapAsError$2, nodebackForPromise$1, util$4.tryCatch, util$4.errorObj, util$4.notEnumerableProp, INTERNAL);
		};
		function makeNodePromisifiedClosure(callback, receiver, _$23, fn, __, multiArgs) {
			var defaultThis = (function() {
				return this;
			})();
			var method = callback;
			if (typeof method === "string") callback = fn;
			function promisified() {
				var _receiver = receiver;
				if (receiver === THIS) _receiver = this;
				var promise = new Promise$1(INTERNAL);
				promise._captureStackTrace();
				var cb$1 = typeof method === "string" && this !== defaultThis ? this[method] : callback;
				var fn$1 = nodebackForPromise$1(promise, multiArgs);
				try {
					cb$1.apply(_receiver, withAppended$1(arguments, fn$1));
				} catch (e) {
					promise._rejectCallback(maybeWrapAsError$2(e), true, true);
				}
				if (!promise._isFateSealed()) promise._setAsyncGuaranteed();
				return promise;
			}
			util$4.notEnumerableProp(promisified, "__isPromisified__", true);
			return promisified;
		}
		var makeNodePromisified = canEvaluate$1 ? makeNodePromisifiedEval : makeNodePromisifiedClosure;
		function promisifyAll(obj, suffix, filter$1, promisifier, multiArgs) {
			var suffixRegexp = /* @__PURE__ */ new RegExp(escapeIdentRegex(suffix) + "$");
			var methods$1 = promisifiableMethods(obj, suffix, suffixRegexp, filter$1);
			for (var i$2 = 0, len$1 = methods$1.length; i$2 < len$1; i$2 += 2) {
				var key = methods$1[i$2];
				var fn = methods$1[i$2 + 1];
				var promisifiedKey = key + suffix;
				if (promisifier === makeNodePromisified) obj[promisifiedKey] = makeNodePromisified(key, THIS, key, fn, suffix, multiArgs);
				else {
					var promisified = promisifier(fn, function() {
						return makeNodePromisified(key, THIS, key, fn, suffix, multiArgs);
					});
					util$4.notEnumerableProp(promisified, "__isPromisified__", true);
					obj[promisifiedKey] = promisified;
				}
			}
			util$4.toFastProperties(obj);
			return obj;
		}
		function promisify(callback, receiver, multiArgs) {
			return makeNodePromisified(callback, receiver, void 0, callback, null, multiArgs);
		}
		Promise$1.promisify = function(fn, options$1) {
			if (typeof fn !== "function") throw new TypeError$1("expecting a function but got " + util$4.classString(fn));
			if (isPromisified(fn)) return fn;
			options$1 = Object(options$1);
			var receiver = options$1.context === void 0 ? THIS : options$1.context;
			var multiArgs = !!options$1.multiArgs;
			var ret$1 = promisify(fn, receiver, multiArgs);
			util$4.copyDescriptors(fn, ret$1, propsFilter);
			return ret$1;
		};
		Promise$1.promisifyAll = function(target, options$1) {
			if (typeof target !== "function" && typeof target !== "object") throw new TypeError$1("the target of promisifyAll must be an object or a function\n\n    See http://goo.gl/MqrFmX\n");
			options$1 = Object(options$1);
			var multiArgs = !!options$1.multiArgs;
			var suffix = options$1.suffix;
			if (typeof suffix !== "string") suffix = defaultSuffix;
			var filter$1 = options$1.filter;
			if (typeof filter$1 !== "function") filter$1 = defaultFilter;
			var promisifier = options$1.promisifier;
			if (typeof promisifier !== "function") promisifier = makeNodePromisified;
			if (!util$4.isIdentifier(suffix)) throw new RangeError("suffix must be a valid identifier\n\n    See http://goo.gl/MqrFmX\n");
			var keys$1 = util$4.inheritedDataKeys(target);
			for (var i$2 = 0; i$2 < keys$1.length; ++i$2) {
				var value = target[keys$1[i$2]];
				if (keys$1[i$2] !== "constructor" && util$4.isClass(value)) {
					promisifyAll(value.prototype, suffix, filter$1, promisifier, multiArgs);
					promisifyAll(value, suffix, filter$1, promisifier, multiArgs);
				}
			}
			return promisifyAll(target, suffix, filter$1, promisifier, multiArgs);
		};
	};
}) });

//#endregion
//#region node_modules/bluebird/js/release/props.js
var require_props = /* @__PURE__ */ __commonJS({ "node_modules/bluebird/js/release/props.js": ((exports, module) => {
	module.exports = function(Promise$1, PromiseArray, tryConvertToPromise, apiRejection) {
		var util$4 = require_util();
		var isObject$2 = util$4.isObject;
		var es5$3 = require_es5();
		var Es6Map;
		if (typeof Map === "function") Es6Map = Map;
		var mapToEntries = (function() {
			var index = 0;
			var size$1 = 0;
			function extractEntry(value, key) {
				this[index] = value;
				this[index + size$1] = key;
				index++;
			}
			return function mapToEntries$1(map$1) {
				size$1 = map$1.size;
				index = 0;
				var ret$1 = new Array(map$1.size * 2);
				map$1.forEach(extractEntry, ret$1);
				return ret$1;
			};
		})();
		var entriesToMap = function(entries) {
			var ret$1 = new Es6Map();
			var length = entries.length / 2 | 0;
			for (var i$2 = 0; i$2 < length; ++i$2) {
				var key = entries[length + i$2];
				var value = entries[i$2];
				ret$1.set(key, value);
			}
			return ret$1;
		};
		function PropertiesPromiseArray(obj) {
			var isMap = false;
			var entries;
			if (Es6Map !== void 0 && obj instanceof Es6Map) {
				entries = mapToEntries(obj);
				isMap = true;
			} else {
				var keys$1 = es5$3.keys(obj);
				var len$1 = keys$1.length;
				entries = new Array(len$1 * 2);
				for (var i$2 = 0; i$2 < len$1; ++i$2) {
					var key = keys$1[i$2];
					entries[i$2] = obj[key];
					entries[i$2 + len$1] = key;
				}
			}
			this.constructor$(entries);
			this._isMap = isMap;
			this._init$(void 0, -3);
		}
		util$4.inherits(PropertiesPromiseArray, PromiseArray);
		PropertiesPromiseArray.prototype._init = function() {};
		PropertiesPromiseArray.prototype._promiseFulfilled = function(value, index) {
			this._values[index] = value;
			if (++this._totalResolved >= this._length) {
				var val;
				if (this._isMap) val = entriesToMap(this._values);
				else {
					val = {};
					var keyOffset = this.length();
					for (var i$2 = 0, len$1 = this.length(); i$2 < len$1; ++i$2) val[this._values[i$2 + keyOffset]] = this._values[i$2];
				}
				this._resolve(val);
				return true;
			}
			return false;
		};
		PropertiesPromiseArray.prototype.shouldCopyValues = function() {
			return false;
		};
		PropertiesPromiseArray.prototype.getActualLength = function(len$1) {
			return len$1 >> 1;
		};
		function props(promises$8) {
			var ret$1;
			var castValue = tryConvertToPromise(promises$8);
			if (!isObject$2(castValue)) return apiRejection("cannot await properties of a non-object\n\n    See http://goo.gl/MqrFmX\n");
			else if (castValue instanceof Promise$1) ret$1 = castValue._then(Promise$1.props, void 0, void 0, void 0, void 0);
			else ret$1 = new PropertiesPromiseArray(castValue).promise();
			if (castValue instanceof Promise$1) ret$1._propagateFrom(castValue, 2);
			return ret$1;
		}
		Promise$1.prototype.props = function() {
			return props(this);
		};
		Promise$1.props = function(promises$8) {
			return props(promises$8);
		};
	};
}) });

//#endregion
//#region node_modules/bluebird/js/release/race.js
var require_race = /* @__PURE__ */ __commonJS({ "node_modules/bluebird/js/release/race.js": ((exports, module) => {
	module.exports = function(Promise$1, INTERNAL, tryConvertToPromise, apiRejection) {
		var util$4 = require_util();
		var raceLater = function(promise) {
			return promise.then(function(array) {
				return race(array, promise);
			});
		};
		function race(promises$8, parent) {
			var maybePromise = tryConvertToPromise(promises$8);
			if (maybePromise instanceof Promise$1) return raceLater(maybePromise);
			else {
				promises$8 = util$4.asArray(promises$8);
				if (promises$8 === null) return apiRejection("expecting an array or an iterable object but got " + util$4.classString(promises$8));
			}
			var ret$1 = new Promise$1(INTERNAL);
			if (parent !== void 0) ret$1._propagateFrom(parent, 3);
			var fulfill = ret$1._fulfill;
			var reject$1 = ret$1._reject;
			for (var i$2 = 0, len$1 = promises$8.length; i$2 < len$1; ++i$2) {
				var val = promises$8[i$2];
				if (val === void 0 && !(i$2 in promises$8)) continue;
				Promise$1.cast(val)._then(fulfill, reject$1, void 0, ret$1, null);
			}
			return ret$1;
		}
		Promise$1.race = function(promises$8) {
			return race(promises$8, void 0);
		};
		Promise$1.prototype.race = function() {
			return race(this, void 0);
		};
	};
}) });

//#endregion
//#region node_modules/bluebird/js/release/reduce.js
var require_reduce = /* @__PURE__ */ __commonJS({ "node_modules/bluebird/js/release/reduce.js": ((exports, module) => {
	module.exports = function(Promise$1, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug) {
		var getDomain = Promise$1._getDomain;
		var util$4 = require_util();
		var tryCatch$1 = util$4.tryCatch;
		function ReductionPromiseArray(promises$8, fn, initialValue, _each) {
			this.constructor$(promises$8);
			var domain = getDomain();
			this._fn = domain === null ? fn : util$4.domainBind(domain, fn);
			if (initialValue !== void 0) {
				initialValue = Promise$1.resolve(initialValue);
				initialValue._attachCancellationCallback(this);
			}
			this._initialValue = initialValue;
			this._currentCancellable = null;
			if (_each === INTERNAL) this._eachValues = Array(this._length);
			else if (_each === 0) this._eachValues = null;
			else this._eachValues = void 0;
			this._promise._captureStackTrace();
			this._init$(void 0, -5);
		}
		util$4.inherits(ReductionPromiseArray, PromiseArray);
		ReductionPromiseArray.prototype._gotAccum = function(accum) {
			if (this._eachValues !== void 0 && this._eachValues !== null && accum !== INTERNAL) this._eachValues.push(accum);
		};
		ReductionPromiseArray.prototype._eachComplete = function(value) {
			if (this._eachValues !== null) this._eachValues.push(value);
			return this._eachValues;
		};
		ReductionPromiseArray.prototype._init = function() {};
		ReductionPromiseArray.prototype._resolveEmptyArray = function() {
			this._resolve(this._eachValues !== void 0 ? this._eachValues : this._initialValue);
		};
		ReductionPromiseArray.prototype.shouldCopyValues = function() {
			return false;
		};
		ReductionPromiseArray.prototype._resolve = function(value) {
			this._promise._resolveCallback(value);
			this._values = null;
		};
		ReductionPromiseArray.prototype._resultCancelled = function(sender) {
			if (sender === this._initialValue) return this._cancel();
			if (this._isResolved()) return;
			this._resultCancelled$();
			if (this._currentCancellable instanceof Promise$1) this._currentCancellable.cancel();
			if (this._initialValue instanceof Promise$1) this._initialValue.cancel();
		};
		ReductionPromiseArray.prototype._iterate = function(values$1) {
			this._values = values$1;
			var value;
			var i$2;
			var length = values$1.length;
			if (this._initialValue !== void 0) {
				value = this._initialValue;
				i$2 = 0;
			} else {
				value = Promise$1.resolve(values$1[0]);
				i$2 = 1;
			}
			this._currentCancellable = value;
			if (!value.isRejected()) for (; i$2 < length; ++i$2) {
				var ctx = {
					accum: null,
					value: values$1[i$2],
					index: i$2,
					length,
					array: this
				};
				value = value._then(gotAccum, void 0, void 0, ctx, void 0);
			}
			if (this._eachValues !== void 0) value = value._then(this._eachComplete, void 0, void 0, this, void 0);
			value._then(completed, completed, void 0, value, this);
		};
		Promise$1.prototype.reduce = function(fn, initialValue) {
			return reduce(this, fn, initialValue, null);
		};
		Promise$1.reduce = function(promises$8, fn, initialValue, _each) {
			return reduce(promises$8, fn, initialValue, _each);
		};
		function completed(valueOrReason, array) {
			if (this.isFulfilled()) array._resolve(valueOrReason);
			else array._reject(valueOrReason);
		}
		function reduce(promises$8, fn, initialValue, _each) {
			if (typeof fn !== "function") return apiRejection("expecting a function but got " + util$4.classString(fn));
			return new ReductionPromiseArray(promises$8, fn, initialValue, _each).promise();
		}
		function gotAccum(accum) {
			this.accum = accum;
			this.array._gotAccum(accum);
			var value = tryConvertToPromise(this.value, this.array._promise);
			if (value instanceof Promise$1) {
				this.array._currentCancellable = value;
				return value._then(gotValue, void 0, void 0, this, void 0);
			} else return gotValue.call(this, value);
		}
		function gotValue(value) {
			var array = this.array;
			var promise = array._promise;
			var fn = tryCatch$1(array._fn);
			promise._pushContext();
			var ret$1;
			if (array._eachValues !== void 0) ret$1 = fn.call(promise._boundValue(), value, this.index, this.length);
			else ret$1 = fn.call(promise._boundValue(), this.accum, value, this.index, this.length);
			if (ret$1 instanceof Promise$1) array._currentCancellable = ret$1;
			var promiseCreated = promise._popContext();
			debug.checkForgottenReturns(ret$1, promiseCreated, array._eachValues !== void 0 ? "Promise.each" : "Promise.reduce", promise);
			return ret$1;
		}
	};
}) });

//#endregion
//#region node_modules/bluebird/js/release/settle.js
var require_settle = /* @__PURE__ */ __commonJS({ "node_modules/bluebird/js/release/settle.js": ((exports, module) => {
	module.exports = function(Promise$1, PromiseArray, debug) {
		var PromiseInspection = Promise$1.PromiseInspection;
		var util$4 = require_util();
		function SettledPromiseArray(values$1) {
			this.constructor$(values$1);
		}
		util$4.inherits(SettledPromiseArray, PromiseArray);
		SettledPromiseArray.prototype._promiseResolved = function(index, inspection) {
			this._values[index] = inspection;
			if (++this._totalResolved >= this._length) {
				this._resolve(this._values);
				return true;
			}
			return false;
		};
		SettledPromiseArray.prototype._promiseFulfilled = function(value, index) {
			var ret$1 = new PromiseInspection();
			ret$1._bitField = 33554432;
			ret$1._settledValueField = value;
			return this._promiseResolved(index, ret$1);
		};
		SettledPromiseArray.prototype._promiseRejected = function(reason, index) {
			var ret$1 = new PromiseInspection();
			ret$1._bitField = 16777216;
			ret$1._settledValueField = reason;
			return this._promiseResolved(index, ret$1);
		};
		Promise$1.settle = function(promises$8) {
			debug.deprecated(".settle()", ".reflect()");
			return new SettledPromiseArray(promises$8).promise();
		};
		Promise$1.prototype.settle = function() {
			return Promise$1.settle(this);
		};
	};
}) });

//#endregion
//#region node_modules/bluebird/js/release/some.js
var require_some = /* @__PURE__ */ __commonJS({ "node_modules/bluebird/js/release/some.js": ((exports, module) => {
	module.exports = function(Promise$1, PromiseArray, apiRejection) {
		var util$4 = require_util();
		var RangeError$1 = require_errors$1().RangeError;
		var AggregateError$1 = require_errors$1().AggregateError;
		var isArray = util$4.isArray;
		var CANCELLATION = {};
		function SomePromiseArray(values$1) {
			this.constructor$(values$1);
			this._howMany = 0;
			this._unwrap = false;
			this._initialized = false;
		}
		util$4.inherits(SomePromiseArray, PromiseArray);
		SomePromiseArray.prototype._init = function() {
			if (!this._initialized) return;
			if (this._howMany === 0) {
				this._resolve([]);
				return;
			}
			this._init$(void 0, -5);
			var isArrayResolved = isArray(this._values);
			if (!this._isResolved() && isArrayResolved && this._howMany > this._canPossiblyFulfill()) this._reject(this._getRangeError(this.length()));
		};
		SomePromiseArray.prototype.init = function() {
			this._initialized = true;
			this._init();
		};
		SomePromiseArray.prototype.setUnwrap = function() {
			this._unwrap = true;
		};
		SomePromiseArray.prototype.howMany = function() {
			return this._howMany;
		};
		SomePromiseArray.prototype.setHowMany = function(count) {
			this._howMany = count;
		};
		SomePromiseArray.prototype._promiseFulfilled = function(value) {
			this._addFulfilled(value);
			if (this._fulfilled() === this.howMany()) {
				this._values.length = this.howMany();
				if (this.howMany() === 1 && this._unwrap) this._resolve(this._values[0]);
				else this._resolve(this._values);
				return true;
			}
			return false;
		};
		SomePromiseArray.prototype._promiseRejected = function(reason) {
			this._addRejected(reason);
			return this._checkOutcome();
		};
		SomePromiseArray.prototype._promiseCancelled = function() {
			if (this._values instanceof Promise$1 || this._values == null) return this._cancel();
			this._addRejected(CANCELLATION);
			return this._checkOutcome();
		};
		SomePromiseArray.prototype._checkOutcome = function() {
			if (this.howMany() > this._canPossiblyFulfill()) {
				var e = new AggregateError$1();
				for (var i$2 = this.length(); i$2 < this._values.length; ++i$2) if (this._values[i$2] !== CANCELLATION) e.push(this._values[i$2]);
				if (e.length > 0) this._reject(e);
				else this._cancel();
				return true;
			}
			return false;
		};
		SomePromiseArray.prototype._fulfilled = function() {
			return this._totalResolved;
		};
		SomePromiseArray.prototype._rejected = function() {
			return this._values.length - this.length();
		};
		SomePromiseArray.prototype._addRejected = function(reason) {
			this._values.push(reason);
		};
		SomePromiseArray.prototype._addFulfilled = function(value) {
			this._values[this._totalResolved++] = value;
		};
		SomePromiseArray.prototype._canPossiblyFulfill = function() {
			return this.length() - this._rejected();
		};
		SomePromiseArray.prototype._getRangeError = function(count) {
			var message = "Input array must contain at least " + this._howMany + " items but contains only " + count + " items";
			return new RangeError$1(message);
		};
		SomePromiseArray.prototype._resolveEmptyArray = function() {
			this._reject(this._getRangeError(0));
		};
		function some$1(promises$8, howMany) {
			if ((howMany | 0) !== howMany || howMany < 0) return apiRejection("expecting a positive integer\n\n    See http://goo.gl/MqrFmX\n");
			var ret$1 = new SomePromiseArray(promises$8);
			var promise = ret$1.promise();
			ret$1.setHowMany(howMany);
			ret$1.init();
			return promise;
		}
		Promise$1.some = function(promises$8, howMany) {
			return some$1(promises$8, howMany);
		};
		Promise$1.prototype.some = function(howMany) {
			return some$1(this, howMany);
		};
		Promise$1._SomePromiseArray = SomePromiseArray;
	};
}) });

//#endregion
//#region node_modules/bluebird/js/release/filter.js
var require_filter = /* @__PURE__ */ __commonJS({ "node_modules/bluebird/js/release/filter.js": ((exports, module) => {
	module.exports = function(Promise$1, INTERNAL) {
		var PromiseMap = Promise$1.map;
		Promise$1.prototype.filter = function(fn, options$1) {
			return PromiseMap(this, fn, options$1, INTERNAL);
		};
		Promise$1.filter = function(promises$8, fn, options$1) {
			return PromiseMap(promises$8, fn, options$1, INTERNAL);
		};
	};
}) });

//#endregion
//#region node_modules/bluebird/js/release/each.js
var require_each = /* @__PURE__ */ __commonJS({ "node_modules/bluebird/js/release/each.js": ((exports, module) => {
	module.exports = function(Promise$1, INTERNAL) {
		var PromiseReduce = Promise$1.reduce;
		var PromiseAll = Promise$1.all;
		function promiseAllThis() {
			return PromiseAll(this);
		}
		function PromiseMapSeries(promises$8, fn) {
			return PromiseReduce(promises$8, fn, INTERNAL, INTERNAL);
		}
		Promise$1.prototype.each = function(fn) {
			return PromiseReduce(this, fn, INTERNAL, 0)._then(promiseAllThis, void 0, void 0, this, void 0);
		};
		Promise$1.prototype.mapSeries = function(fn) {
			return PromiseReduce(this, fn, INTERNAL, INTERNAL);
		};
		Promise$1.each = function(promises$8, fn) {
			return PromiseReduce(promises$8, fn, INTERNAL, 0)._then(promiseAllThis, void 0, void 0, promises$8, void 0);
		};
		Promise$1.mapSeries = PromiseMapSeries;
	};
}) });

//#endregion
//#region node_modules/bluebird/js/release/any.js
var require_any = /* @__PURE__ */ __commonJS({ "node_modules/bluebird/js/release/any.js": ((exports, module) => {
	module.exports = function(Promise$1) {
		var SomePromiseArray = Promise$1._SomePromiseArray;
		function any(promises$8) {
			var ret$1 = new SomePromiseArray(promises$8);
			var promise = ret$1.promise();
			ret$1.setHowMany(1);
			ret$1.setUnwrap();
			ret$1.init();
			return promise;
		}
		Promise$1.any = function(promises$8) {
			return any(promises$8);
		};
		Promise$1.prototype.any = function() {
			return any(this);
		};
	};
}) });

//#endregion
//#region node_modules/bluebird/js/release/promise.js
var require_promise = /* @__PURE__ */ __commonJS({ "node_modules/bluebird/js/release/promise.js": ((exports, module) => {
	module.exports = function() {
		var makeSelfResolutionError = function() {
			return new TypeError$1("circular promise resolution chain\n\n    See http://goo.gl/MqrFmX\n");
		};
		var reflectHandler = function() {
			return new Promise$1.PromiseInspection(this._target());
		};
		var apiRejection = function(msg) {
			return Promise$1.reject(new TypeError$1(msg));
		};
		function Proxyable() {}
		var UNDEFINED_BINDING = {};
		var util$4 = require_util();
		var getDomain;
		if (util$4.isNode) getDomain = function() {
			var ret$1 = process.domain;
			if (ret$1 === void 0) ret$1 = null;
			return ret$1;
		};
		else getDomain = function() {
			return null;
		};
		util$4.notEnumerableProp(Promise$1, "_getDomain", getDomain);
		var es5$3 = require_es5();
		var Async$1 = require_async();
		var async = new Async$1();
		es5$3.defineProperty(Promise$1, "_async", { value: async });
		var errors$1 = require_errors$1();
		var TypeError$1 = Promise$1.TypeError = errors$1.TypeError;
		Promise$1.RangeError = errors$1.RangeError;
		var CancellationError$1 = Promise$1.CancellationError = errors$1.CancellationError;
		Promise$1.TimeoutError = errors$1.TimeoutError;
		Promise$1.OperationalError = errors$1.OperationalError;
		Promise$1.RejectionError = errors$1.OperationalError;
		Promise$1.AggregateError = errors$1.AggregateError;
		var INTERNAL = function() {};
		var APPLY = {};
		var NEXT_FILTER = {};
		var tryConvertToPromise = require_thenables()(Promise$1, INTERNAL);
		var PromiseArray = require_promise_array()(Promise$1, INTERNAL, tryConvertToPromise, apiRejection, Proxyable);
		var Context = require_context()(Promise$1);
		var createContext = Context.create;
		var debug = require_debuggability()(Promise$1, Context);
		debug.CapturedTrace;
		var PassThroughHandlerContext = require_finally()(Promise$1, tryConvertToPromise);
		var catchFilter = require_catch_filter()(NEXT_FILTER);
		var nodebackForPromise$1 = require_nodeback();
		var errorObj$1 = util$4.errorObj;
		var tryCatch$1 = util$4.tryCatch;
		function check(self$1, executor) {
			if (typeof executor !== "function") throw new TypeError$1("expecting a function but got " + util$4.classString(executor));
			if (self$1.constructor !== Promise$1) throw new TypeError$1("the promise constructor cannot be invoked directly\n\n    See http://goo.gl/MqrFmX\n");
		}
		function Promise$1(executor) {
			this._bitField = 0;
			this._fulfillmentHandler0 = void 0;
			this._rejectionHandler0 = void 0;
			this._promise0 = void 0;
			this._receiver0 = void 0;
			if (executor !== INTERNAL) {
				check(this, executor);
				this._resolveFromExecutor(executor);
			}
			this._promiseCreated();
			this._fireEvent("promiseCreated", this);
		}
		Promise$1.prototype.toString = function() {
			return "[object Promise]";
		};
		Promise$1.prototype.caught = Promise$1.prototype["catch"] = function(fn) {
			var len$1 = arguments.length;
			if (len$1 > 1) {
				var catchInstances = new Array(len$1 - 1), j = 0, i$2;
				for (i$2 = 0; i$2 < len$1 - 1; ++i$2) {
					var item = arguments[i$2];
					if (util$4.isObject(item)) catchInstances[j++] = item;
					else return apiRejection("expecting an object but got A catch statement predicate " + util$4.classString(item));
				}
				catchInstances.length = j;
				fn = arguments[i$2];
				return this.then(void 0, catchFilter(catchInstances, fn, this));
			}
			return this.then(void 0, fn);
		};
		Promise$1.prototype.reflect = function() {
			return this._then(reflectHandler, reflectHandler, void 0, this, void 0);
		};
		Promise$1.prototype.then = function(didFulfill, didReject) {
			if (debug.warnings() && arguments.length > 0 && typeof didFulfill !== "function" && typeof didReject !== "function") {
				var msg = ".then() only accepts functions but was passed: " + util$4.classString(didFulfill);
				if (arguments.length > 1) msg += ", " + util$4.classString(didReject);
				this._warn(msg);
			}
			return this._then(didFulfill, didReject, void 0, void 0, void 0);
		};
		Promise$1.prototype.done = function(didFulfill, didReject) {
			this._then(didFulfill, didReject, void 0, void 0, void 0)._setIsFinal();
		};
		Promise$1.prototype.spread = function(fn) {
			if (typeof fn !== "function") return apiRejection("expecting a function but got " + util$4.classString(fn));
			return this.all()._then(fn, void 0, void 0, APPLY, void 0);
		};
		Promise$1.prototype.toJSON = function() {
			var ret$1 = {
				isFulfilled: false,
				isRejected: false,
				fulfillmentValue: void 0,
				rejectionReason: void 0
			};
			if (this.isFulfilled()) {
				ret$1.fulfillmentValue = this.value();
				ret$1.isFulfilled = true;
			} else if (this.isRejected()) {
				ret$1.rejectionReason = this.reason();
				ret$1.isRejected = true;
			}
			return ret$1;
		};
		Promise$1.prototype.all = function() {
			if (arguments.length > 0) this._warn(".all() was passed arguments but it does not take any");
			return new PromiseArray(this).promise();
		};
		Promise$1.prototype.error = function(fn) {
			return this.caught(util$4.originatesFromRejection, fn);
		};
		Promise$1.getNewLibraryCopy = module.exports;
		Promise$1.is = function(val) {
			return val instanceof Promise$1;
		};
		Promise$1.fromNode = Promise$1.fromCallback = function(fn) {
			var ret$1 = new Promise$1(INTERNAL);
			ret$1._captureStackTrace();
			var multiArgs = arguments.length > 1 ? !!Object(arguments[1]).multiArgs : false;
			var result$1 = tryCatch$1(fn)(nodebackForPromise$1(ret$1, multiArgs));
			if (result$1 === errorObj$1) ret$1._rejectCallback(result$1.e, true);
			if (!ret$1._isFateSealed()) ret$1._setAsyncGuaranteed();
			return ret$1;
		};
		Promise$1.all = function(promises$8) {
			return new PromiseArray(promises$8).promise();
		};
		Promise$1.cast = function(obj) {
			var ret$1 = tryConvertToPromise(obj);
			if (!(ret$1 instanceof Promise$1)) {
				ret$1 = new Promise$1(INTERNAL);
				ret$1._captureStackTrace();
				ret$1._setFulfilled();
				ret$1._rejectionHandler0 = obj;
			}
			return ret$1;
		};
		Promise$1.resolve = Promise$1.fulfilled = Promise$1.cast;
		Promise$1.reject = Promise$1.rejected = function(reason) {
			var ret$1 = new Promise$1(INTERNAL);
			ret$1._captureStackTrace();
			ret$1._rejectCallback(reason, true);
			return ret$1;
		};
		Promise$1.setScheduler = function(fn) {
			if (typeof fn !== "function") throw new TypeError$1("expecting a function but got " + util$4.classString(fn));
			return async.setScheduler(fn);
		};
		Promise$1.prototype._then = function(didFulfill, didReject, _$23, receiver, internalData) {
			var haveInternalData = internalData !== void 0;
			var promise = haveInternalData ? internalData : new Promise$1(INTERNAL);
			var target = this._target();
			var bitField = target._bitField;
			if (!haveInternalData) {
				promise._propagateFrom(this, 3);
				promise._captureStackTrace();
				if (receiver === void 0 && (this._bitField & 2097152) !== 0) if (!((bitField & 50397184) === 0)) receiver = this._boundValue();
				else receiver = target === this ? void 0 : this._boundTo;
				this._fireEvent("promiseChained", this, promise);
			}
			var domain = getDomain();
			if (!((bitField & 50397184) === 0)) {
				var handler, value, settler = target._settlePromiseCtx;
				if ((bitField & 33554432) !== 0) {
					value = target._rejectionHandler0;
					handler = didFulfill;
				} else if ((bitField & 16777216) !== 0) {
					value = target._fulfillmentHandler0;
					handler = didReject;
					target._unsetRejectionIsUnhandled();
				} else {
					settler = target._settlePromiseLateCancellationObserver;
					value = new CancellationError$1("late cancellation observer");
					target._attachExtraTrace(value);
					handler = didReject;
				}
				async.invoke(settler, target, {
					handler: domain === null ? handler : typeof handler === "function" && util$4.domainBind(domain, handler),
					promise,
					receiver,
					value
				});
			} else target._addCallbacks(didFulfill, didReject, promise, receiver, domain);
			return promise;
		};
		Promise$1.prototype._length = function() {
			return this._bitField & 65535;
		};
		Promise$1.prototype._isFateSealed = function() {
			return (this._bitField & 117506048) !== 0;
		};
		Promise$1.prototype._isFollowing = function() {
			return (this._bitField & 67108864) === 67108864;
		};
		Promise$1.prototype._setLength = function(len$1) {
			this._bitField = this._bitField & -65536 | len$1 & 65535;
		};
		Promise$1.prototype._setFulfilled = function() {
			this._bitField = this._bitField | 33554432;
			this._fireEvent("promiseFulfilled", this);
		};
		Promise$1.prototype._setRejected = function() {
			this._bitField = this._bitField | 16777216;
			this._fireEvent("promiseRejected", this);
		};
		Promise$1.prototype._setFollowing = function() {
			this._bitField = this._bitField | 67108864;
			this._fireEvent("promiseResolved", this);
		};
		Promise$1.prototype._setIsFinal = function() {
			this._bitField = this._bitField | 4194304;
		};
		Promise$1.prototype._isFinal = function() {
			return (this._bitField & 4194304) > 0;
		};
		Promise$1.prototype._unsetCancelled = function() {
			this._bitField = this._bitField & -65537;
		};
		Promise$1.prototype._setCancelled = function() {
			this._bitField = this._bitField | 65536;
			this._fireEvent("promiseCancelled", this);
		};
		Promise$1.prototype._setWillBeCancelled = function() {
			this._bitField = this._bitField | 8388608;
		};
		Promise$1.prototype._setAsyncGuaranteed = function() {
			if (async.hasCustomScheduler()) return;
			this._bitField = this._bitField | 134217728;
		};
		Promise$1.prototype._receiverAt = function(index) {
			var ret$1 = index === 0 ? this._receiver0 : this[index * 4 - 4 + 3];
			if (ret$1 === UNDEFINED_BINDING) return;
			else if (ret$1 === void 0 && this._isBound()) return this._boundValue();
			return ret$1;
		};
		Promise$1.prototype._promiseAt = function(index) {
			return this[index * 4 - 4 + 2];
		};
		Promise$1.prototype._fulfillmentHandlerAt = function(index) {
			return this[index * 4 - 4 + 0];
		};
		Promise$1.prototype._rejectionHandlerAt = function(index) {
			return this[index * 4 - 4 + 1];
		};
		Promise$1.prototype._boundValue = function() {};
		Promise$1.prototype._migrateCallback0 = function(follower) {
			follower._bitField;
			var fulfill = follower._fulfillmentHandler0;
			var reject$1 = follower._rejectionHandler0;
			var promise = follower._promise0;
			var receiver = follower._receiverAt(0);
			if (receiver === void 0) receiver = UNDEFINED_BINDING;
			this._addCallbacks(fulfill, reject$1, promise, receiver, null);
		};
		Promise$1.prototype._migrateCallbackAt = function(follower, index) {
			var fulfill = follower._fulfillmentHandlerAt(index);
			var reject$1 = follower._rejectionHandlerAt(index);
			var promise = follower._promiseAt(index);
			var receiver = follower._receiverAt(index);
			if (receiver === void 0) receiver = UNDEFINED_BINDING;
			this._addCallbacks(fulfill, reject$1, promise, receiver, null);
		};
		Promise$1.prototype._addCallbacks = function(fulfill, reject$1, promise, receiver, domain) {
			var index = this._length();
			if (index >= 65531) {
				index = 0;
				this._setLength(0);
			}
			if (index === 0) {
				this._promise0 = promise;
				this._receiver0 = receiver;
				if (typeof fulfill === "function") this._fulfillmentHandler0 = domain === null ? fulfill : util$4.domainBind(domain, fulfill);
				if (typeof reject$1 === "function") this._rejectionHandler0 = domain === null ? reject$1 : util$4.domainBind(domain, reject$1);
			} else {
				var base = index * 4 - 4;
				this[base + 2] = promise;
				this[base + 3] = receiver;
				if (typeof fulfill === "function") this[base + 0] = domain === null ? fulfill : util$4.domainBind(domain, fulfill);
				if (typeof reject$1 === "function") this[base + 1] = domain === null ? reject$1 : util$4.domainBind(domain, reject$1);
			}
			this._setLength(index + 1);
			return index;
		};
		Promise$1.prototype._proxy = function(proxyable, arg) {
			this._addCallbacks(void 0, void 0, arg, proxyable, null);
		};
		Promise$1.prototype._resolveCallback = function(value, shouldBind) {
			if ((this._bitField & 117506048) !== 0) return;
			if (value === this) return this._rejectCallback(makeSelfResolutionError(), false);
			var maybePromise = tryConvertToPromise(value, this);
			if (!(maybePromise instanceof Promise$1)) return this._fulfill(value);
			if (shouldBind) this._propagateFrom(maybePromise, 2);
			var promise = maybePromise._target();
			if (promise === this) {
				this._reject(makeSelfResolutionError());
				return;
			}
			var bitField = promise._bitField;
			if ((bitField & 50397184) === 0) {
				var len$1 = this._length();
				if (len$1 > 0) promise._migrateCallback0(this);
				for (var i$2 = 1; i$2 < len$1; ++i$2) promise._migrateCallbackAt(this, i$2);
				this._setFollowing();
				this._setLength(0);
				this._setFollowee(promise);
			} else if ((bitField & 33554432) !== 0) this._fulfill(promise._value());
			else if ((bitField & 16777216) !== 0) this._reject(promise._reason());
			else {
				var reason = new CancellationError$1("late cancellation observer");
				promise._attachExtraTrace(reason);
				this._reject(reason);
			}
		};
		Promise$1.prototype._rejectCallback = function(reason, synchronous, ignoreNonErrorWarnings) {
			var trace = util$4.ensureErrorObject(reason);
			var hasStack = trace === reason;
			if (!hasStack && !ignoreNonErrorWarnings && debug.warnings()) {
				var message = "a promise was rejected with a non-error: " + util$4.classString(reason);
				this._warn(message, true);
			}
			this._attachExtraTrace(trace, synchronous ? hasStack : false);
			this._reject(reason);
		};
		Promise$1.prototype._resolveFromExecutor = function(executor) {
			var promise = this;
			this._captureStackTrace();
			this._pushContext();
			var synchronous = true;
			var r = this._execute(executor, function(value) {
				promise._resolveCallback(value);
			}, function(reason) {
				promise._rejectCallback(reason, synchronous);
			});
			synchronous = false;
			this._popContext();
			if (r !== void 0) promise._rejectCallback(r, true);
		};
		Promise$1.prototype._settlePromiseFromHandler = function(handler, receiver, value, promise) {
			var bitField = promise._bitField;
			if ((bitField & 65536) !== 0) return;
			promise._pushContext();
			var x;
			if (receiver === APPLY) if (!value || typeof value.length !== "number") {
				x = errorObj$1;
				x.e = new TypeError$1("cannot .spread() a non-array: " + util$4.classString(value));
			} else x = tryCatch$1(handler).apply(this._boundValue(), value);
			else x = tryCatch$1(handler).call(receiver, value);
			var promiseCreated = promise._popContext();
			bitField = promise._bitField;
			if ((bitField & 65536) !== 0) return;
			if (x === NEXT_FILTER) promise._reject(value);
			else if (x === errorObj$1) promise._rejectCallback(x.e, false);
			else {
				debug.checkForgottenReturns(x, promiseCreated, "", promise, this);
				promise._resolveCallback(x);
			}
		};
		Promise$1.prototype._target = function() {
			var ret$1 = this;
			while (ret$1._isFollowing()) ret$1 = ret$1._followee();
			return ret$1;
		};
		Promise$1.prototype._followee = function() {
			return this._rejectionHandler0;
		};
		Promise$1.prototype._setFollowee = function(promise) {
			this._rejectionHandler0 = promise;
		};
		Promise$1.prototype._settlePromise = function(promise, handler, receiver, value) {
			var isPromise = promise instanceof Promise$1;
			var bitField = this._bitField;
			var asyncGuaranteed = (bitField & 134217728) !== 0;
			if ((bitField & 65536) !== 0) {
				if (isPromise) promise._invokeInternalOnCancel();
				if (receiver instanceof PassThroughHandlerContext && receiver.isFinallyHandler()) {
					receiver.cancelPromise = promise;
					if (tryCatch$1(handler).call(receiver, value) === errorObj$1) promise._reject(errorObj$1.e);
				} else if (handler === reflectHandler) promise._fulfill(reflectHandler.call(receiver));
				else if (receiver instanceof Proxyable) receiver._promiseCancelled(promise);
				else if (isPromise || promise instanceof PromiseArray) promise._cancel();
				else receiver.cancel();
			} else if (typeof handler === "function") if (!isPromise) handler.call(receiver, value, promise);
			else {
				if (asyncGuaranteed) promise._setAsyncGuaranteed();
				this._settlePromiseFromHandler(handler, receiver, value, promise);
			}
			else if (receiver instanceof Proxyable) {
				if (!receiver._isResolved()) if ((bitField & 33554432) !== 0) receiver._promiseFulfilled(value, promise);
				else receiver._promiseRejected(value, promise);
			} else if (isPromise) {
				if (asyncGuaranteed) promise._setAsyncGuaranteed();
				if ((bitField & 33554432) !== 0) promise._fulfill(value);
				else promise._reject(value);
			}
		};
		Promise$1.prototype._settlePromiseLateCancellationObserver = function(ctx) {
			var handler = ctx.handler;
			var promise = ctx.promise;
			var receiver = ctx.receiver;
			var value = ctx.value;
			if (typeof handler === "function") if (!(promise instanceof Promise$1)) handler.call(receiver, value, promise);
			else this._settlePromiseFromHandler(handler, receiver, value, promise);
			else if (promise instanceof Promise$1) promise._reject(value);
		};
		Promise$1.prototype._settlePromiseCtx = function(ctx) {
			this._settlePromise(ctx.promise, ctx.handler, ctx.receiver, ctx.value);
		};
		Promise$1.prototype._settlePromise0 = function(handler, value, bitField) {
			var promise = this._promise0;
			var receiver = this._receiverAt(0);
			this._promise0 = void 0;
			this._receiver0 = void 0;
			this._settlePromise(promise, handler, receiver, value);
		};
		Promise$1.prototype._clearCallbackDataAtIndex = function(index) {
			var base = index * 4 - 4;
			this[base + 2] = this[base + 3] = this[base + 0] = this[base + 1] = void 0;
		};
		Promise$1.prototype._fulfill = function(value) {
			var bitField = this._bitField;
			if ((bitField & 117506048) >>> 16) return;
			if (value === this) {
				var err = makeSelfResolutionError();
				this._attachExtraTrace(err);
				return this._reject(err);
			}
			this._setFulfilled();
			this._rejectionHandler0 = value;
			if ((bitField & 65535) > 0) if ((bitField & 134217728) !== 0) this._settlePromises();
			else async.settlePromises(this);
		};
		Promise$1.prototype._reject = function(reason) {
			var bitField = this._bitField;
			if ((bitField & 117506048) >>> 16) return;
			this._setRejected();
			this._fulfillmentHandler0 = reason;
			if (this._isFinal()) return async.fatalError(reason, util$4.isNode);
			if ((bitField & 65535) > 0) async.settlePromises(this);
			else this._ensurePossibleRejectionHandled();
		};
		Promise$1.prototype._fulfillPromises = function(len$1, value) {
			for (var i$2 = 1; i$2 < len$1; i$2++) {
				var handler = this._fulfillmentHandlerAt(i$2);
				var promise = this._promiseAt(i$2);
				var receiver = this._receiverAt(i$2);
				this._clearCallbackDataAtIndex(i$2);
				this._settlePromise(promise, handler, receiver, value);
			}
		};
		Promise$1.prototype._rejectPromises = function(len$1, reason) {
			for (var i$2 = 1; i$2 < len$1; i$2++) {
				var handler = this._rejectionHandlerAt(i$2);
				var promise = this._promiseAt(i$2);
				var receiver = this._receiverAt(i$2);
				this._clearCallbackDataAtIndex(i$2);
				this._settlePromise(promise, handler, receiver, reason);
			}
		};
		Promise$1.prototype._settlePromises = function() {
			var bitField = this._bitField;
			var len$1 = bitField & 65535;
			if (len$1 > 0) {
				if ((bitField & 16842752) !== 0) {
					var reason = this._fulfillmentHandler0;
					this._settlePromise0(this._rejectionHandler0, reason, bitField);
					this._rejectPromises(len$1, reason);
				} else {
					var value = this._rejectionHandler0;
					this._settlePromise0(this._fulfillmentHandler0, value, bitField);
					this._fulfillPromises(len$1, value);
				}
				this._setLength(0);
			}
			this._clearCancellationData();
		};
		Promise$1.prototype._settledValue = function() {
			var bitField = this._bitField;
			if ((bitField & 33554432) !== 0) return this._rejectionHandler0;
			else if ((bitField & 16777216) !== 0) return this._fulfillmentHandler0;
		};
		function deferResolve(v) {
			this.promise._resolveCallback(v);
		}
		function deferReject(v) {
			this.promise._rejectCallback(v, false);
		}
		Promise$1.defer = Promise$1.pending = function() {
			debug.deprecated("Promise.defer", "new Promise");
			return {
				promise: new Promise$1(INTERNAL),
				resolve: deferResolve,
				reject: deferReject
			};
		};
		util$4.notEnumerableProp(Promise$1, "_makeSelfResolutionError", makeSelfResolutionError);
		require_method()(Promise$1, INTERNAL, tryConvertToPromise, apiRejection, debug);
		require_bind()(Promise$1, INTERNAL, tryConvertToPromise, debug);
		require_cancel()(Promise$1, PromiseArray, apiRejection, debug);
		require_direct_resolve()(Promise$1);
		require_synchronous_inspection()(Promise$1);
		require_join()(Promise$1, PromiseArray, tryConvertToPromise, INTERNAL, async, getDomain);
		Promise$1.Promise = Promise$1;
		Promise$1.version = "3.4.7";
		require_map()(Promise$1, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug);
		require_call_get()(Promise$1);
		require_using()(Promise$1, apiRejection, tryConvertToPromise, createContext, INTERNAL, debug);
		require_timers()(Promise$1, INTERNAL, debug);
		require_generators()(Promise$1, apiRejection, INTERNAL, tryConvertToPromise, Proxyable, debug);
		require_nodeify()(Promise$1);
		require_promisify()(Promise$1, INTERNAL);
		require_props()(Promise$1, PromiseArray, tryConvertToPromise, apiRejection);
		require_race()(Promise$1, INTERNAL, tryConvertToPromise, apiRejection);
		require_reduce()(Promise$1, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug);
		require_settle()(Promise$1, PromiseArray, debug);
		require_some()(Promise$1, PromiseArray, apiRejection);
		require_filter()(Promise$1, INTERNAL);
		require_each()(Promise$1, INTERNAL);
		require_any()(Promise$1);
		util$4.toFastProperties(Promise$1);
		util$4.toFastProperties(Promise$1.prototype);
		function fillTypes(value) {
			var p = new Promise$1(INTERNAL);
			p._fulfillmentHandler0 = value;
			p._rejectionHandler0 = value;
			p._promise0 = value;
			p._receiver0 = value;
		}
		fillTypes({ a: 1 });
		fillTypes({ b: 2 });
		fillTypes({ c: 3 });
		fillTypes(1);
		fillTypes(function() {});
		fillTypes(void 0);
		fillTypes(false);
		fillTypes(new Promise$1(INTERNAL));
		debug.setBounds(Async$1.firstLineError, util$4.lastLineError);
		return Promise$1;
	};
}) });

//#endregion
//#region node_modules/mammoth/lib/promises.js
var require_promises = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/lib/promises.js": ((exports) => {
	var _$20 = (init_index_all(), __toCommonJS(index_all_exports));
	var bluebird = require_promise()();
	exports.defer = defer;
	exports.when = bluebird.resolve;
	exports.resolve = bluebird.resolve;
	exports.all = bluebird.all;
	exports.props = bluebird.props;
	exports.reject = bluebird.reject;
	exports.promisify = bluebird.promisify;
	exports.mapSeries = bluebird.mapSeries;
	exports.attempt = bluebird.attempt;
	exports.nfcall = function(func) {
		var args = Array.prototype.slice.call(arguments, 1);
		return bluebird.promisify(func).apply(null, args);
	};
	bluebird.prototype.fail = bluebird.prototype.caught;
	bluebird.prototype.also = function(func) {
		return this.then(function(value) {
			var returnValue = _$20.extend({}, value, func(value));
			return bluebird.props(returnValue);
		});
	};
	function defer() {
		var resolve;
		var reject$1;
		var promise = new bluebird.Promise(function(resolveArg, rejectArg) {
			resolve = resolveArg;
			reject$1 = rejectArg;
		});
		return {
			resolve,
			reject: reject$1,
			promise
		};
	}
}) });

//#endregion
//#region node_modules/mammoth/lib/documents.js
var require_documents = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/lib/documents.js": ((exports) => {
	var _$19 = (init_index_all(), __toCommonJS(index_all_exports));
	var types = exports.types = {
		document: "document",
		paragraph: "paragraph",
		run: "run",
		text: "text",
		tab: "tab",
		checkbox: "checkbox",
		hyperlink: "hyperlink",
		noteReference: "noteReference",
		image: "image",
		note: "note",
		commentReference: "commentReference",
		comment: "comment",
		table: "table",
		tableRow: "tableRow",
		tableCell: "tableCell",
		"break": "break",
		bookmarkStart: "bookmarkStart"
	};
	function Document$1(children, options$1) {
		options$1 = options$1 || {};
		return {
			type: types.document,
			children,
			notes: options$1.notes || new Notes({}),
			comments: options$1.comments || []
		};
	}
	function Paragraph(children, properties) {
		properties = properties || {};
		var indent = properties.indent || {};
		return {
			type: types.paragraph,
			children,
			styleId: properties.styleId || null,
			styleName: properties.styleName || null,
			numbering: properties.numbering || null,
			alignment: properties.alignment || null,
			indent: {
				start: indent.start || null,
				end: indent.end || null,
				firstLine: indent.firstLine || null,
				hanging: indent.hanging || null
			}
		};
	}
	function Run(children, properties) {
		properties = properties || {};
		return {
			type: types.run,
			children,
			styleId: properties.styleId || null,
			styleName: properties.styleName || null,
			isBold: !!properties.isBold,
			isUnderline: !!properties.isUnderline,
			isItalic: !!properties.isItalic,
			isStrikethrough: !!properties.isStrikethrough,
			isAllCaps: !!properties.isAllCaps,
			isSmallCaps: !!properties.isSmallCaps,
			verticalAlignment: properties.verticalAlignment || verticalAlignment.baseline,
			font: properties.font || null,
			fontSize: properties.fontSize || null,
			highlight: properties.highlight || null
		};
	}
	var verticalAlignment = {
		baseline: "baseline",
		superscript: "superscript",
		subscript: "subscript"
	};
	function Text$1(value) {
		return {
			type: types.text,
			value
		};
	}
	function Tab() {
		return { type: types.tab };
	}
	function Checkbox(options$1) {
		return {
			type: types.checkbox,
			checked: options$1.checked
		};
	}
	function Hyperlink(children, options$1) {
		return {
			type: types.hyperlink,
			children,
			href: options$1.href,
			anchor: options$1.anchor,
			targetFrame: options$1.targetFrame
		};
	}
	function NoteReference(options$1) {
		return {
			type: types.noteReference,
			noteType: options$1.noteType,
			noteId: options$1.noteId
		};
	}
	function Notes(notes) {
		this._notes = _$19.indexBy(notes, function(note) {
			return noteKey(note.noteType, note.noteId);
		});
	}
	Notes.prototype.resolve = function(reference) {
		return this.findNoteByKey(noteKey(reference.noteType, reference.noteId));
	};
	Notes.prototype.findNoteByKey = function(key) {
		return this._notes[key] || null;
	};
	function Note(options$1) {
		return {
			type: types.note,
			noteType: options$1.noteType,
			noteId: options$1.noteId,
			body: options$1.body
		};
	}
	function commentReference(options$1) {
		return {
			type: types.commentReference,
			commentId: options$1.commentId
		};
	}
	function comment(options$1) {
		return {
			type: types.comment,
			commentId: options$1.commentId,
			body: options$1.body,
			authorName: options$1.authorName,
			authorInitials: options$1.authorInitials
		};
	}
	function noteKey(noteType, id) {
		return noteType + "-" + id;
	}
	function Image(options$1) {
		return {
			type: types.image,
			read: function(encoding) {
				if (encoding) return options$1.readImage(encoding);
				else return options$1.readImage().then(function(arrayBuffer) {
					return Buffer.from(arrayBuffer);
				});
			},
			readAsArrayBuffer: function() {
				return options$1.readImage();
			},
			readAsBase64String: function() {
				return options$1.readImage("base64");
			},
			readAsBuffer: function() {
				return options$1.readImage().then(function(arrayBuffer) {
					return Buffer.from(arrayBuffer);
				});
			},
			altText: options$1.altText,
			contentType: options$1.contentType
		};
	}
	function Table(children, properties) {
		properties = properties || {};
		return {
			type: types.table,
			children,
			styleId: properties.styleId || null,
			styleName: properties.styleName || null
		};
	}
	function TableRow(children, options$1) {
		options$1 = options$1 || {};
		return {
			type: types.tableRow,
			children,
			isHeader: options$1.isHeader || false
		};
	}
	function TableCell(children, options$1) {
		options$1 = options$1 || {};
		return {
			type: types.tableCell,
			children,
			colSpan: options$1.colSpan == null ? 1 : options$1.colSpan,
			rowSpan: options$1.rowSpan == null ? 1 : options$1.rowSpan
		};
	}
	function Break(breakType) {
		return {
			type: types["break"],
			breakType
		};
	}
	function BookmarkStart(options$1) {
		return {
			type: types.bookmarkStart,
			name: options$1.name
		};
	}
	exports.document = exports.Document = Document$1;
	exports.paragraph = exports.Paragraph = Paragraph;
	exports.run = exports.Run = Run;
	exports.text = exports.Text = Text$1;
	exports.tab = exports.Tab = Tab;
	exports.checkbox = exports.Checkbox = Checkbox;
	exports.Hyperlink = Hyperlink;
	exports.noteReference = exports.NoteReference = NoteReference;
	exports.Notes = Notes;
	exports.Note = Note;
	exports.commentReference = commentReference;
	exports.comment = comment;
	exports.Image = Image;
	exports.Table = Table;
	exports.TableRow = TableRow;
	exports.TableCell = TableCell;
	exports.lineBreak = Break("line");
	exports.pageBreak = Break("page");
	exports.columnBreak = Break("column");
	exports.BookmarkStart = BookmarkStart;
	exports.verticalAlignment = verticalAlignment;
}) });

//#endregion
//#region node_modules/mammoth/lib/results.js
var require_results = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/lib/results.js": ((exports) => {
	var _$18 = (init_index_all(), __toCommonJS(index_all_exports));
	exports.Result = Result$7;
	exports.success = success;
	exports.warning = warning$1;
	exports.error = error;
	function Result$7(value, messages) {
		this.value = value;
		this.messages = messages || [];
	}
	Result$7.prototype.map = function(func) {
		return new Result$7(func(this.value), this.messages);
	};
	Result$7.prototype.flatMap = function(func) {
		var funcResult = func(this.value);
		return new Result$7(funcResult.value, combineMessages([this, funcResult]));
	};
	Result$7.prototype.flatMapThen = function(func) {
		var that = this;
		return func(this.value).then(function(otherResult) {
			return new Result$7(otherResult.value, combineMessages([that, otherResult]));
		});
	};
	Result$7.combine = function(results$4) {
		var values$1 = _$18.flatten(_$18.pluck(results$4, "value"));
		var messages = combineMessages(results$4);
		return new Result$7(values$1, messages);
	};
	function success(value) {
		return new Result$7(value, []);
	}
	function warning$1(message) {
		return {
			type: "warning",
			message
		};
	}
	function error(exception) {
		return {
			type: "error",
			message: exception.message,
			error: exception
		};
	}
	function combineMessages(results$4) {
		var messages = [];
		_$18.flatten(_$18.pluck(results$4, "messages"), true).forEach(function(message) {
			if (!containsMessage(messages, message)) messages.push(message);
		});
		return messages;
	}
	function containsMessage(messages, message) {
		return _$18.find(messages, isSameMessage.bind(null, message)) !== void 0;
	}
	function isSameMessage(first$1, second) {
		return first$1.type === second.type && first$1.message === second.message;
	}
}) });

//#endregion
//#region node_modules/base64-js/index.js
var require_base64_js = /* @__PURE__ */ __commonJS({ "node_modules/base64-js/index.js": ((exports) => {
	exports.byteLength = byteLength;
	exports.toByteArray = toByteArray;
	exports.fromByteArray = fromByteArray;
	var lookup = [];
	var revLookup = [];
	var Arr = typeof Uint8Array !== "undefined" ? Uint8Array : Array;
	var code = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
	for (var i = 0, len = code.length; i < len; ++i) {
		lookup[i] = code[i];
		revLookup[code.charCodeAt(i)] = i;
	}
	revLookup["-".charCodeAt(0)] = 62;
	revLookup["_".charCodeAt(0)] = 63;
	function getLens(b64) {
		var len$1 = b64.length;
		if (len$1 % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
		var validLen = b64.indexOf("=");
		if (validLen === -1) validLen = len$1;
		var placeHoldersLen = validLen === len$1 ? 0 : 4 - validLen % 4;
		return [validLen, placeHoldersLen];
	}
	function byteLength(b64) {
		var lens = getLens(b64);
		var validLen = lens[0];
		var placeHoldersLen = lens[1];
		return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
	}
	function _byteLength(b64, validLen, placeHoldersLen) {
		return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
	}
	function toByteArray(b64) {
		var tmp;
		var lens = getLens(b64);
		var validLen = lens[0];
		var placeHoldersLen = lens[1];
		var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));
		var curByte = 0;
		var len$1 = placeHoldersLen > 0 ? validLen - 4 : validLen;
		var i$2;
		for (i$2 = 0; i$2 < len$1; i$2 += 4) {
			tmp = revLookup[b64.charCodeAt(i$2)] << 18 | revLookup[b64.charCodeAt(i$2 + 1)] << 12 | revLookup[b64.charCodeAt(i$2 + 2)] << 6 | revLookup[b64.charCodeAt(i$2 + 3)];
			arr[curByte++] = tmp >> 16 & 255;
			arr[curByte++] = tmp >> 8 & 255;
			arr[curByte++] = tmp & 255;
		}
		if (placeHoldersLen === 2) {
			tmp = revLookup[b64.charCodeAt(i$2)] << 2 | revLookup[b64.charCodeAt(i$2 + 1)] >> 4;
			arr[curByte++] = tmp & 255;
		}
		if (placeHoldersLen === 1) {
			tmp = revLookup[b64.charCodeAt(i$2)] << 10 | revLookup[b64.charCodeAt(i$2 + 1)] << 4 | revLookup[b64.charCodeAt(i$2 + 2)] >> 2;
			arr[curByte++] = tmp >> 8 & 255;
			arr[curByte++] = tmp & 255;
		}
		return arr;
	}
	function tripletToBase64(num) {
		return lookup[num >> 18 & 63] + lookup[num >> 12 & 63] + lookup[num >> 6 & 63] + lookup[num & 63];
	}
	function encodeChunk(uint8, start, end) {
		var tmp;
		var output = [];
		for (var i$2 = start; i$2 < end; i$2 += 3) {
			tmp = (uint8[i$2] << 16 & 16711680) + (uint8[i$2 + 1] << 8 & 65280) + (uint8[i$2 + 2] & 255);
			output.push(tripletToBase64(tmp));
		}
		return output.join("");
	}
	function fromByteArray(uint8) {
		var tmp;
		var len$1 = uint8.length;
		var extraBytes = len$1 % 3;
		var parts = [];
		var maxChunkLength = 16383;
		for (var i$2 = 0, len2 = len$1 - extraBytes; i$2 < len2; i$2 += maxChunkLength) parts.push(encodeChunk(uint8, i$2, i$2 + maxChunkLength > len2 ? len2 : i$2 + maxChunkLength));
		if (extraBytes === 1) {
			tmp = uint8[len$1 - 1];
			parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 63] + "==");
		} else if (extraBytes === 2) {
			tmp = (uint8[len$1 - 2] << 8) + uint8[len$1 - 1];
			parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 63] + lookup[tmp << 2 & 63] + "=");
		}
		return parts.join("");
	}
}) });

//#endregion
//#region node_modules/jszip/dist/jszip.min.js
var require_jszip_min = /* @__PURE__ */ __commonJS({ "node_modules/jszip/dist/jszip.min.js": ((exports, module) => {
	/*!
	
	JSZip v3.10.1 - A JavaScript class for generating and reading zip files
	<http://stuartk.com/jszip>
	
	(c) 2009-2016 Stuart Knightley <stuart [at] stuartk.com>
	Dual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/main/LICENSE.markdown.
	
	JSZip uses the library pako released under the MIT license :
	https://github.com/nodeca/pako/blob/main/LICENSE
	*/
	(function(e) {
		if ("object" == typeof exports && "undefined" != typeof module) module.exports = e();
		else if ("function" == typeof define && define.amd) define([], e);
		else ("undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this).JSZip = e();
	})(function() {
		return function s(a, o, h) {
			function u(r, e$1) {
				if (!o[r]) {
					if (!a[r]) {
						var t = "function" == typeof __require && __require;
						if (!e$1 && t) return t(r, !0);
						if (l) return l(r, !0);
						var n = /* @__PURE__ */ new Error("Cannot find module '" + r + "'");
						throw n.code = "MODULE_NOT_FOUND", n;
					}
					var i$2 = o[r] = { exports: {} };
					a[r][0].call(i$2.exports, function(e$2) {
						var t$1 = a[r][1][e$2];
						return u(t$1 || e$2);
					}, i$2, i$2.exports, s, a, o, h);
				}
				return o[r].exports;
			}
			for (var l = "function" == typeof __require && __require, e = 0; e < h.length; e++) u(h[e]);
			return u;
		}({
			1: [function(e, t, r) {
				var d = e("./utils"), c = e("./support"), p = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
				r.encode = function(e$1) {
					for (var t$1, r$1, n, i$2, s, a, o, h = [], u = 0, l = e$1.length, f = l, c$1 = "string" !== d.getTypeOf(e$1); u < e$1.length;) f = l - u, n = c$1 ? (t$1 = e$1[u++], r$1 = u < l ? e$1[u++] : 0, u < l ? e$1[u++] : 0) : (t$1 = e$1.charCodeAt(u++), r$1 = u < l ? e$1.charCodeAt(u++) : 0, u < l ? e$1.charCodeAt(u++) : 0), i$2 = t$1 >> 2, s = (3 & t$1) << 4 | r$1 >> 4, a = 1 < f ? (15 & r$1) << 2 | n >> 6 : 64, o = 2 < f ? 63 & n : 64, h.push(p.charAt(i$2) + p.charAt(s) + p.charAt(a) + p.charAt(o));
					return h.join("");
				}, r.decode = function(e$1) {
					var t$1, r$1, n, i$2, s, a, o = 0, h = 0, u = "data:";
					if (e$1.substr(0, u.length) === u) throw new Error("Invalid base64 input, it looks like a data url.");
					var l, f = 3 * (e$1 = e$1.replace(/[^A-Za-z0-9+/=]/g, "")).length / 4;
					if (e$1.charAt(e$1.length - 1) === p.charAt(64) && f--, e$1.charAt(e$1.length - 2) === p.charAt(64) && f--, f % 1 != 0) throw new Error("Invalid base64 input, bad content length.");
					for (l = c.uint8array ? new Uint8Array(0 | f) : new Array(0 | f); o < e$1.length;) t$1 = p.indexOf(e$1.charAt(o++)) << 2 | (i$2 = p.indexOf(e$1.charAt(o++))) >> 4, r$1 = (15 & i$2) << 4 | (s = p.indexOf(e$1.charAt(o++))) >> 2, n = (3 & s) << 6 | (a = p.indexOf(e$1.charAt(o++))), l[h++] = t$1, 64 !== s && (l[h++] = r$1), 64 !== a && (l[h++] = n);
					return l;
				};
			}, {
				"./support": 30,
				"./utils": 32
			}],
			2: [function(e, t, r) {
				var n = e("./external"), i$2 = e("./stream/DataWorker"), s = e("./stream/Crc32Probe"), a = e("./stream/DataLengthProbe");
				function o(e$1, t$1, r$1, n$1, i$3) {
					this.compressedSize = e$1, this.uncompressedSize = t$1, this.crc32 = r$1, this.compression = n$1, this.compressedContent = i$3;
				}
				o.prototype = {
					getContentWorker: function() {
						var e$1 = new i$2(n.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new a("data_length")), t$1 = this;
						return e$1.on("end", function() {
							if (this.streamInfo.data_length !== t$1.uncompressedSize) throw new Error("Bug : uncompressed data size mismatch");
						}), e$1;
					},
					getCompressedWorker: function() {
						return new i$2(n.Promise.resolve(this.compressedContent)).withStreamInfo("compressedSize", this.compressedSize).withStreamInfo("uncompressedSize", this.uncompressedSize).withStreamInfo("crc32", this.crc32).withStreamInfo("compression", this.compression);
					}
				}, o.createWorkerFrom = function(e$1, t$1, r$1) {
					return e$1.pipe(new s()).pipe(new a("uncompressedSize")).pipe(t$1.compressWorker(r$1)).pipe(new a("compressedSize")).withStreamInfo("compression", t$1);
				}, t.exports = o;
			}, {
				"./external": 6,
				"./stream/Crc32Probe": 25,
				"./stream/DataLengthProbe": 26,
				"./stream/DataWorker": 27
			}],
			3: [function(e, t, r) {
				var n = e("./stream/GenericWorker");
				r.STORE = {
					magic: "\0\0",
					compressWorker: function() {
						return new n("STORE compression");
					},
					uncompressWorker: function() {
						return new n("STORE decompression");
					}
				}, r.DEFLATE = e("./flate");
			}, {
				"./flate": 7,
				"./stream/GenericWorker": 28
			}],
			4: [function(e, t, r) {
				var n = e("./utils");
				var o = function() {
					for (var e$1, t$1 = [], r$1 = 0; r$1 < 256; r$1++) {
						e$1 = r$1;
						for (var n$1 = 0; n$1 < 8; n$1++) e$1 = 1 & e$1 ? 3988292384 ^ e$1 >>> 1 : e$1 >>> 1;
						t$1[r$1] = e$1;
					}
					return t$1;
				}();
				t.exports = function(e$1, t$1) {
					return void 0 !== e$1 && e$1.length ? "string" !== n.getTypeOf(e$1) ? function(e$2, t$2, r$1, n$1) {
						var i$2 = o, s = n$1 + r$1;
						e$2 ^= -1;
						for (var a = n$1; a < s; a++) e$2 = e$2 >>> 8 ^ i$2[255 & (e$2 ^ t$2[a])];
						return -1 ^ e$2;
					}(0 | t$1, e$1, e$1.length, 0) : function(e$2, t$2, r$1, n$1) {
						var i$2 = o, s = n$1 + r$1;
						e$2 ^= -1;
						for (var a = n$1; a < s; a++) e$2 = e$2 >>> 8 ^ i$2[255 & (e$2 ^ t$2.charCodeAt(a))];
						return -1 ^ e$2;
					}(0 | t$1, e$1, e$1.length, 0) : 0;
				};
			}, { "./utils": 32 }],
			5: [function(e, t, r) {
				r.base64 = !1, r.binary = !1, r.dir = !1, r.createFolders = !0, r.date = null, r.compression = null, r.compressionOptions = null, r.comment = null, r.unixPermissions = null, r.dosPermissions = null;
			}, {}],
			6: [function(e, t, r) {
				var n = null;
				n = "undefined" != typeof Promise ? Promise : e("lie"), t.exports = { Promise: n };
			}, { lie: 37 }],
			7: [function(e, t, r) {
				var n = "undefined" != typeof Uint8Array && "undefined" != typeof Uint16Array && "undefined" != typeof Uint32Array, i$2 = e("pako"), s = e("./utils"), a = e("./stream/GenericWorker"), o = n ? "uint8array" : "array";
				function h(e$1, t$1) {
					a.call(this, "FlateWorker/" + e$1), this._pako = null, this._pakoAction = e$1, this._pakoOptions = t$1, this.meta = {};
				}
				r.magic = "\b\0", s.inherits(h, a), h.prototype.processChunk = function(e$1) {
					this.meta = e$1.meta, null === this._pako && this._createPako(), this._pako.push(s.transformTo(o, e$1.data), !1);
				}, h.prototype.flush = function() {
					a.prototype.flush.call(this), null === this._pako && this._createPako(), this._pako.push([], !0);
				}, h.prototype.cleanUp = function() {
					a.prototype.cleanUp.call(this), this._pako = null;
				}, h.prototype._createPako = function() {
					this._pako = new i$2[this._pakoAction]({
						raw: !0,
						level: this._pakoOptions.level || -1
					});
					var t$1 = this;
					this._pako.onData = function(e$1) {
						t$1.push({
							data: e$1,
							meta: t$1.meta
						});
					};
				}, r.compressWorker = function(e$1) {
					return new h("Deflate", e$1);
				}, r.uncompressWorker = function() {
					return new h("Inflate", {});
				};
			}, {
				"./stream/GenericWorker": 28,
				"./utils": 32,
				pako: 38
			}],
			8: [function(e, t, r) {
				function A(e$1, t$1) {
					var r$1, n$1 = "";
					for (r$1 = 0; r$1 < t$1; r$1++) n$1 += String.fromCharCode(255 & e$1), e$1 >>>= 8;
					return n$1;
				}
				function n(e$1, t$1, r$1, n$1, i$3, s$1) {
					var a, o, h = e$1.file, u = e$1.compression, l = s$1 !== O.utf8encode, f = I.transformTo("string", s$1(h.name)), c = I.transformTo("string", O.utf8encode(h.name)), d = h.comment, p = I.transformTo("string", s$1(d)), m = I.transformTo("string", O.utf8encode(d)), _$23 = c.length !== h.name.length, g = m.length !== d.length, b = "", v = "", y = "", w = h.dir, k = h.date, x = {
						crc32: 0,
						compressedSize: 0,
						uncompressedSize: 0
					};
					t$1 && !r$1 || (x.crc32 = e$1.crc32, x.compressedSize = e$1.compressedSize, x.uncompressedSize = e$1.uncompressedSize);
					var S = 0;
					t$1 && (S |= 8), l || !_$23 && !g || (S |= 2048);
					var z = 0, C = 0;
					w && (z |= 16), "UNIX" === i$3 ? (C = 798, z |= function(e$2, t$2) {
						var r$2 = e$2;
						return e$2 || (r$2 = t$2 ? 16893 : 33204), (65535 & r$2) << 16;
					}(h.unixPermissions, w)) : (C = 20, z |= function(e$2) {
						return 63 & (e$2 || 0);
					}(h.dosPermissions)), a = k.getUTCHours(), a <<= 6, a |= k.getUTCMinutes(), a <<= 5, a |= k.getUTCSeconds() / 2, o = k.getUTCFullYear() - 1980, o <<= 4, o |= k.getUTCMonth() + 1, o <<= 5, o |= k.getUTCDate(), _$23 && (v = A(1, 1) + A(B(f), 4) + c, b += "up" + A(v.length, 2) + v), g && (y = A(1, 1) + A(B(p), 4) + m, b += "uc" + A(y.length, 2) + y);
					var E = "";
					return E += "\n\0", E += A(S, 2), E += u.magic, E += A(a, 2), E += A(o, 2), E += A(x.crc32, 4), E += A(x.compressedSize, 4), E += A(x.uncompressedSize, 4), E += A(f.length, 2), E += A(b.length, 2), {
						fileRecord: R.LOCAL_FILE_HEADER + E + f + b,
						dirRecord: R.CENTRAL_FILE_HEADER + A(C, 2) + E + A(p.length, 2) + "\0\0\0\0" + A(z, 4) + A(n$1, 4) + f + b + p
					};
				}
				var I = e("../utils"), i$2 = e("../stream/GenericWorker"), O = e("../utf8"), B = e("../crc32"), R = e("../signature");
				function s(e$1, t$1, r$1, n$1) {
					i$2.call(this, "ZipFileWorker"), this.bytesWritten = 0, this.zipComment = t$1, this.zipPlatform = r$1, this.encodeFileName = n$1, this.streamFiles = e$1, this.accumulate = !1, this.contentBuffer = [], this.dirRecords = [], this.currentSourceOffset = 0, this.entriesCount = 0, this.currentFile = null, this._sources = [];
				}
				I.inherits(s, i$2), s.prototype.push = function(e$1) {
					var t$1 = e$1.meta.percent || 0, r$1 = this.entriesCount, n$1 = this._sources.length;
					this.accumulate ? this.contentBuffer.push(e$1) : (this.bytesWritten += e$1.data.length, i$2.prototype.push.call(this, {
						data: e$1.data,
						meta: {
							currentFile: this.currentFile,
							percent: r$1 ? (t$1 + 100 * (r$1 - n$1 - 1)) / r$1 : 100
						}
					}));
				}, s.prototype.openedSource = function(e$1) {
					this.currentSourceOffset = this.bytesWritten, this.currentFile = e$1.file.name;
					var t$1 = this.streamFiles && !e$1.file.dir;
					if (t$1) {
						var r$1 = n(e$1, t$1, !1, this.currentSourceOffset, this.zipPlatform, this.encodeFileName);
						this.push({
							data: r$1.fileRecord,
							meta: { percent: 0 }
						});
					} else this.accumulate = !0;
				}, s.prototype.closedSource = function(e$1) {
					this.accumulate = !1;
					var t$1 = this.streamFiles && !e$1.file.dir, r$1 = n(e$1, t$1, !0, this.currentSourceOffset, this.zipPlatform, this.encodeFileName);
					if (this.dirRecords.push(r$1.dirRecord), t$1) this.push({
						data: function(e$2) {
							return R.DATA_DESCRIPTOR + A(e$2.crc32, 4) + A(e$2.compressedSize, 4) + A(e$2.uncompressedSize, 4);
						}(e$1),
						meta: { percent: 100 }
					});
					else for (this.push({
						data: r$1.fileRecord,
						meta: { percent: 0 }
					}); this.contentBuffer.length;) this.push(this.contentBuffer.shift());
					this.currentFile = null;
				}, s.prototype.flush = function() {
					for (var e$1 = this.bytesWritten, t$1 = 0; t$1 < this.dirRecords.length; t$1++) this.push({
						data: this.dirRecords[t$1],
						meta: { percent: 100 }
					});
					var r$1 = this.bytesWritten - e$1, n$1 = function(e$2, t$2, r$2, n$2, i$3) {
						var s$1 = I.transformTo("string", i$3(n$2));
						return R.CENTRAL_DIRECTORY_END + "\0\0\0\0" + A(e$2, 2) + A(e$2, 2) + A(t$2, 4) + A(r$2, 4) + A(s$1.length, 2) + s$1;
					}(this.dirRecords.length, r$1, e$1, this.zipComment, this.encodeFileName);
					this.push({
						data: n$1,
						meta: { percent: 100 }
					});
				}, s.prototype.prepareNextSource = function() {
					this.previous = this._sources.shift(), this.openedSource(this.previous.streamInfo), this.isPaused ? this.previous.pause() : this.previous.resume();
				}, s.prototype.registerPrevious = function(e$1) {
					this._sources.push(e$1);
					var t$1 = this;
					return e$1.on("data", function(e$2) {
						t$1.processChunk(e$2);
					}), e$1.on("end", function() {
						t$1.closedSource(t$1.previous.streamInfo), t$1._sources.length ? t$1.prepareNextSource() : t$1.end();
					}), e$1.on("error", function(e$2) {
						t$1.error(e$2);
					}), this;
				}, s.prototype.resume = function() {
					return !!i$2.prototype.resume.call(this) && (!this.previous && this._sources.length ? (this.prepareNextSource(), !0) : this.previous || this._sources.length || this.generatedError ? void 0 : (this.end(), !0));
				}, s.prototype.error = function(e$1) {
					var t$1 = this._sources;
					if (!i$2.prototype.error.call(this, e$1)) return !1;
					for (var r$1 = 0; r$1 < t$1.length; r$1++) try {
						t$1[r$1].error(e$1);
					} catch (e$2) {}
					return !0;
				}, s.prototype.lock = function() {
					i$2.prototype.lock.call(this);
					for (var e$1 = this._sources, t$1 = 0; t$1 < e$1.length; t$1++) e$1[t$1].lock();
				}, t.exports = s;
			}, {
				"../crc32": 4,
				"../signature": 23,
				"../stream/GenericWorker": 28,
				"../utf8": 31,
				"../utils": 32
			}],
			9: [function(e, t, r) {
				var u = e("../compressions"), n = e("./ZipFileWorker");
				r.generateWorker = function(e$1, a, t$1) {
					var o = new n(a.streamFiles, t$1, a.platform, a.encodeFileName), h = 0;
					try {
						e$1.forEach(function(e$2, t$2) {
							h++;
							var r$1 = function(e$3, t$3) {
								var r$2 = e$3 || t$3, n$2 = u[r$2];
								if (!n$2) throw new Error(r$2 + " is not a valid compression method !");
								return n$2;
							}(t$2.options.compression, a.compression), n$1 = t$2.options.compressionOptions || a.compressionOptions || {}, i$2 = t$2.dir, s = t$2.date;
							t$2._compressWorker(r$1, n$1).withStreamInfo("file", {
								name: e$2,
								dir: i$2,
								date: s,
								comment: t$2.comment || "",
								unixPermissions: t$2.unixPermissions,
								dosPermissions: t$2.dosPermissions
							}).pipe(o);
						}), o.entriesCount = h;
					} catch (e$2) {
						o.error(e$2);
					}
					return o;
				};
			}, {
				"../compressions": 3,
				"./ZipFileWorker": 8
			}],
			10: [function(e, t, r) {
				function n() {
					if (!(this instanceof n)) return new n();
					if (arguments.length) throw new Error("The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.");
					this.files = Object.create(null), this.comment = null, this.root = "", this.clone = function() {
						var e$1 = new n();
						for (var t$1 in this) "function" != typeof this[t$1] && (e$1[t$1] = this[t$1]);
						return e$1;
					};
				}
				(n.prototype = e("./object")).loadAsync = e("./load"), n.support = e("./support"), n.defaults = e("./defaults"), n.version = "3.10.1", n.loadAsync = function(e$1, t$1) {
					return new n().loadAsync(e$1, t$1);
				}, n.external = e("./external"), t.exports = n;
			}, {
				"./defaults": 5,
				"./external": 6,
				"./load": 11,
				"./object": 15,
				"./support": 30
			}],
			11: [function(e, t, r) {
				var u = e("./utils"), i$2 = e("./external"), n = e("./utf8"), s = e("./zipEntries"), a = e("./stream/Crc32Probe"), l = e("./nodejsUtils");
				function f(n$1) {
					return new i$2.Promise(function(e$1, t$1) {
						var r$1 = n$1.decompressed.getContentWorker().pipe(new a());
						r$1.on("error", function(e$2) {
							t$1(e$2);
						}).on("end", function() {
							r$1.streamInfo.crc32 !== n$1.decompressed.crc32 ? t$1(/* @__PURE__ */ new Error("Corrupted zip : CRC32 mismatch")) : e$1();
						}).resume();
					});
				}
				t.exports = function(e$1, o) {
					var h = this;
					return o = u.extend(o || {}, {
						base64: !1,
						checkCRC32: !1,
						optimizedBinaryString: !1,
						createFolders: !1,
						decodeFileName: n.utf8decode
					}), l.isNode && l.isStream(e$1) ? i$2.Promise.reject(/* @__PURE__ */ new Error("JSZip can't accept a stream when loading a zip file.")) : u.prepareContent("the loaded zip file", e$1, !0, o.optimizedBinaryString, o.base64).then(function(e$2) {
						var t$1 = new s(o);
						return t$1.load(e$2), t$1;
					}).then(function(e$2) {
						var t$1 = [i$2.Promise.resolve(e$2)], r$1 = e$2.files;
						if (o.checkCRC32) for (var n$1 = 0; n$1 < r$1.length; n$1++) t$1.push(f(r$1[n$1]));
						return i$2.Promise.all(t$1);
					}).then(function(e$2) {
						for (var t$1 = e$2.shift(), r$1 = t$1.files, n$1 = 0; n$1 < r$1.length; n$1++) {
							var i$3 = r$1[n$1], s$1 = i$3.fileNameStr, a$1 = u.resolve(i$3.fileNameStr);
							h.file(a$1, i$3.decompressed, {
								binary: !0,
								optimizedBinaryString: !0,
								date: i$3.date,
								dir: i$3.dir,
								comment: i$3.fileCommentStr.length ? i$3.fileCommentStr : null,
								unixPermissions: i$3.unixPermissions,
								dosPermissions: i$3.dosPermissions,
								createFolders: o.createFolders
							}), i$3.dir || (h.file(a$1).unsafeOriginalName = s$1);
						}
						return t$1.zipComment.length && (h.comment = t$1.zipComment), h;
					});
				};
			}, {
				"./external": 6,
				"./nodejsUtils": 14,
				"./stream/Crc32Probe": 25,
				"./utf8": 31,
				"./utils": 32,
				"./zipEntries": 33
			}],
			12: [function(e, t, r) {
				var n = e("../utils"), i$2 = e("../stream/GenericWorker");
				function s(e$1, t$1) {
					i$2.call(this, "Nodejs stream input adapter for " + e$1), this._upstreamEnded = !1, this._bindStream(t$1);
				}
				n.inherits(s, i$2), s.prototype._bindStream = function(e$1) {
					var t$1 = this;
					(this._stream = e$1).pause(), e$1.on("data", function(e$2) {
						t$1.push({
							data: e$2,
							meta: { percent: 0 }
						});
					}).on("error", function(e$2) {
						t$1.isPaused ? this.generatedError = e$2 : t$1.error(e$2);
					}).on("end", function() {
						t$1.isPaused ? t$1._upstreamEnded = !0 : t$1.end();
					});
				}, s.prototype.pause = function() {
					return !!i$2.prototype.pause.call(this) && (this._stream.pause(), !0);
				}, s.prototype.resume = function() {
					return !!i$2.prototype.resume.call(this) && (this._upstreamEnded ? this.end() : this._stream.resume(), !0);
				}, t.exports = s;
			}, {
				"../stream/GenericWorker": 28,
				"../utils": 32
			}],
			13: [function(e, t, r) {
				var i$2 = e("readable-stream").Readable;
				function n(e$1, t$1, r$1) {
					i$2.call(this, t$1), this._helper = e$1;
					var n$1 = this;
					e$1.on("data", function(e$2, t$2) {
						n$1.push(e$2) || n$1._helper.pause(), r$1 && r$1(t$2);
					}).on("error", function(e$2) {
						n$1.emit("error", e$2);
					}).on("end", function() {
						n$1.push(null);
					});
				}
				e("../utils").inherits(n, i$2), n.prototype._read = function() {
					this._helper.resume();
				}, t.exports = n;
			}, {
				"../utils": 32,
				"readable-stream": 16
			}],
			14: [function(e, t, r) {
				t.exports = {
					isNode: "undefined" != typeof Buffer,
					newBufferFrom: function(e$1, t$1) {
						if (Buffer.from && Buffer.from !== Uint8Array.from) return Buffer.from(e$1, t$1);
						if ("number" == typeof e$1) throw new Error("The \"data\" argument must not be a number");
						return new Buffer(e$1, t$1);
					},
					allocBuffer: function(e$1) {
						if (Buffer.alloc) return Buffer.alloc(e$1);
						var t$1 = new Buffer(e$1);
						return t$1.fill(0), t$1;
					},
					isBuffer: function(e$1) {
						return Buffer.isBuffer(e$1);
					},
					isStream: function(e$1) {
						return e$1 && "function" == typeof e$1.on && "function" == typeof e$1.pause && "function" == typeof e$1.resume;
					}
				};
			}, {}],
			15: [function(e, t, r) {
				function s(e$1, t$1, r$1) {
					var n, i$3 = u.getTypeOf(t$1), s$1 = u.extend(r$1 || {}, f);
					s$1.date = s$1.date || /* @__PURE__ */ new Date(), null !== s$1.compression && (s$1.compression = s$1.compression.toUpperCase()), "string" == typeof s$1.unixPermissions && (s$1.unixPermissions = parseInt(s$1.unixPermissions, 8)), s$1.unixPermissions && 16384 & s$1.unixPermissions && (s$1.dir = !0), s$1.dosPermissions && 16 & s$1.dosPermissions && (s$1.dir = !0), s$1.dir && (e$1 = g(e$1)), s$1.createFolders && (n = _$23(e$1)) && b.call(this, n, !0);
					var a$1 = "string" === i$3 && !1 === s$1.binary && !1 === s$1.base64;
					r$1 && void 0 !== r$1.binary || (s$1.binary = !a$1), (t$1 instanceof c && 0 === t$1.uncompressedSize || s$1.dir || !t$1 || 0 === t$1.length) && (s$1.base64 = !1, s$1.binary = !0, t$1 = "", s$1.compression = "STORE", i$3 = "string");
					var o$1 = null;
					o$1 = t$1 instanceof c || t$1 instanceof l ? t$1 : p.isNode && p.isStream(t$1) ? new m(e$1, t$1) : u.prepareContent(e$1, t$1, s$1.binary, s$1.optimizedBinaryString, s$1.base64);
					var h$1 = new d(e$1, o$1, s$1);
					this.files[e$1] = h$1;
				}
				var i$2 = e("./utf8"), u = e("./utils"), l = e("./stream/GenericWorker"), a = e("./stream/StreamHelper"), f = e("./defaults"), c = e("./compressedObject"), d = e("./zipObject"), o = e("./generate"), p = e("./nodejsUtils"), m = e("./nodejs/NodejsStreamInputAdapter"), _$23 = function(e$1) {
					"/" === e$1.slice(-1) && (e$1 = e$1.substring(0, e$1.length - 1));
					var t$1 = e$1.lastIndexOf("/");
					return 0 < t$1 ? e$1.substring(0, t$1) : "";
				}, g = function(e$1) {
					return "/" !== e$1.slice(-1) && (e$1 += "/"), e$1;
				}, b = function(e$1, t$1) {
					return t$1 = void 0 !== t$1 ? t$1 : f.createFolders, e$1 = g(e$1), this.files[e$1] || s.call(this, e$1, null, {
						dir: !0,
						createFolders: t$1
					}), this.files[e$1];
				};
				function h(e$1) {
					return "[object RegExp]" === Object.prototype.toString.call(e$1);
				}
				t.exports = {
					load: function() {
						throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.");
					},
					forEach: function(e$1) {
						var t$1, r$1, n;
						for (t$1 in this.files) n = this.files[t$1], (r$1 = t$1.slice(this.root.length, t$1.length)) && t$1.slice(0, this.root.length) === this.root && e$1(r$1, n);
					},
					filter: function(r$1) {
						var n = [];
						return this.forEach(function(e$1, t$1) {
							r$1(e$1, t$1) && n.push(t$1);
						}), n;
					},
					file: function(e$1, t$1, r$1) {
						if (1 !== arguments.length) return e$1 = this.root + e$1, s.call(this, e$1, t$1, r$1), this;
						if (h(e$1)) {
							var n = e$1;
							return this.filter(function(e$2, t$2) {
								return !t$2.dir && n.test(e$2);
							});
						}
						var i$3 = this.files[this.root + e$1];
						return i$3 && !i$3.dir ? i$3 : null;
					},
					folder: function(r$1) {
						if (!r$1) return this;
						if (h(r$1)) return this.filter(function(e$2, t$2) {
							return t$2.dir && r$1.test(e$2);
						});
						var e$1 = this.root + r$1, t$1 = b.call(this, e$1), n = this.clone();
						return n.root = t$1.name, n;
					},
					remove: function(r$1) {
						r$1 = this.root + r$1;
						var e$1 = this.files[r$1];
						if (e$1 || ("/" !== r$1.slice(-1) && (r$1 += "/"), e$1 = this.files[r$1]), e$1 && !e$1.dir) delete this.files[r$1];
						else for (var t$1 = this.filter(function(e$2, t$2) {
							return t$2.name.slice(0, r$1.length) === r$1;
						}), n = 0; n < t$1.length; n++) delete this.files[t$1[n].name];
						return this;
					},
					generate: function() {
						throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.");
					},
					generateInternalStream: function(e$1) {
						var t$1, r$1 = {};
						try {
							if ((r$1 = u.extend(e$1 || {}, {
								streamFiles: !1,
								compression: "STORE",
								compressionOptions: null,
								type: "",
								platform: "DOS",
								comment: null,
								mimeType: "application/zip",
								encodeFileName: i$2.utf8encode
							})).type = r$1.type.toLowerCase(), r$1.compression = r$1.compression.toUpperCase(), "binarystring" === r$1.type && (r$1.type = "string"), !r$1.type) throw new Error("No output type specified.");
							u.checkSupport(r$1.type), "darwin" !== r$1.platform && "freebsd" !== r$1.platform && "linux" !== r$1.platform && "sunos" !== r$1.platform || (r$1.platform = "UNIX"), "win32" === r$1.platform && (r$1.platform = "DOS");
							var n = r$1.comment || this.comment || "";
							t$1 = o.generateWorker(this, r$1, n);
						} catch (e$2) {
							(t$1 = new l("error")).error(e$2);
						}
						return new a(t$1, r$1.type || "string", r$1.mimeType);
					},
					generateAsync: function(e$1, t$1) {
						return this.generateInternalStream(e$1).accumulate(t$1);
					},
					generateNodeStream: function(e$1, t$1) {
						return (e$1 = e$1 || {}).type || (e$1.type = "nodebuffer"), this.generateInternalStream(e$1).toNodejsStream(t$1);
					}
				};
			}, {
				"./compressedObject": 2,
				"./defaults": 5,
				"./generate": 9,
				"./nodejs/NodejsStreamInputAdapter": 12,
				"./nodejsUtils": 14,
				"./stream/GenericWorker": 28,
				"./stream/StreamHelper": 29,
				"./utf8": 31,
				"./utils": 32,
				"./zipObject": 35
			}],
			16: [function(e, t, r) {
				t.exports = e("stream");
			}, { stream: void 0 }],
			17: [function(e, t, r) {
				var n = e("./DataReader");
				function i$2(e$1) {
					n.call(this, e$1);
					for (var t$1 = 0; t$1 < this.data.length; t$1++) e$1[t$1] = 255 & e$1[t$1];
				}
				e("../utils").inherits(i$2, n), i$2.prototype.byteAt = function(e$1) {
					return this.data[this.zero + e$1];
				}, i$2.prototype.lastIndexOfSignature = function(e$1) {
					for (var t$1 = e$1.charCodeAt(0), r$1 = e$1.charCodeAt(1), n$1 = e$1.charCodeAt(2), i$3 = e$1.charCodeAt(3), s = this.length - 4; 0 <= s; --s) if (this.data[s] === t$1 && this.data[s + 1] === r$1 && this.data[s + 2] === n$1 && this.data[s + 3] === i$3) return s - this.zero;
					return -1;
				}, i$2.prototype.readAndCheckSignature = function(e$1) {
					var t$1 = e$1.charCodeAt(0), r$1 = e$1.charCodeAt(1), n$1 = e$1.charCodeAt(2), i$3 = e$1.charCodeAt(3), s = this.readData(4);
					return t$1 === s[0] && r$1 === s[1] && n$1 === s[2] && i$3 === s[3];
				}, i$2.prototype.readData = function(e$1) {
					if (this.checkOffset(e$1), 0 === e$1) return [];
					var t$1 = this.data.slice(this.zero + this.index, this.zero + this.index + e$1);
					return this.index += e$1, t$1;
				}, t.exports = i$2;
			}, {
				"../utils": 32,
				"./DataReader": 18
			}],
			18: [function(e, t, r) {
				var n = e("../utils");
				function i$2(e$1) {
					this.data = e$1, this.length = e$1.length, this.index = 0, this.zero = 0;
				}
				i$2.prototype = {
					checkOffset: function(e$1) {
						this.checkIndex(this.index + e$1);
					},
					checkIndex: function(e$1) {
						if (this.length < this.zero + e$1 || e$1 < 0) throw new Error("End of data reached (data length = " + this.length + ", asked index = " + e$1 + "). Corrupted zip ?");
					},
					setIndex: function(e$1) {
						this.checkIndex(e$1), this.index = e$1;
					},
					skip: function(e$1) {
						this.setIndex(this.index + e$1);
					},
					byteAt: function() {},
					readInt: function(e$1) {
						var t$1, r$1 = 0;
						for (this.checkOffset(e$1), t$1 = this.index + e$1 - 1; t$1 >= this.index; t$1--) r$1 = (r$1 << 8) + this.byteAt(t$1);
						return this.index += e$1, r$1;
					},
					readString: function(e$1) {
						return n.transformTo("string", this.readData(e$1));
					},
					readData: function() {},
					lastIndexOfSignature: function() {},
					readAndCheckSignature: function() {},
					readDate: function() {
						var e$1 = this.readInt(4);
						return new Date(Date.UTC(1980 + (e$1 >> 25 & 127), (e$1 >> 21 & 15) - 1, e$1 >> 16 & 31, e$1 >> 11 & 31, e$1 >> 5 & 63, (31 & e$1) << 1));
					}
				}, t.exports = i$2;
			}, { "../utils": 32 }],
			19: [function(e, t, r) {
				var n = e("./Uint8ArrayReader");
				function i$2(e$1) {
					n.call(this, e$1);
				}
				e("../utils").inherits(i$2, n), i$2.prototype.readData = function(e$1) {
					this.checkOffset(e$1);
					var t$1 = this.data.slice(this.zero + this.index, this.zero + this.index + e$1);
					return this.index += e$1, t$1;
				}, t.exports = i$2;
			}, {
				"../utils": 32,
				"./Uint8ArrayReader": 21
			}],
			20: [function(e, t, r) {
				var n = e("./DataReader");
				function i$2(e$1) {
					n.call(this, e$1);
				}
				e("../utils").inherits(i$2, n), i$2.prototype.byteAt = function(e$1) {
					return this.data.charCodeAt(this.zero + e$1);
				}, i$2.prototype.lastIndexOfSignature = function(e$1) {
					return this.data.lastIndexOf(e$1) - this.zero;
				}, i$2.prototype.readAndCheckSignature = function(e$1) {
					return e$1 === this.readData(4);
				}, i$2.prototype.readData = function(e$1) {
					this.checkOffset(e$1);
					var t$1 = this.data.slice(this.zero + this.index, this.zero + this.index + e$1);
					return this.index += e$1, t$1;
				}, t.exports = i$2;
			}, {
				"../utils": 32,
				"./DataReader": 18
			}],
			21: [function(e, t, r) {
				var n = e("./ArrayReader");
				function i$2(e$1) {
					n.call(this, e$1);
				}
				e("../utils").inherits(i$2, n), i$2.prototype.readData = function(e$1) {
					if (this.checkOffset(e$1), 0 === e$1) return new Uint8Array(0);
					var t$1 = this.data.subarray(this.zero + this.index, this.zero + this.index + e$1);
					return this.index += e$1, t$1;
				}, t.exports = i$2;
			}, {
				"../utils": 32,
				"./ArrayReader": 17
			}],
			22: [function(e, t, r) {
				var n = e("../utils"), i$2 = e("../support"), s = e("./ArrayReader"), a = e("./StringReader"), o = e("./NodeBufferReader"), h = e("./Uint8ArrayReader");
				t.exports = function(e$1) {
					var t$1 = n.getTypeOf(e$1);
					return n.checkSupport(t$1), "string" !== t$1 || i$2.uint8array ? "nodebuffer" === t$1 ? new o(e$1) : i$2.uint8array ? new h(n.transformTo("uint8array", e$1)) : new s(n.transformTo("array", e$1)) : new a(e$1);
				};
			}, {
				"../support": 30,
				"../utils": 32,
				"./ArrayReader": 17,
				"./NodeBufferReader": 19,
				"./StringReader": 20,
				"./Uint8ArrayReader": 21
			}],
			23: [function(e, t, r) {
				r.LOCAL_FILE_HEADER = "PK", r.CENTRAL_FILE_HEADER = "PK", r.CENTRAL_DIRECTORY_END = "PK", r.ZIP64_CENTRAL_DIRECTORY_LOCATOR = "PK\x07", r.ZIP64_CENTRAL_DIRECTORY_END = "PK", r.DATA_DESCRIPTOR = "PK\x07\b";
			}, {}],
			24: [function(e, t, r) {
				var n = e("./GenericWorker"), i$2 = e("../utils");
				function s(e$1) {
					n.call(this, "ConvertWorker to " + e$1), this.destType = e$1;
				}
				i$2.inherits(s, n), s.prototype.processChunk = function(e$1) {
					this.push({
						data: i$2.transformTo(this.destType, e$1.data),
						meta: e$1.meta
					});
				}, t.exports = s;
			}, {
				"../utils": 32,
				"./GenericWorker": 28
			}],
			25: [function(e, t, r) {
				var n = e("./GenericWorker"), i$2 = e("../crc32");
				function s() {
					n.call(this, "Crc32Probe"), this.withStreamInfo("crc32", 0);
				}
				e("../utils").inherits(s, n), s.prototype.processChunk = function(e$1) {
					this.streamInfo.crc32 = i$2(e$1.data, this.streamInfo.crc32 || 0), this.push(e$1);
				}, t.exports = s;
			}, {
				"../crc32": 4,
				"../utils": 32,
				"./GenericWorker": 28
			}],
			26: [function(e, t, r) {
				var n = e("../utils"), i$2 = e("./GenericWorker");
				function s(e$1) {
					i$2.call(this, "DataLengthProbe for " + e$1), this.propName = e$1, this.withStreamInfo(e$1, 0);
				}
				n.inherits(s, i$2), s.prototype.processChunk = function(e$1) {
					if (e$1) {
						var t$1 = this.streamInfo[this.propName] || 0;
						this.streamInfo[this.propName] = t$1 + e$1.data.length;
					}
					i$2.prototype.processChunk.call(this, e$1);
				}, t.exports = s;
			}, {
				"../utils": 32,
				"./GenericWorker": 28
			}],
			27: [function(e, t, r) {
				var n = e("../utils"), i$2 = e("./GenericWorker");
				function s(e$1) {
					i$2.call(this, "DataWorker");
					var t$1 = this;
					this.dataIsReady = !1, this.index = 0, this.max = 0, this.data = null, this.type = "", this._tickScheduled = !1, e$1.then(function(e$2) {
						t$1.dataIsReady = !0, t$1.data = e$2, t$1.max = e$2 && e$2.length || 0, t$1.type = n.getTypeOf(e$2), t$1.isPaused || t$1._tickAndRepeat();
					}, function(e$2) {
						t$1.error(e$2);
					});
				}
				n.inherits(s, i$2), s.prototype.cleanUp = function() {
					i$2.prototype.cleanUp.call(this), this.data = null;
				}, s.prototype.resume = function() {
					return !!i$2.prototype.resume.call(this) && (!this._tickScheduled && this.dataIsReady && (this._tickScheduled = !0, n.delay(this._tickAndRepeat, [], this)), !0);
				}, s.prototype._tickAndRepeat = function() {
					this._tickScheduled = !1, this.isPaused || this.isFinished || (this._tick(), this.isFinished || (n.delay(this._tickAndRepeat, [], this), this._tickScheduled = !0));
				}, s.prototype._tick = function() {
					if (this.isPaused || this.isFinished) return !1;
					var e$1 = null, t$1 = Math.min(this.max, this.index + 16384);
					if (this.index >= this.max) return this.end();
					switch (this.type) {
						case "string":
							e$1 = this.data.substring(this.index, t$1);
							break;
						case "uint8array":
							e$1 = this.data.subarray(this.index, t$1);
							break;
						case "array":
						case "nodebuffer": e$1 = this.data.slice(this.index, t$1);
					}
					return this.index = t$1, this.push({
						data: e$1,
						meta: { percent: this.max ? this.index / this.max * 100 : 0 }
					});
				}, t.exports = s;
			}, {
				"../utils": 32,
				"./GenericWorker": 28
			}],
			28: [function(e, t, r) {
				function n(e$1) {
					this.name = e$1 || "default", this.streamInfo = {}, this.generatedError = null, this.extraStreamInfo = {}, this.isPaused = !0, this.isFinished = !1, this.isLocked = !1, this._listeners = {
						data: [],
						end: [],
						error: []
					}, this.previous = null;
				}
				n.prototype = {
					push: function(e$1) {
						this.emit("data", e$1);
					},
					end: function() {
						if (this.isFinished) return !1;
						this.flush();
						try {
							this.emit("end"), this.cleanUp(), this.isFinished = !0;
						} catch (e$1) {
							this.emit("error", e$1);
						}
						return !0;
					},
					error: function(e$1) {
						return !this.isFinished && (this.isPaused ? this.generatedError = e$1 : (this.isFinished = !0, this.emit("error", e$1), this.previous && this.previous.error(e$1), this.cleanUp()), !0);
					},
					on: function(e$1, t$1) {
						return this._listeners[e$1].push(t$1), this;
					},
					cleanUp: function() {
						this.streamInfo = this.generatedError = this.extraStreamInfo = null, this._listeners = [];
					},
					emit: function(e$1, t$1) {
						if (this._listeners[e$1]) for (var r$1 = 0; r$1 < this._listeners[e$1].length; r$1++) this._listeners[e$1][r$1].call(this, t$1);
					},
					pipe: function(e$1) {
						return e$1.registerPrevious(this);
					},
					registerPrevious: function(e$1) {
						if (this.isLocked) throw new Error("The stream '" + this + "' has already been used.");
						this.streamInfo = e$1.streamInfo, this.mergeStreamInfo(), this.previous = e$1;
						var t$1 = this;
						return e$1.on("data", function(e$2) {
							t$1.processChunk(e$2);
						}), e$1.on("end", function() {
							t$1.end();
						}), e$1.on("error", function(e$2) {
							t$1.error(e$2);
						}), this;
					},
					pause: function() {
						return !this.isPaused && !this.isFinished && (this.isPaused = !0, this.previous && this.previous.pause(), !0);
					},
					resume: function() {
						if (!this.isPaused || this.isFinished) return !1;
						var e$1 = this.isPaused = !1;
						return this.generatedError && (this.error(this.generatedError), e$1 = !0), this.previous && this.previous.resume(), !e$1;
					},
					flush: function() {},
					processChunk: function(e$1) {
						this.push(e$1);
					},
					withStreamInfo: function(e$1, t$1) {
						return this.extraStreamInfo[e$1] = t$1, this.mergeStreamInfo(), this;
					},
					mergeStreamInfo: function() {
						for (var e$1 in this.extraStreamInfo) Object.prototype.hasOwnProperty.call(this.extraStreamInfo, e$1) && (this.streamInfo[e$1] = this.extraStreamInfo[e$1]);
					},
					lock: function() {
						if (this.isLocked) throw new Error("The stream '" + this + "' has already been used.");
						this.isLocked = !0, this.previous && this.previous.lock();
					},
					toString: function() {
						var e$1 = "Worker " + this.name;
						return this.previous ? this.previous + " -> " + e$1 : e$1;
					}
				}, t.exports = n;
			}, {}],
			29: [function(e, t, r) {
				var h = e("../utils"), i$2 = e("./ConvertWorker"), s = e("./GenericWorker"), u = e("../base64"), n = e("../support"), a = e("../external"), o = null;
				if (n.nodestream) try {
					o = e("../nodejs/NodejsStreamOutputAdapter");
				} catch (e$1) {}
				function l(e$1, o$1) {
					return new a.Promise(function(t$1, r$1) {
						var n$1 = [], i$3 = e$1._internalType, s$1 = e$1._outputType, a$1 = e$1._mimeType;
						e$1.on("data", function(e$2, t$2) {
							n$1.push(e$2), o$1 && o$1(t$2);
						}).on("error", function(e$2) {
							n$1 = [], r$1(e$2);
						}).on("end", function() {
							try {
								var e$2 = function(e$3, t$2, r$2) {
									switch (e$3) {
										case "blob": return h.newBlob(h.transformTo("arraybuffer", t$2), r$2);
										case "base64": return u.encode(t$2);
										default: return h.transformTo(e$3, t$2);
									}
								}(s$1, function(e$3, t$2) {
									var r$2, n$2 = 0, i$4 = null, s$2 = 0;
									for (r$2 = 0; r$2 < t$2.length; r$2++) s$2 += t$2[r$2].length;
									switch (e$3) {
										case "string": return t$2.join("");
										case "array": return Array.prototype.concat.apply([], t$2);
										case "uint8array":
											for (i$4 = new Uint8Array(s$2), r$2 = 0; r$2 < t$2.length; r$2++) i$4.set(t$2[r$2], n$2), n$2 += t$2[r$2].length;
											return i$4;
										case "nodebuffer": return Buffer.concat(t$2);
										default: throw new Error("concat : unsupported type '" + e$3 + "'");
									}
								}(i$3, n$1), a$1);
								t$1(e$2);
							} catch (e$3) {
								r$1(e$3);
							}
							n$1 = [];
						}).resume();
					});
				}
				function f(e$1, t$1, r$1) {
					var n$1 = t$1;
					switch (t$1) {
						case "blob":
						case "arraybuffer":
							n$1 = "uint8array";
							break;
						case "base64": n$1 = "string";
					}
					try {
						this._internalType = n$1, this._outputType = t$1, this._mimeType = r$1, h.checkSupport(n$1), this._worker = e$1.pipe(new i$2(n$1)), e$1.lock();
					} catch (e$2) {
						this._worker = new s("error"), this._worker.error(e$2);
					}
				}
				f.prototype = {
					accumulate: function(e$1) {
						return l(this, e$1);
					},
					on: function(e$1, t$1) {
						var r$1 = this;
						return "data" === e$1 ? this._worker.on(e$1, function(e$2) {
							t$1.call(r$1, e$2.data, e$2.meta);
						}) : this._worker.on(e$1, function() {
							h.delay(t$1, arguments, r$1);
						}), this;
					},
					resume: function() {
						return h.delay(this._worker.resume, [], this._worker), this;
					},
					pause: function() {
						return this._worker.pause(), this;
					},
					toNodejsStream: function(e$1) {
						if (h.checkSupport("nodestream"), "nodebuffer" !== this._outputType) throw new Error(this._outputType + " is not supported by this method");
						return new o(this, { objectMode: "nodebuffer" !== this._outputType }, e$1);
					}
				}, t.exports = f;
			}, {
				"../base64": 1,
				"../external": 6,
				"../nodejs/NodejsStreamOutputAdapter": 13,
				"../support": 30,
				"../utils": 32,
				"./ConvertWorker": 24,
				"./GenericWorker": 28
			}],
			30: [function(e, t, r) {
				if (r.base64 = !0, r.array = !0, r.string = !0, r.arraybuffer = "undefined" != typeof ArrayBuffer && "undefined" != typeof Uint8Array, r.nodebuffer = "undefined" != typeof Buffer, r.uint8array = "undefined" != typeof Uint8Array, "undefined" == typeof ArrayBuffer) r.blob = !1;
				else {
					var n = /* @__PURE__ */ new ArrayBuffer(0);
					try {
						r.blob = 0 === new Blob([n], { type: "application/zip" }).size;
					} catch (e$1) {
						try {
							var i$2 = new (self.BlobBuilder || self.WebKitBlobBuilder || self.MozBlobBuilder || self.MSBlobBuilder)();
							i$2.append(n), r.blob = 0 === i$2.getBlob("application/zip").size;
						} catch (e$2) {
							r.blob = !1;
						}
					}
				}
				try {
					r.nodestream = !!e("readable-stream").Readable;
				} catch (e$1) {
					r.nodestream = !1;
				}
			}, { "readable-stream": 16 }],
			31: [function(e, t, s) {
				for (var o = e("./utils"), h = e("./support"), r = e("./nodejsUtils"), n = e("./stream/GenericWorker"), u = new Array(256), i$2 = 0; i$2 < 256; i$2++) u[i$2] = 252 <= i$2 ? 6 : 248 <= i$2 ? 5 : 240 <= i$2 ? 4 : 224 <= i$2 ? 3 : 192 <= i$2 ? 2 : 1;
				u[254] = u[254] = 1;
				function a() {
					n.call(this, "utf-8 decode"), this.leftOver = null;
				}
				function l() {
					n.call(this, "utf-8 encode");
				}
				s.utf8encode = function(e$1) {
					return h.nodebuffer ? r.newBufferFrom(e$1, "utf-8") : function(e$2) {
						var t$1, r$1, n$1, i$3, s$1, a$1 = e$2.length, o$1 = 0;
						for (i$3 = 0; i$3 < a$1; i$3++) 55296 == (64512 & (r$1 = e$2.charCodeAt(i$3))) && i$3 + 1 < a$1 && 56320 == (64512 & (n$1 = e$2.charCodeAt(i$3 + 1))) && (r$1 = 65536 + (r$1 - 55296 << 10) + (n$1 - 56320), i$3++), o$1 += r$1 < 128 ? 1 : r$1 < 2048 ? 2 : r$1 < 65536 ? 3 : 4;
						for (t$1 = h.uint8array ? new Uint8Array(o$1) : new Array(o$1), i$3 = s$1 = 0; s$1 < o$1; i$3++) 55296 == (64512 & (r$1 = e$2.charCodeAt(i$3))) && i$3 + 1 < a$1 && 56320 == (64512 & (n$1 = e$2.charCodeAt(i$3 + 1))) && (r$1 = 65536 + (r$1 - 55296 << 10) + (n$1 - 56320), i$3++), r$1 < 128 ? t$1[s$1++] = r$1 : (r$1 < 2048 ? t$1[s$1++] = 192 | r$1 >>> 6 : (r$1 < 65536 ? t$1[s$1++] = 224 | r$1 >>> 12 : (t$1[s$1++] = 240 | r$1 >>> 18, t$1[s$1++] = 128 | r$1 >>> 12 & 63), t$1[s$1++] = 128 | r$1 >>> 6 & 63), t$1[s$1++] = 128 | 63 & r$1);
						return t$1;
					}(e$1);
				}, s.utf8decode = function(e$1) {
					return h.nodebuffer ? o.transformTo("nodebuffer", e$1).toString("utf-8") : function(e$2) {
						var t$1, r$1, n$1, i$3, s$1 = e$2.length, a$1 = new Array(2 * s$1);
						for (t$1 = r$1 = 0; t$1 < s$1;) if ((n$1 = e$2[t$1++]) < 128) a$1[r$1++] = n$1;
						else if (4 < (i$3 = u[n$1])) a$1[r$1++] = 65533, t$1 += i$3 - 1;
						else {
							for (n$1 &= 2 === i$3 ? 31 : 3 === i$3 ? 15 : 7; 1 < i$3 && t$1 < s$1;) n$1 = n$1 << 6 | 63 & e$2[t$1++], i$3--;
							1 < i$3 ? a$1[r$1++] = 65533 : n$1 < 65536 ? a$1[r$1++] = n$1 : (n$1 -= 65536, a$1[r$1++] = 55296 | n$1 >> 10 & 1023, a$1[r$1++] = 56320 | 1023 & n$1);
						}
						return a$1.length !== r$1 && (a$1.subarray ? a$1 = a$1.subarray(0, r$1) : a$1.length = r$1), o.applyFromCharCode(a$1);
					}(e$1 = o.transformTo(h.uint8array ? "uint8array" : "array", e$1));
				}, o.inherits(a, n), a.prototype.processChunk = function(e$1) {
					var t$1 = o.transformTo(h.uint8array ? "uint8array" : "array", e$1.data);
					if (this.leftOver && this.leftOver.length) {
						if (h.uint8array) {
							var r$1 = t$1;
							(t$1 = new Uint8Array(r$1.length + this.leftOver.length)).set(this.leftOver, 0), t$1.set(r$1, this.leftOver.length);
						} else t$1 = this.leftOver.concat(t$1);
						this.leftOver = null;
					}
					var n$1 = function(e$2, t$2) {
						var r$2;
						for ((t$2 = t$2 || e$2.length) > e$2.length && (t$2 = e$2.length), r$2 = t$2 - 1; 0 <= r$2 && 128 == (192 & e$2[r$2]);) r$2--;
						return r$2 < 0 ? t$2 : 0 === r$2 ? t$2 : r$2 + u[e$2[r$2]] > t$2 ? r$2 : t$2;
					}(t$1), i$3 = t$1;
					n$1 !== t$1.length && (h.uint8array ? (i$3 = t$1.subarray(0, n$1), this.leftOver = t$1.subarray(n$1, t$1.length)) : (i$3 = t$1.slice(0, n$1), this.leftOver = t$1.slice(n$1, t$1.length))), this.push({
						data: s.utf8decode(i$3),
						meta: e$1.meta
					});
				}, a.prototype.flush = function() {
					this.leftOver && this.leftOver.length && (this.push({
						data: s.utf8decode(this.leftOver),
						meta: {}
					}), this.leftOver = null);
				}, s.Utf8DecodeWorker = a, o.inherits(l, n), l.prototype.processChunk = function(e$1) {
					this.push({
						data: s.utf8encode(e$1.data),
						meta: e$1.meta
					});
				}, s.Utf8EncodeWorker = l;
			}, {
				"./nodejsUtils": 14,
				"./stream/GenericWorker": 28,
				"./support": 30,
				"./utils": 32
			}],
			32: [function(e, t, a) {
				var o = e("./support"), h = e("./base64"), r = e("./nodejsUtils"), u = e("./external");
				function n(e$1) {
					return e$1;
				}
				function l(e$1, t$1) {
					for (var r$1 = 0; r$1 < e$1.length; ++r$1) t$1[r$1] = 255 & e$1.charCodeAt(r$1);
					return t$1;
				}
				e("setimmediate"), a.newBlob = function(t$1, r$1) {
					a.checkSupport("blob");
					try {
						return new Blob([t$1], { type: r$1 });
					} catch (e$1) {
						try {
							var n$1 = new (self.BlobBuilder || self.WebKitBlobBuilder || self.MozBlobBuilder || self.MSBlobBuilder)();
							return n$1.append(t$1), n$1.getBlob(r$1);
						} catch (e$2) {
							throw new Error("Bug : can't construct the Blob.");
						}
					}
				};
				var i$2 = {
					stringifyByChunk: function(e$1, t$1, r$1) {
						var n$1 = [], i$3 = 0, s$1 = e$1.length;
						if (s$1 <= r$1) return String.fromCharCode.apply(null, e$1);
						for (; i$3 < s$1;) "array" === t$1 || "nodebuffer" === t$1 ? n$1.push(String.fromCharCode.apply(null, e$1.slice(i$3, Math.min(i$3 + r$1, s$1)))) : n$1.push(String.fromCharCode.apply(null, e$1.subarray(i$3, Math.min(i$3 + r$1, s$1)))), i$3 += r$1;
						return n$1.join("");
					},
					stringifyByChar: function(e$1) {
						for (var t$1 = "", r$1 = 0; r$1 < e$1.length; r$1++) t$1 += String.fromCharCode(e$1[r$1]);
						return t$1;
					},
					applyCanBeUsed: {
						uint8array: function() {
							try {
								return o.uint8array && 1 === String.fromCharCode.apply(null, new Uint8Array(1)).length;
							} catch (e$1) {
								return !1;
							}
						}(),
						nodebuffer: function() {
							try {
								return o.nodebuffer && 1 === String.fromCharCode.apply(null, r.allocBuffer(1)).length;
							} catch (e$1) {
								return !1;
							}
						}()
					}
				};
				function s(e$1) {
					var t$1 = 65536, r$1 = a.getTypeOf(e$1), n$1 = !0;
					if ("uint8array" === r$1 ? n$1 = i$2.applyCanBeUsed.uint8array : "nodebuffer" === r$1 && (n$1 = i$2.applyCanBeUsed.nodebuffer), n$1) for (; 1 < t$1;) try {
						return i$2.stringifyByChunk(e$1, r$1, t$1);
					} catch (e$2) {
						t$1 = Math.floor(t$1 / 2);
					}
					return i$2.stringifyByChar(e$1);
				}
				function f(e$1, t$1) {
					for (var r$1 = 0; r$1 < e$1.length; r$1++) t$1[r$1] = e$1[r$1];
					return t$1;
				}
				a.applyFromCharCode = s;
				var c = {};
				c.string = {
					string: n,
					array: function(e$1) {
						return l(e$1, new Array(e$1.length));
					},
					arraybuffer: function(e$1) {
						return c.string.uint8array(e$1).buffer;
					},
					uint8array: function(e$1) {
						return l(e$1, new Uint8Array(e$1.length));
					},
					nodebuffer: function(e$1) {
						return l(e$1, r.allocBuffer(e$1.length));
					}
				}, c.array = {
					string: s,
					array: n,
					arraybuffer: function(e$1) {
						return new Uint8Array(e$1).buffer;
					},
					uint8array: function(e$1) {
						return new Uint8Array(e$1);
					},
					nodebuffer: function(e$1) {
						return r.newBufferFrom(e$1);
					}
				}, c.arraybuffer = {
					string: function(e$1) {
						return s(new Uint8Array(e$1));
					},
					array: function(e$1) {
						return f(new Uint8Array(e$1), new Array(e$1.byteLength));
					},
					arraybuffer: n,
					uint8array: function(e$1) {
						return new Uint8Array(e$1);
					},
					nodebuffer: function(e$1) {
						return r.newBufferFrom(new Uint8Array(e$1));
					}
				}, c.uint8array = {
					string: s,
					array: function(e$1) {
						return f(e$1, new Array(e$1.length));
					},
					arraybuffer: function(e$1) {
						return e$1.buffer;
					},
					uint8array: n,
					nodebuffer: function(e$1) {
						return r.newBufferFrom(e$1);
					}
				}, c.nodebuffer = {
					string: s,
					array: function(e$1) {
						return f(e$1, new Array(e$1.length));
					},
					arraybuffer: function(e$1) {
						return c.nodebuffer.uint8array(e$1).buffer;
					},
					uint8array: function(e$1) {
						return f(e$1, new Uint8Array(e$1.length));
					},
					nodebuffer: n
				}, a.transformTo = function(e$1, t$1) {
					if (t$1 = t$1 || "", !e$1) return t$1;
					a.checkSupport(e$1);
					var r$1 = a.getTypeOf(t$1);
					return c[r$1][e$1](t$1);
				}, a.resolve = function(e$1) {
					for (var t$1 = e$1.split("/"), r$1 = [], n$1 = 0; n$1 < t$1.length; n$1++) {
						var i$3 = t$1[n$1];
						"." === i$3 || "" === i$3 && 0 !== n$1 && n$1 !== t$1.length - 1 || (".." === i$3 ? r$1.pop() : r$1.push(i$3));
					}
					return r$1.join("/");
				}, a.getTypeOf = function(e$1) {
					return "string" == typeof e$1 ? "string" : "[object Array]" === Object.prototype.toString.call(e$1) ? "array" : o.nodebuffer && r.isBuffer(e$1) ? "nodebuffer" : o.uint8array && e$1 instanceof Uint8Array ? "uint8array" : o.arraybuffer && e$1 instanceof ArrayBuffer ? "arraybuffer" : void 0;
				}, a.checkSupport = function(e$1) {
					if (!o[e$1.toLowerCase()]) throw new Error(e$1 + " is not supported by this platform");
				}, a.MAX_VALUE_16BITS = 65535, a.MAX_VALUE_32BITS = -1, a.pretty = function(e$1) {
					var t$1, r$1, n$1 = "";
					for (r$1 = 0; r$1 < (e$1 || "").length; r$1++) n$1 += "\\x" + ((t$1 = e$1.charCodeAt(r$1)) < 16 ? "0" : "") + t$1.toString(16).toUpperCase();
					return n$1;
				}, a.delay = function(e$1, t$1, r$1) {
					setImmediate(function() {
						e$1.apply(r$1 || null, t$1 || []);
					});
				}, a.inherits = function(e$1, t$1) {
					function r$1() {}
					r$1.prototype = t$1.prototype, e$1.prototype = new r$1();
				}, a.extend = function() {
					var e$1, t$1, r$1 = {};
					for (e$1 = 0; e$1 < arguments.length; e$1++) for (t$1 in arguments[e$1]) Object.prototype.hasOwnProperty.call(arguments[e$1], t$1) && void 0 === r$1[t$1] && (r$1[t$1] = arguments[e$1][t$1]);
					return r$1;
				}, a.prepareContent = function(r$1, e$1, n$1, i$3, s$1) {
					return u.Promise.resolve(e$1).then(function(n$2) {
						return o.blob && (n$2 instanceof Blob || -1 !== ["[object File]", "[object Blob]"].indexOf(Object.prototype.toString.call(n$2))) && "undefined" != typeof FileReader ? new u.Promise(function(t$1, r$2) {
							var e$2 = new FileReader();
							e$2.onload = function(e$3) {
								t$1(e$3.target.result);
							}, e$2.onerror = function(e$3) {
								r$2(e$3.target.error);
							}, e$2.readAsArrayBuffer(n$2);
						}) : n$2;
					}).then(function(e$2) {
						var t$1 = a.getTypeOf(e$2);
						return t$1 ? ("arraybuffer" === t$1 ? e$2 = a.transformTo("uint8array", e$2) : "string" === t$1 && (s$1 ? e$2 = h.decode(e$2) : n$1 && !0 !== i$3 && (e$2 = function(e$3) {
							return l(e$3, o.uint8array ? new Uint8Array(e$3.length) : new Array(e$3.length));
						}(e$2))), e$2) : u.Promise.reject(/* @__PURE__ */ new Error("Can't read the data of '" + r$1 + "'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?"));
					});
				};
			}, {
				"./base64": 1,
				"./external": 6,
				"./nodejsUtils": 14,
				"./support": 30,
				setimmediate: 54
			}],
			33: [function(e, t, r) {
				var n = e("./reader/readerFor"), i$2 = e("./utils"), s = e("./signature"), a = e("./zipEntry"), o = e("./support");
				function h(e$1) {
					this.files = [], this.loadOptions = e$1;
				}
				h.prototype = {
					checkSignature: function(e$1) {
						if (!this.reader.readAndCheckSignature(e$1)) {
							this.reader.index -= 4;
							var t$1 = this.reader.readString(4);
							throw new Error("Corrupted zip or bug: unexpected signature (" + i$2.pretty(t$1) + ", expected " + i$2.pretty(e$1) + ")");
						}
					},
					isSignature: function(e$1, t$1) {
						var r$1 = this.reader.index;
						this.reader.setIndex(e$1);
						var n$1 = this.reader.readString(4) === t$1;
						return this.reader.setIndex(r$1), n$1;
					},
					readBlockEndOfCentral: function() {
						this.diskNumber = this.reader.readInt(2), this.diskWithCentralDirStart = this.reader.readInt(2), this.centralDirRecordsOnThisDisk = this.reader.readInt(2), this.centralDirRecords = this.reader.readInt(2), this.centralDirSize = this.reader.readInt(4), this.centralDirOffset = this.reader.readInt(4), this.zipCommentLength = this.reader.readInt(2);
						var e$1 = this.reader.readData(this.zipCommentLength), t$1 = o.uint8array ? "uint8array" : "array", r$1 = i$2.transformTo(t$1, e$1);
						this.zipComment = this.loadOptions.decodeFileName(r$1);
					},
					readBlockZip64EndOfCentral: function() {
						this.zip64EndOfCentralSize = this.reader.readInt(8), this.reader.skip(4), this.diskNumber = this.reader.readInt(4), this.diskWithCentralDirStart = this.reader.readInt(4), this.centralDirRecordsOnThisDisk = this.reader.readInt(8), this.centralDirRecords = this.reader.readInt(8), this.centralDirSize = this.reader.readInt(8), this.centralDirOffset = this.reader.readInt(8), this.zip64ExtensibleData = {};
						for (var e$1, t$1, r$1, n$1 = this.zip64EndOfCentralSize - 44; 0 < n$1;) e$1 = this.reader.readInt(2), t$1 = this.reader.readInt(4), r$1 = this.reader.readData(t$1), this.zip64ExtensibleData[e$1] = {
							id: e$1,
							length: t$1,
							value: r$1
						};
					},
					readBlockZip64EndOfCentralLocator: function() {
						if (this.diskWithZip64CentralDirStart = this.reader.readInt(4), this.relativeOffsetEndOfZip64CentralDir = this.reader.readInt(8), this.disksCount = this.reader.readInt(4), 1 < this.disksCount) throw new Error("Multi-volumes zip are not supported");
					},
					readLocalFiles: function() {
						var e$1, t$1;
						for (e$1 = 0; e$1 < this.files.length; e$1++) t$1 = this.files[e$1], this.reader.setIndex(t$1.localHeaderOffset), this.checkSignature(s.LOCAL_FILE_HEADER), t$1.readLocalPart(this.reader), t$1.handleUTF8(), t$1.processAttributes();
					},
					readCentralDir: function() {
						var e$1;
						for (this.reader.setIndex(this.centralDirOffset); this.reader.readAndCheckSignature(s.CENTRAL_FILE_HEADER);) (e$1 = new a({ zip64: this.zip64 }, this.loadOptions)).readCentralPart(this.reader), this.files.push(e$1);
						if (this.centralDirRecords !== this.files.length && 0 !== this.centralDirRecords && 0 === this.files.length) throw new Error("Corrupted zip or bug: expected " + this.centralDirRecords + " records in central dir, got " + this.files.length);
					},
					readEndOfCentral: function() {
						var e$1 = this.reader.lastIndexOfSignature(s.CENTRAL_DIRECTORY_END);
						if (e$1 < 0) throw !this.isSignature(0, s.LOCAL_FILE_HEADER) ? /* @__PURE__ */ new Error("Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html") : /* @__PURE__ */ new Error("Corrupted zip: can't find end of central directory");
						this.reader.setIndex(e$1);
						var t$1 = e$1;
						if (this.checkSignature(s.CENTRAL_DIRECTORY_END), this.readBlockEndOfCentral(), this.diskNumber === i$2.MAX_VALUE_16BITS || this.diskWithCentralDirStart === i$2.MAX_VALUE_16BITS || this.centralDirRecordsOnThisDisk === i$2.MAX_VALUE_16BITS || this.centralDirRecords === i$2.MAX_VALUE_16BITS || this.centralDirSize === i$2.MAX_VALUE_32BITS || this.centralDirOffset === i$2.MAX_VALUE_32BITS) {
							if (this.zip64 = !0, (e$1 = this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR)) < 0) throw new Error("Corrupted zip: can't find the ZIP64 end of central directory locator");
							if (this.reader.setIndex(e$1), this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR), this.readBlockZip64EndOfCentralLocator(), !this.isSignature(this.relativeOffsetEndOfZip64CentralDir, s.ZIP64_CENTRAL_DIRECTORY_END) && (this.relativeOffsetEndOfZip64CentralDir = this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_END), this.relativeOffsetEndOfZip64CentralDir < 0)) throw new Error("Corrupted zip: can't find the ZIP64 end of central directory");
							this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir), this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_END), this.readBlockZip64EndOfCentral();
						}
						var r$1 = this.centralDirOffset + this.centralDirSize;
						this.zip64 && (r$1 += 20, r$1 += 12 + this.zip64EndOfCentralSize);
						var n$1 = t$1 - r$1;
						if (0 < n$1) this.isSignature(t$1, s.CENTRAL_FILE_HEADER) || (this.reader.zero = n$1);
						else if (n$1 < 0) throw new Error("Corrupted zip: missing " + Math.abs(n$1) + " bytes.");
					},
					prepareReader: function(e$1) {
						this.reader = n(e$1);
					},
					load: function(e$1) {
						this.prepareReader(e$1), this.readEndOfCentral(), this.readCentralDir(), this.readLocalFiles();
					}
				}, t.exports = h;
			}, {
				"./reader/readerFor": 22,
				"./signature": 23,
				"./support": 30,
				"./utils": 32,
				"./zipEntry": 34
			}],
			34: [function(e, t, r) {
				var n = e("./reader/readerFor"), s = e("./utils"), i$2 = e("./compressedObject"), a = e("./crc32"), o = e("./utf8"), h = e("./compressions"), u = e("./support");
				function l(e$1, t$1) {
					this.options = e$1, this.loadOptions = t$1;
				}
				l.prototype = {
					isEncrypted: function() {
						return 1 == (1 & this.bitFlag);
					},
					useUTF8: function() {
						return 2048 == (2048 & this.bitFlag);
					},
					readLocalPart: function(e$1) {
						var t$1, r$1;
						if (e$1.skip(22), this.fileNameLength = e$1.readInt(2), r$1 = e$1.readInt(2), this.fileName = e$1.readData(this.fileNameLength), e$1.skip(r$1), -1 === this.compressedSize || -1 === this.uncompressedSize) throw new Error("Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === -1 || uncompressedSize === -1)");
						if (null === (t$1 = function(e$2) {
							for (var t$2 in h) if (Object.prototype.hasOwnProperty.call(h, t$2) && h[t$2].magic === e$2) return h[t$2];
							return null;
						}(this.compressionMethod))) throw new Error("Corrupted zip : compression " + s.pretty(this.compressionMethod) + " unknown (inner file : " + s.transformTo("string", this.fileName) + ")");
						this.decompressed = new i$2(this.compressedSize, this.uncompressedSize, this.crc32, t$1, e$1.readData(this.compressedSize));
					},
					readCentralPart: function(e$1) {
						this.versionMadeBy = e$1.readInt(2), e$1.skip(2), this.bitFlag = e$1.readInt(2), this.compressionMethod = e$1.readString(2), this.date = e$1.readDate(), this.crc32 = e$1.readInt(4), this.compressedSize = e$1.readInt(4), this.uncompressedSize = e$1.readInt(4);
						var t$1 = e$1.readInt(2);
						if (this.extraFieldsLength = e$1.readInt(2), this.fileCommentLength = e$1.readInt(2), this.diskNumberStart = e$1.readInt(2), this.internalFileAttributes = e$1.readInt(2), this.externalFileAttributes = e$1.readInt(4), this.localHeaderOffset = e$1.readInt(4), this.isEncrypted()) throw new Error("Encrypted zip are not supported");
						e$1.skip(t$1), this.readExtraFields(e$1), this.parseZIP64ExtraField(e$1), this.fileComment = e$1.readData(this.fileCommentLength);
					},
					processAttributes: function() {
						this.unixPermissions = null, this.dosPermissions = null;
						var e$1 = this.versionMadeBy >> 8;
						this.dir = !!(16 & this.externalFileAttributes), 0 == e$1 && (this.dosPermissions = 63 & this.externalFileAttributes), 3 == e$1 && (this.unixPermissions = this.externalFileAttributes >> 16 & 65535), this.dir || "/" !== this.fileNameStr.slice(-1) || (this.dir = !0);
					},
					parseZIP64ExtraField: function() {
						if (this.extraFields[1]) {
							var e$1 = n(this.extraFields[1].value);
							this.uncompressedSize === s.MAX_VALUE_32BITS && (this.uncompressedSize = e$1.readInt(8)), this.compressedSize === s.MAX_VALUE_32BITS && (this.compressedSize = e$1.readInt(8)), this.localHeaderOffset === s.MAX_VALUE_32BITS && (this.localHeaderOffset = e$1.readInt(8)), this.diskNumberStart === s.MAX_VALUE_32BITS && (this.diskNumberStart = e$1.readInt(4));
						}
					},
					readExtraFields: function(e$1) {
						var t$1, r$1, n$1, i$3 = e$1.index + this.extraFieldsLength;
						for (this.extraFields || (this.extraFields = {}); e$1.index + 4 < i$3;) t$1 = e$1.readInt(2), r$1 = e$1.readInt(2), n$1 = e$1.readData(r$1), this.extraFields[t$1] = {
							id: t$1,
							length: r$1,
							value: n$1
						};
						e$1.setIndex(i$3);
					},
					handleUTF8: function() {
						var e$1 = u.uint8array ? "uint8array" : "array";
						if (this.useUTF8()) this.fileNameStr = o.utf8decode(this.fileName), this.fileCommentStr = o.utf8decode(this.fileComment);
						else {
							var t$1 = this.findExtraFieldUnicodePath();
							if (null !== t$1) this.fileNameStr = t$1;
							else {
								var r$1 = s.transformTo(e$1, this.fileName);
								this.fileNameStr = this.loadOptions.decodeFileName(r$1);
							}
							var n$1 = this.findExtraFieldUnicodeComment();
							if (null !== n$1) this.fileCommentStr = n$1;
							else {
								var i$3 = s.transformTo(e$1, this.fileComment);
								this.fileCommentStr = this.loadOptions.decodeFileName(i$3);
							}
						}
					},
					findExtraFieldUnicodePath: function() {
						var e$1 = this.extraFields[28789];
						if (e$1) {
							var t$1 = n(e$1.value);
							return 1 !== t$1.readInt(1) ? null : a(this.fileName) !== t$1.readInt(4) ? null : o.utf8decode(t$1.readData(e$1.length - 5));
						}
						return null;
					},
					findExtraFieldUnicodeComment: function() {
						var e$1 = this.extraFields[25461];
						if (e$1) {
							var t$1 = n(e$1.value);
							return 1 !== t$1.readInt(1) ? null : a(this.fileComment) !== t$1.readInt(4) ? null : o.utf8decode(t$1.readData(e$1.length - 5));
						}
						return null;
					}
				}, t.exports = l;
			}, {
				"./compressedObject": 2,
				"./compressions": 3,
				"./crc32": 4,
				"./reader/readerFor": 22,
				"./support": 30,
				"./utf8": 31,
				"./utils": 32
			}],
			35: [function(e, t, r) {
				function n(e$1, t$1, r$1) {
					this.name = e$1, this.dir = r$1.dir, this.date = r$1.date, this.comment = r$1.comment, this.unixPermissions = r$1.unixPermissions, this.dosPermissions = r$1.dosPermissions, this._data = t$1, this._dataBinary = r$1.binary, this.options = {
						compression: r$1.compression,
						compressionOptions: r$1.compressionOptions
					};
				}
				var s = e("./stream/StreamHelper"), i$2 = e("./stream/DataWorker"), a = e("./utf8"), o = e("./compressedObject"), h = e("./stream/GenericWorker");
				n.prototype = {
					internalStream: function(e$1) {
						var t$1 = null, r$1 = "string";
						try {
							if (!e$1) throw new Error("No output type specified.");
							var n$1 = "string" === (r$1 = e$1.toLowerCase()) || "text" === r$1;
							"binarystring" !== r$1 && "text" !== r$1 || (r$1 = "string"), t$1 = this._decompressWorker();
							var i$3 = !this._dataBinary;
							i$3 && !n$1 && (t$1 = t$1.pipe(new a.Utf8EncodeWorker())), !i$3 && n$1 && (t$1 = t$1.pipe(new a.Utf8DecodeWorker()));
						} catch (e$2) {
							(t$1 = new h("error")).error(e$2);
						}
						return new s(t$1, r$1, "");
					},
					async: function(e$1, t$1) {
						return this.internalStream(e$1).accumulate(t$1);
					},
					nodeStream: function(e$1, t$1) {
						return this.internalStream(e$1 || "nodebuffer").toNodejsStream(t$1);
					},
					_compressWorker: function(e$1, t$1) {
						if (this._data instanceof o && this._data.compression.magic === e$1.magic) return this._data.getCompressedWorker();
						var r$1 = this._decompressWorker();
						return this._dataBinary || (r$1 = r$1.pipe(new a.Utf8EncodeWorker())), o.createWorkerFrom(r$1, e$1, t$1);
					},
					_decompressWorker: function() {
						return this._data instanceof o ? this._data.getContentWorker() : this._data instanceof h ? this._data : new i$2(this._data);
					}
				};
				for (var u = [
					"asText",
					"asBinary",
					"asNodeBuffer",
					"asUint8Array",
					"asArrayBuffer"
				], l = function() {
					throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.");
				}, f = 0; f < u.length; f++) n.prototype[u[f]] = l;
				t.exports = n;
			}, {
				"./compressedObject": 2,
				"./stream/DataWorker": 27,
				"./stream/GenericWorker": 28,
				"./stream/StreamHelper": 29,
				"./utf8": 31
			}],
			36: [function(e, l, t) {
				(function(t$1) {
					var r, n, e$1 = t$1.MutationObserver || t$1.WebKitMutationObserver;
					if (e$1) {
						var i$2 = 0, s = new e$1(u), a = t$1.document.createTextNode("");
						s.observe(a, { characterData: !0 }), r = function() {
							a.data = i$2 = ++i$2 % 2;
						};
					} else if (t$1.setImmediate || void 0 === t$1.MessageChannel) r = "document" in t$1 && "onreadystatechange" in t$1.document.createElement("script") ? function() {
						var e$2 = t$1.document.createElement("script");
						e$2.onreadystatechange = function() {
							u(), e$2.onreadystatechange = null, e$2.parentNode.removeChild(e$2), e$2 = null;
						}, t$1.document.documentElement.appendChild(e$2);
					} : function() {
						setTimeout(u, 0);
					};
					else {
						var o = new t$1.MessageChannel();
						o.port1.onmessage = u, r = function() {
							o.port2.postMessage(0);
						};
					}
					var h = [];
					function u() {
						var e$2, t$2;
						n = !0;
						for (var r$1 = h.length; r$1;) {
							for (t$2 = h, h = [], e$2 = -1; ++e$2 < r$1;) t$2[e$2]();
							r$1 = h.length;
						}
						n = !1;
					}
					l.exports = function(e$2) {
						1 !== h.push(e$2) || n || r();
					};
				}).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
			}, {}],
			37: [function(e, t, r) {
				var i$2 = e("immediate");
				function u() {}
				var l = {}, s = ["REJECTED"], a = ["FULFILLED"], n = ["PENDING"];
				function o(e$1) {
					if ("function" != typeof e$1) throw new TypeError("resolver must be a function");
					this.state = n, this.queue = [], this.outcome = void 0, e$1 !== u && d(this, e$1);
				}
				function h(e$1, t$1, r$1) {
					this.promise = e$1, "function" == typeof t$1 && (this.onFulfilled = t$1, this.callFulfilled = this.otherCallFulfilled), "function" == typeof r$1 && (this.onRejected = r$1, this.callRejected = this.otherCallRejected);
				}
				function f(t$1, r$1, n$1) {
					i$2(function() {
						var e$1;
						try {
							e$1 = r$1(n$1);
						} catch (e$2) {
							return l.reject(t$1, e$2);
						}
						e$1 === t$1 ? l.reject(t$1, /* @__PURE__ */ new TypeError("Cannot resolve promise with itself")) : l.resolve(t$1, e$1);
					});
				}
				function c(e$1) {
					var t$1 = e$1 && e$1.then;
					if (e$1 && ("object" == typeof e$1 || "function" == typeof e$1) && "function" == typeof t$1) return function() {
						t$1.apply(e$1, arguments);
					};
				}
				function d(t$1, e$1) {
					var r$1 = !1;
					function n$1(e$2) {
						r$1 || (r$1 = !0, l.reject(t$1, e$2));
					}
					function i$3(e$2) {
						r$1 || (r$1 = !0, l.resolve(t$1, e$2));
					}
					var s$1 = p(function() {
						e$1(i$3, n$1);
					});
					"error" === s$1.status && n$1(s$1.value);
				}
				function p(e$1, t$1) {
					var r$1 = {};
					try {
						r$1.value = e$1(t$1), r$1.status = "success";
					} catch (e$2) {
						r$1.status = "error", r$1.value = e$2;
					}
					return r$1;
				}
				(t.exports = o).prototype.finally = function(t$1) {
					if ("function" != typeof t$1) return this;
					var r$1 = this.constructor;
					return this.then(function(e$1) {
						return r$1.resolve(t$1()).then(function() {
							return e$1;
						});
					}, function(e$1) {
						return r$1.resolve(t$1()).then(function() {
							throw e$1;
						});
					});
				}, o.prototype.catch = function(e$1) {
					return this.then(null, e$1);
				}, o.prototype.then = function(e$1, t$1) {
					if ("function" != typeof e$1 && this.state === a || "function" != typeof t$1 && this.state === s) return this;
					var r$1 = new this.constructor(u);
					this.state !== n ? f(r$1, this.state === a ? e$1 : t$1, this.outcome) : this.queue.push(new h(r$1, e$1, t$1));
					return r$1;
				}, h.prototype.callFulfilled = function(e$1) {
					l.resolve(this.promise, e$1);
				}, h.prototype.otherCallFulfilled = function(e$1) {
					f(this.promise, this.onFulfilled, e$1);
				}, h.prototype.callRejected = function(e$1) {
					l.reject(this.promise, e$1);
				}, h.prototype.otherCallRejected = function(e$1) {
					f(this.promise, this.onRejected, e$1);
				}, l.resolve = function(e$1, t$1) {
					var r$1 = p(c, t$1);
					if ("error" === r$1.status) return l.reject(e$1, r$1.value);
					var n$1 = r$1.value;
					if (n$1) d(e$1, n$1);
					else {
						e$1.state = a, e$1.outcome = t$1;
						for (var i$3 = -1, s$1 = e$1.queue.length; ++i$3 < s$1;) e$1.queue[i$3].callFulfilled(t$1);
					}
					return e$1;
				}, l.reject = function(e$1, t$1) {
					e$1.state = s, e$1.outcome = t$1;
					for (var r$1 = -1, n$1 = e$1.queue.length; ++r$1 < n$1;) e$1.queue[r$1].callRejected(t$1);
					return e$1;
				}, o.resolve = function(e$1) {
					if (e$1 instanceof this) return e$1;
					return l.resolve(new this(u), e$1);
				}, o.reject = function(e$1) {
					var t$1 = new this(u);
					return l.reject(t$1, e$1);
				}, o.all = function(e$1) {
					var r$1 = this;
					if ("[object Array]" !== Object.prototype.toString.call(e$1)) return this.reject(/* @__PURE__ */ new TypeError("must be an array"));
					var n$1 = e$1.length, i$3 = !1;
					if (!n$1) return this.resolve([]);
					var s$1 = new Array(n$1), a$1 = 0, t$1 = -1, o$1 = new this(u);
					for (; ++t$1 < n$1;) h$1(e$1[t$1], t$1);
					return o$1;
					function h$1(e$2, t$2) {
						r$1.resolve(e$2).then(function(e$3) {
							s$1[t$2] = e$3, ++a$1 !== n$1 || i$3 || (i$3 = !0, l.resolve(o$1, s$1));
						}, function(e$3) {
							i$3 || (i$3 = !0, l.reject(o$1, e$3));
						});
					}
				}, o.race = function(e$1) {
					var t$1 = this;
					if ("[object Array]" !== Object.prototype.toString.call(e$1)) return this.reject(/* @__PURE__ */ new TypeError("must be an array"));
					var r$1 = e$1.length, n$1 = !1;
					if (!r$1) return this.resolve([]);
					var i$3 = -1, s$1 = new this(u);
					for (; ++i$3 < r$1;) a$1 = e$1[i$3], t$1.resolve(a$1).then(function(e$2) {
						n$1 || (n$1 = !0, l.resolve(s$1, e$2));
					}, function(e$2) {
						n$1 || (n$1 = !0, l.reject(s$1, e$2));
					});
					var a$1;
					return s$1;
				};
			}, { immediate: 36 }],
			38: [function(e, t, r) {
				var n = {};
				(0, e("./lib/utils/common").assign)(n, e("./lib/deflate"), e("./lib/inflate"), e("./lib/zlib/constants")), t.exports = n;
			}, {
				"./lib/deflate": 39,
				"./lib/inflate": 40,
				"./lib/utils/common": 41,
				"./lib/zlib/constants": 44
			}],
			39: [function(e, t, r) {
				var a = e("./zlib/deflate"), o = e("./utils/common"), h = e("./utils/strings"), i$2 = e("./zlib/messages"), s = e("./zlib/zstream"), u = Object.prototype.toString, l = 0, f = -1, c = 0, d = 8;
				function p(e$1) {
					if (!(this instanceof p)) return new p(e$1);
					this.options = o.assign({
						level: f,
						method: d,
						chunkSize: 16384,
						windowBits: 15,
						memLevel: 8,
						strategy: c,
						to: ""
					}, e$1 || {});
					var t$1 = this.options;
					t$1.raw && 0 < t$1.windowBits ? t$1.windowBits = -t$1.windowBits : t$1.gzip && 0 < t$1.windowBits && t$1.windowBits < 16 && (t$1.windowBits += 16), this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new s(), this.strm.avail_out = 0;
					var r$1 = a.deflateInit2(this.strm, t$1.level, t$1.method, t$1.windowBits, t$1.memLevel, t$1.strategy);
					if (r$1 !== l) throw new Error(i$2[r$1]);
					if (t$1.header && a.deflateSetHeader(this.strm, t$1.header), t$1.dictionary) {
						var n$1;
						if (n$1 = "string" == typeof t$1.dictionary ? h.string2buf(t$1.dictionary) : "[object ArrayBuffer]" === u.call(t$1.dictionary) ? new Uint8Array(t$1.dictionary) : t$1.dictionary, (r$1 = a.deflateSetDictionary(this.strm, n$1)) !== l) throw new Error(i$2[r$1]);
						this._dict_set = !0;
					}
				}
				function n(e$1, t$1) {
					var r$1 = new p(t$1);
					if (r$1.push(e$1, !0), r$1.err) throw r$1.msg || i$2[r$1.err];
					return r$1.result;
				}
				p.prototype.push = function(e$1, t$1) {
					var r$1, n$1, i$3 = this.strm, s$1 = this.options.chunkSize;
					if (this.ended) return !1;
					n$1 = t$1 === ~~t$1 ? t$1 : !0 === t$1 ? 4 : 0, "string" == typeof e$1 ? i$3.input = h.string2buf(e$1) : "[object ArrayBuffer]" === u.call(e$1) ? i$3.input = new Uint8Array(e$1) : i$3.input = e$1, i$3.next_in = 0, i$3.avail_in = i$3.input.length;
					do {
						if (0 === i$3.avail_out && (i$3.output = new o.Buf8(s$1), i$3.next_out = 0, i$3.avail_out = s$1), 1 !== (r$1 = a.deflate(i$3, n$1)) && r$1 !== l) return this.onEnd(r$1), !(this.ended = !0);
						0 !== i$3.avail_out && (0 !== i$3.avail_in || 4 !== n$1 && 2 !== n$1) || ("string" === this.options.to ? this.onData(h.buf2binstring(o.shrinkBuf(i$3.output, i$3.next_out))) : this.onData(o.shrinkBuf(i$3.output, i$3.next_out)));
					} while ((0 < i$3.avail_in || 0 === i$3.avail_out) && 1 !== r$1);
					return 4 === n$1 ? (r$1 = a.deflateEnd(this.strm), this.onEnd(r$1), this.ended = !0, r$1 === l) : 2 !== n$1 || (this.onEnd(l), !(i$3.avail_out = 0));
				}, p.prototype.onData = function(e$1) {
					this.chunks.push(e$1);
				}, p.prototype.onEnd = function(e$1) {
					e$1 === l && ("string" === this.options.to ? this.result = this.chunks.join("") : this.result = o.flattenChunks(this.chunks)), this.chunks = [], this.err = e$1, this.msg = this.strm.msg;
				}, r.Deflate = p, r.deflate = n, r.deflateRaw = function(e$1, t$1) {
					return (t$1 = t$1 || {}).raw = !0, n(e$1, t$1);
				}, r.gzip = function(e$1, t$1) {
					return (t$1 = t$1 || {}).gzip = !0, n(e$1, t$1);
				};
			}, {
				"./utils/common": 41,
				"./utils/strings": 42,
				"./zlib/deflate": 46,
				"./zlib/messages": 51,
				"./zlib/zstream": 53
			}],
			40: [function(e, t, r) {
				var c = e("./zlib/inflate"), d = e("./utils/common"), p = e("./utils/strings"), m = e("./zlib/constants"), n = e("./zlib/messages"), i$2 = e("./zlib/zstream"), s = e("./zlib/gzheader"), _$23 = Object.prototype.toString;
				function a(e$1) {
					if (!(this instanceof a)) return new a(e$1);
					this.options = d.assign({
						chunkSize: 16384,
						windowBits: 0,
						to: ""
					}, e$1 || {});
					var t$1 = this.options;
					t$1.raw && 0 <= t$1.windowBits && t$1.windowBits < 16 && (t$1.windowBits = -t$1.windowBits, 0 === t$1.windowBits && (t$1.windowBits = -15)), !(0 <= t$1.windowBits && t$1.windowBits < 16) || e$1 && e$1.windowBits || (t$1.windowBits += 32), 15 < t$1.windowBits && t$1.windowBits < 48 && 0 == (15 & t$1.windowBits) && (t$1.windowBits |= 15), this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new i$2(), this.strm.avail_out = 0;
					var r$1 = c.inflateInit2(this.strm, t$1.windowBits);
					if (r$1 !== m.Z_OK) throw new Error(n[r$1]);
					this.header = new s(), c.inflateGetHeader(this.strm, this.header);
				}
				function o(e$1, t$1) {
					var r$1 = new a(t$1);
					if (r$1.push(e$1, !0), r$1.err) throw r$1.msg || n[r$1.err];
					return r$1.result;
				}
				a.prototype.push = function(e$1, t$1) {
					var r$1, n$1, i$3, s$1, a$1, o$1, h = this.strm, u = this.options.chunkSize, l = this.options.dictionary, f = !1;
					if (this.ended) return !1;
					n$1 = t$1 === ~~t$1 ? t$1 : !0 === t$1 ? m.Z_FINISH : m.Z_NO_FLUSH, "string" == typeof e$1 ? h.input = p.binstring2buf(e$1) : "[object ArrayBuffer]" === _$23.call(e$1) ? h.input = new Uint8Array(e$1) : h.input = e$1, h.next_in = 0, h.avail_in = h.input.length;
					do {
						if (0 === h.avail_out && (h.output = new d.Buf8(u), h.next_out = 0, h.avail_out = u), (r$1 = c.inflate(h, m.Z_NO_FLUSH)) === m.Z_NEED_DICT && l && (o$1 = "string" == typeof l ? p.string2buf(l) : "[object ArrayBuffer]" === _$23.call(l) ? new Uint8Array(l) : l, r$1 = c.inflateSetDictionary(this.strm, o$1)), r$1 === m.Z_BUF_ERROR && !0 === f && (r$1 = m.Z_OK, f = !1), r$1 !== m.Z_STREAM_END && r$1 !== m.Z_OK) return this.onEnd(r$1), !(this.ended = !0);
						h.next_out && (0 !== h.avail_out && r$1 !== m.Z_STREAM_END && (0 !== h.avail_in || n$1 !== m.Z_FINISH && n$1 !== m.Z_SYNC_FLUSH) || ("string" === this.options.to ? (i$3 = p.utf8border(h.output, h.next_out), s$1 = h.next_out - i$3, a$1 = p.buf2string(h.output, i$3), h.next_out = s$1, h.avail_out = u - s$1, s$1 && d.arraySet(h.output, h.output, i$3, s$1, 0), this.onData(a$1)) : this.onData(d.shrinkBuf(h.output, h.next_out)))), 0 === h.avail_in && 0 === h.avail_out && (f = !0);
					} while ((0 < h.avail_in || 0 === h.avail_out) && r$1 !== m.Z_STREAM_END);
					return r$1 === m.Z_STREAM_END && (n$1 = m.Z_FINISH), n$1 === m.Z_FINISH ? (r$1 = c.inflateEnd(this.strm), this.onEnd(r$1), this.ended = !0, r$1 === m.Z_OK) : n$1 !== m.Z_SYNC_FLUSH || (this.onEnd(m.Z_OK), !(h.avail_out = 0));
				}, a.prototype.onData = function(e$1) {
					this.chunks.push(e$1);
				}, a.prototype.onEnd = function(e$1) {
					e$1 === m.Z_OK && ("string" === this.options.to ? this.result = this.chunks.join("") : this.result = d.flattenChunks(this.chunks)), this.chunks = [], this.err = e$1, this.msg = this.strm.msg;
				}, r.Inflate = a, r.inflate = o, r.inflateRaw = function(e$1, t$1) {
					return (t$1 = t$1 || {}).raw = !0, o(e$1, t$1);
				}, r.ungzip = o;
			}, {
				"./utils/common": 41,
				"./utils/strings": 42,
				"./zlib/constants": 44,
				"./zlib/gzheader": 47,
				"./zlib/inflate": 49,
				"./zlib/messages": 51,
				"./zlib/zstream": 53
			}],
			41: [function(e, t, r) {
				var n = "undefined" != typeof Uint8Array && "undefined" != typeof Uint16Array && "undefined" != typeof Int32Array;
				r.assign = function(e$1) {
					for (var t$1 = Array.prototype.slice.call(arguments, 1); t$1.length;) {
						var r$1 = t$1.shift();
						if (r$1) {
							if ("object" != typeof r$1) throw new TypeError(r$1 + "must be non-object");
							for (var n$1 in r$1) r$1.hasOwnProperty(n$1) && (e$1[n$1] = r$1[n$1]);
						}
					}
					return e$1;
				}, r.shrinkBuf = function(e$1, t$1) {
					return e$1.length === t$1 ? e$1 : e$1.subarray ? e$1.subarray(0, t$1) : (e$1.length = t$1, e$1);
				};
				var i$2 = {
					arraySet: function(e$1, t$1, r$1, n$1, i$3) {
						if (t$1.subarray && e$1.subarray) e$1.set(t$1.subarray(r$1, r$1 + n$1), i$3);
						else for (var s$1 = 0; s$1 < n$1; s$1++) e$1[i$3 + s$1] = t$1[r$1 + s$1];
					},
					flattenChunks: function(e$1) {
						var t$1, r$1, n$1, i$3, s$1, a;
						for (t$1 = n$1 = 0, r$1 = e$1.length; t$1 < r$1; t$1++) n$1 += e$1[t$1].length;
						for (a = new Uint8Array(n$1), t$1 = i$3 = 0, r$1 = e$1.length; t$1 < r$1; t$1++) s$1 = e$1[t$1], a.set(s$1, i$3), i$3 += s$1.length;
						return a;
					}
				}, s = {
					arraySet: function(e$1, t$1, r$1, n$1, i$3) {
						for (var s$1 = 0; s$1 < n$1; s$1++) e$1[i$3 + s$1] = t$1[r$1 + s$1];
					},
					flattenChunks: function(e$1) {
						return [].concat.apply([], e$1);
					}
				};
				r.setTyped = function(e$1) {
					e$1 ? (r.Buf8 = Uint8Array, r.Buf16 = Uint16Array, r.Buf32 = Int32Array, r.assign(r, i$2)) : (r.Buf8 = Array, r.Buf16 = Array, r.Buf32 = Array, r.assign(r, s));
				}, r.setTyped(n);
			}, {}],
			42: [function(e, t, r) {
				var h = e("./common"), i$2 = !0, s = !0;
				try {
					String.fromCharCode.apply(null, [0]);
				} catch (e$1) {
					i$2 = !1;
				}
				try {
					String.fromCharCode.apply(null, new Uint8Array(1));
				} catch (e$1) {
					s = !1;
				}
				for (var u = new h.Buf8(256), n = 0; n < 256; n++) u[n] = 252 <= n ? 6 : 248 <= n ? 5 : 240 <= n ? 4 : 224 <= n ? 3 : 192 <= n ? 2 : 1;
				function l(e$1, t$1) {
					if (t$1 < 65537 && (e$1.subarray && s || !e$1.subarray && i$2)) return String.fromCharCode.apply(null, h.shrinkBuf(e$1, t$1));
					for (var r$1 = "", n$1 = 0; n$1 < t$1; n$1++) r$1 += String.fromCharCode(e$1[n$1]);
					return r$1;
				}
				u[254] = u[254] = 1, r.string2buf = function(e$1) {
					var t$1, r$1, n$1, i$3, s$1, a = e$1.length, o = 0;
					for (i$3 = 0; i$3 < a; i$3++) 55296 == (64512 & (r$1 = e$1.charCodeAt(i$3))) && i$3 + 1 < a && 56320 == (64512 & (n$1 = e$1.charCodeAt(i$3 + 1))) && (r$1 = 65536 + (r$1 - 55296 << 10) + (n$1 - 56320), i$3++), o += r$1 < 128 ? 1 : r$1 < 2048 ? 2 : r$1 < 65536 ? 3 : 4;
					for (t$1 = new h.Buf8(o), i$3 = s$1 = 0; s$1 < o; i$3++) 55296 == (64512 & (r$1 = e$1.charCodeAt(i$3))) && i$3 + 1 < a && 56320 == (64512 & (n$1 = e$1.charCodeAt(i$3 + 1))) && (r$1 = 65536 + (r$1 - 55296 << 10) + (n$1 - 56320), i$3++), r$1 < 128 ? t$1[s$1++] = r$1 : (r$1 < 2048 ? t$1[s$1++] = 192 | r$1 >>> 6 : (r$1 < 65536 ? t$1[s$1++] = 224 | r$1 >>> 12 : (t$1[s$1++] = 240 | r$1 >>> 18, t$1[s$1++] = 128 | r$1 >>> 12 & 63), t$1[s$1++] = 128 | r$1 >>> 6 & 63), t$1[s$1++] = 128 | 63 & r$1);
					return t$1;
				}, r.buf2binstring = function(e$1) {
					return l(e$1, e$1.length);
				}, r.binstring2buf = function(e$1) {
					for (var t$1 = new h.Buf8(e$1.length), r$1 = 0, n$1 = t$1.length; r$1 < n$1; r$1++) t$1[r$1] = e$1.charCodeAt(r$1);
					return t$1;
				}, r.buf2string = function(e$1, t$1) {
					var r$1, n$1, i$3, s$1, a = t$1 || e$1.length, o = new Array(2 * a);
					for (r$1 = n$1 = 0; r$1 < a;) if ((i$3 = e$1[r$1++]) < 128) o[n$1++] = i$3;
					else if (4 < (s$1 = u[i$3])) o[n$1++] = 65533, r$1 += s$1 - 1;
					else {
						for (i$3 &= 2 === s$1 ? 31 : 3 === s$1 ? 15 : 7; 1 < s$1 && r$1 < a;) i$3 = i$3 << 6 | 63 & e$1[r$1++], s$1--;
						1 < s$1 ? o[n$1++] = 65533 : i$3 < 65536 ? o[n$1++] = i$3 : (i$3 -= 65536, o[n$1++] = 55296 | i$3 >> 10 & 1023, o[n$1++] = 56320 | 1023 & i$3);
					}
					return l(o, n$1);
				}, r.utf8border = function(e$1, t$1) {
					var r$1;
					for ((t$1 = t$1 || e$1.length) > e$1.length && (t$1 = e$1.length), r$1 = t$1 - 1; 0 <= r$1 && 128 == (192 & e$1[r$1]);) r$1--;
					return r$1 < 0 ? t$1 : 0 === r$1 ? t$1 : r$1 + u[e$1[r$1]] > t$1 ? r$1 : t$1;
				};
			}, { "./common": 41 }],
			43: [function(e, t, r) {
				t.exports = function(e$1, t$1, r$1, n) {
					for (var i$2 = 65535 & e$1 | 0, s = e$1 >>> 16 & 65535 | 0, a = 0; 0 !== r$1;) {
						for (r$1 -= a = 2e3 < r$1 ? 2e3 : r$1; s = s + (i$2 = i$2 + t$1[n++] | 0) | 0, --a;);
						i$2 %= 65521, s %= 65521;
					}
					return i$2 | s << 16 | 0;
				};
			}, {}],
			44: [function(e, t, r) {
				t.exports = {
					Z_NO_FLUSH: 0,
					Z_PARTIAL_FLUSH: 1,
					Z_SYNC_FLUSH: 2,
					Z_FULL_FLUSH: 3,
					Z_FINISH: 4,
					Z_BLOCK: 5,
					Z_TREES: 6,
					Z_OK: 0,
					Z_STREAM_END: 1,
					Z_NEED_DICT: 2,
					Z_ERRNO: -1,
					Z_STREAM_ERROR: -2,
					Z_DATA_ERROR: -3,
					Z_BUF_ERROR: -5,
					Z_NO_COMPRESSION: 0,
					Z_BEST_SPEED: 1,
					Z_BEST_COMPRESSION: 9,
					Z_DEFAULT_COMPRESSION: -1,
					Z_FILTERED: 1,
					Z_HUFFMAN_ONLY: 2,
					Z_RLE: 3,
					Z_FIXED: 4,
					Z_DEFAULT_STRATEGY: 0,
					Z_BINARY: 0,
					Z_TEXT: 1,
					Z_UNKNOWN: 2,
					Z_DEFLATED: 8
				};
			}, {}],
			45: [function(e, t, r) {
				var o = function() {
					for (var e$1, t$1 = [], r$1 = 0; r$1 < 256; r$1++) {
						e$1 = r$1;
						for (var n = 0; n < 8; n++) e$1 = 1 & e$1 ? 3988292384 ^ e$1 >>> 1 : e$1 >>> 1;
						t$1[r$1] = e$1;
					}
					return t$1;
				}();
				t.exports = function(e$1, t$1, r$1, n) {
					var i$2 = o, s = n + r$1;
					e$1 ^= -1;
					for (var a = n; a < s; a++) e$1 = e$1 >>> 8 ^ i$2[255 & (e$1 ^ t$1[a])];
					return -1 ^ e$1;
				};
			}, {}],
			46: [function(e, t, r) {
				var h, c = e("../utils/common"), u = e("./trees"), d = e("./adler32"), p = e("./crc32"), n = e("./messages"), l = 0, f = 4, m = 0, _$23 = -2, g = -1, b = 4, i$2 = 2, v = 8, y = 9, s = 286, a = 30, o = 19, w = 2 * s + 1, k = 15, x = 3, S = 258, z = S + x + 1, C = 42, E = 113, A = 1, I = 2, O = 3, B = 4;
				function R(e$1, t$1) {
					return e$1.msg = n[t$1], t$1;
				}
				function T(e$1) {
					return (e$1 << 1) - (4 < e$1 ? 9 : 0);
				}
				function D(e$1) {
					for (var t$1 = e$1.length; 0 <= --t$1;) e$1[t$1] = 0;
				}
				function F(e$1) {
					var t$1 = e$1.state, r$1 = t$1.pending;
					r$1 > e$1.avail_out && (r$1 = e$1.avail_out), 0 !== r$1 && (c.arraySet(e$1.output, t$1.pending_buf, t$1.pending_out, r$1, e$1.next_out), e$1.next_out += r$1, t$1.pending_out += r$1, e$1.total_out += r$1, e$1.avail_out -= r$1, t$1.pending -= r$1, 0 === t$1.pending && (t$1.pending_out = 0));
				}
				function N(e$1, t$1) {
					u._tr_flush_block(e$1, 0 <= e$1.block_start ? e$1.block_start : -1, e$1.strstart - e$1.block_start, t$1), e$1.block_start = e$1.strstart, F(e$1.strm);
				}
				function U(e$1, t$1) {
					e$1.pending_buf[e$1.pending++] = t$1;
				}
				function P(e$1, t$1) {
					e$1.pending_buf[e$1.pending++] = t$1 >>> 8 & 255, e$1.pending_buf[e$1.pending++] = 255 & t$1;
				}
				function L(e$1, t$1) {
					var r$1, n$1, i$3 = e$1.max_chain_length, s$1 = e$1.strstart, a$1 = e$1.prev_length, o$1 = e$1.nice_match, h$1 = e$1.strstart > e$1.w_size - z ? e$1.strstart - (e$1.w_size - z) : 0, u$1 = e$1.window, l$1 = e$1.w_mask, f$1 = e$1.prev, c$1 = e$1.strstart + S, d$1 = u$1[s$1 + a$1 - 1], p$1 = u$1[s$1 + a$1];
					e$1.prev_length >= e$1.good_match && (i$3 >>= 2), o$1 > e$1.lookahead && (o$1 = e$1.lookahead);
					do
						if (u$1[(r$1 = t$1) + a$1] === p$1 && u$1[r$1 + a$1 - 1] === d$1 && u$1[r$1] === u$1[s$1] && u$1[++r$1] === u$1[s$1 + 1]) {
							s$1 += 2, r$1++;
							do							;
while (u$1[++s$1] === u$1[++r$1] && u$1[++s$1] === u$1[++r$1] && u$1[++s$1] === u$1[++r$1] && u$1[++s$1] === u$1[++r$1] && u$1[++s$1] === u$1[++r$1] && u$1[++s$1] === u$1[++r$1] && u$1[++s$1] === u$1[++r$1] && u$1[++s$1] === u$1[++r$1] && s$1 < c$1);
							if (n$1 = S - (c$1 - s$1), s$1 = c$1 - S, a$1 < n$1) {
								if (e$1.match_start = t$1, o$1 <= (a$1 = n$1)) break;
								d$1 = u$1[s$1 + a$1 - 1], p$1 = u$1[s$1 + a$1];
							}
						}
					while ((t$1 = f$1[t$1 & l$1]) > h$1 && 0 != --i$3);
					return a$1 <= e$1.lookahead ? a$1 : e$1.lookahead;
				}
				function j(e$1) {
					var t$1, r$1, n$1, i$3, s$1, a$1, o$1, h$1, u$1, l$1, f$1 = e$1.w_size;
					do {
						if (i$3 = e$1.window_size - e$1.lookahead - e$1.strstart, e$1.strstart >= f$1 + (f$1 - z)) {
							for (c.arraySet(e$1.window, e$1.window, f$1, f$1, 0), e$1.match_start -= f$1, e$1.strstart -= f$1, e$1.block_start -= f$1, t$1 = r$1 = e$1.hash_size; n$1 = e$1.head[--t$1], e$1.head[t$1] = f$1 <= n$1 ? n$1 - f$1 : 0, --r$1;);
							for (t$1 = r$1 = f$1; n$1 = e$1.prev[--t$1], e$1.prev[t$1] = f$1 <= n$1 ? n$1 - f$1 : 0, --r$1;);
							i$3 += f$1;
						}
						if (0 === e$1.strm.avail_in) break;
						if (a$1 = e$1.strm, o$1 = e$1.window, h$1 = e$1.strstart + e$1.lookahead, u$1 = i$3, l$1 = void 0, l$1 = a$1.avail_in, u$1 < l$1 && (l$1 = u$1), r$1 = 0 === l$1 ? 0 : (a$1.avail_in -= l$1, c.arraySet(o$1, a$1.input, a$1.next_in, l$1, h$1), 1 === a$1.state.wrap ? a$1.adler = d(a$1.adler, o$1, l$1, h$1) : 2 === a$1.state.wrap && (a$1.adler = p(a$1.adler, o$1, l$1, h$1)), a$1.next_in += l$1, a$1.total_in += l$1, l$1), e$1.lookahead += r$1, e$1.lookahead + e$1.insert >= x) for (s$1 = e$1.strstart - e$1.insert, e$1.ins_h = e$1.window[s$1], e$1.ins_h = (e$1.ins_h << e$1.hash_shift ^ e$1.window[s$1 + 1]) & e$1.hash_mask; e$1.insert && (e$1.ins_h = (e$1.ins_h << e$1.hash_shift ^ e$1.window[s$1 + x - 1]) & e$1.hash_mask, e$1.prev[s$1 & e$1.w_mask] = e$1.head[e$1.ins_h], e$1.head[e$1.ins_h] = s$1, s$1++, e$1.insert--, !(e$1.lookahead + e$1.insert < x)););
					} while (e$1.lookahead < z && 0 !== e$1.strm.avail_in);
				}
				function Z(e$1, t$1) {
					for (var r$1, n$1;;) {
						if (e$1.lookahead < z) {
							if (j(e$1), e$1.lookahead < z && t$1 === l) return A;
							if (0 === e$1.lookahead) break;
						}
						if (r$1 = 0, e$1.lookahead >= x && (e$1.ins_h = (e$1.ins_h << e$1.hash_shift ^ e$1.window[e$1.strstart + x - 1]) & e$1.hash_mask, r$1 = e$1.prev[e$1.strstart & e$1.w_mask] = e$1.head[e$1.ins_h], e$1.head[e$1.ins_h] = e$1.strstart), 0 !== r$1 && e$1.strstart - r$1 <= e$1.w_size - z && (e$1.match_length = L(e$1, r$1)), e$1.match_length >= x) if (n$1 = u._tr_tally(e$1, e$1.strstart - e$1.match_start, e$1.match_length - x), e$1.lookahead -= e$1.match_length, e$1.match_length <= e$1.max_lazy_match && e$1.lookahead >= x) {
							for (e$1.match_length--; e$1.strstart++, e$1.ins_h = (e$1.ins_h << e$1.hash_shift ^ e$1.window[e$1.strstart + x - 1]) & e$1.hash_mask, r$1 = e$1.prev[e$1.strstart & e$1.w_mask] = e$1.head[e$1.ins_h], e$1.head[e$1.ins_h] = e$1.strstart, 0 != --e$1.match_length;);
							e$1.strstart++;
						} else e$1.strstart += e$1.match_length, e$1.match_length = 0, e$1.ins_h = e$1.window[e$1.strstart], e$1.ins_h = (e$1.ins_h << e$1.hash_shift ^ e$1.window[e$1.strstart + 1]) & e$1.hash_mask;
						else n$1 = u._tr_tally(e$1, 0, e$1.window[e$1.strstart]), e$1.lookahead--, e$1.strstart++;
						if (n$1 && (N(e$1, !1), 0 === e$1.strm.avail_out)) return A;
					}
					return e$1.insert = e$1.strstart < x - 1 ? e$1.strstart : x - 1, t$1 === f ? (N(e$1, !0), 0 === e$1.strm.avail_out ? O : B) : e$1.last_lit && (N(e$1, !1), 0 === e$1.strm.avail_out) ? A : I;
				}
				function W(e$1, t$1) {
					for (var r$1, n$1, i$3;;) {
						if (e$1.lookahead < z) {
							if (j(e$1), e$1.lookahead < z && t$1 === l) return A;
							if (0 === e$1.lookahead) break;
						}
						if (r$1 = 0, e$1.lookahead >= x && (e$1.ins_h = (e$1.ins_h << e$1.hash_shift ^ e$1.window[e$1.strstart + x - 1]) & e$1.hash_mask, r$1 = e$1.prev[e$1.strstart & e$1.w_mask] = e$1.head[e$1.ins_h], e$1.head[e$1.ins_h] = e$1.strstart), e$1.prev_length = e$1.match_length, e$1.prev_match = e$1.match_start, e$1.match_length = x - 1, 0 !== r$1 && e$1.prev_length < e$1.max_lazy_match && e$1.strstart - r$1 <= e$1.w_size - z && (e$1.match_length = L(e$1, r$1), e$1.match_length <= 5 && (1 === e$1.strategy || e$1.match_length === x && 4096 < e$1.strstart - e$1.match_start) && (e$1.match_length = x - 1)), e$1.prev_length >= x && e$1.match_length <= e$1.prev_length) {
							for (i$3 = e$1.strstart + e$1.lookahead - x, n$1 = u._tr_tally(e$1, e$1.strstart - 1 - e$1.prev_match, e$1.prev_length - x), e$1.lookahead -= e$1.prev_length - 1, e$1.prev_length -= 2; ++e$1.strstart <= i$3 && (e$1.ins_h = (e$1.ins_h << e$1.hash_shift ^ e$1.window[e$1.strstart + x - 1]) & e$1.hash_mask, r$1 = e$1.prev[e$1.strstart & e$1.w_mask] = e$1.head[e$1.ins_h], e$1.head[e$1.ins_h] = e$1.strstart), 0 != --e$1.prev_length;);
							if (e$1.match_available = 0, e$1.match_length = x - 1, e$1.strstart++, n$1 && (N(e$1, !1), 0 === e$1.strm.avail_out)) return A;
						} else if (e$1.match_available) {
							if ((n$1 = u._tr_tally(e$1, 0, e$1.window[e$1.strstart - 1])) && N(e$1, !1), e$1.strstart++, e$1.lookahead--, 0 === e$1.strm.avail_out) return A;
						} else e$1.match_available = 1, e$1.strstart++, e$1.lookahead--;
					}
					return e$1.match_available && (n$1 = u._tr_tally(e$1, 0, e$1.window[e$1.strstart - 1]), e$1.match_available = 0), e$1.insert = e$1.strstart < x - 1 ? e$1.strstart : x - 1, t$1 === f ? (N(e$1, !0), 0 === e$1.strm.avail_out ? O : B) : e$1.last_lit && (N(e$1, !1), 0 === e$1.strm.avail_out) ? A : I;
				}
				function M(e$1, t$1, r$1, n$1, i$3) {
					this.good_length = e$1, this.max_lazy = t$1, this.nice_length = r$1, this.max_chain = n$1, this.func = i$3;
				}
				function H() {
					this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = v, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new c.Buf16(2 * w), this.dyn_dtree = new c.Buf16(2 * (2 * a + 1)), this.bl_tree = new c.Buf16(2 * (2 * o + 1)), D(this.dyn_ltree), D(this.dyn_dtree), D(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new c.Buf16(k + 1), this.heap = new c.Buf16(2 * s + 1), D(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new c.Buf16(2 * s + 1), D(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0;
				}
				function G(e$1) {
					var t$1;
					return e$1 && e$1.state ? (e$1.total_in = e$1.total_out = 0, e$1.data_type = i$2, (t$1 = e$1.state).pending = 0, t$1.pending_out = 0, t$1.wrap < 0 && (t$1.wrap = -t$1.wrap), t$1.status = t$1.wrap ? C : E, e$1.adler = 2 === t$1.wrap ? 0 : 1, t$1.last_flush = l, u._tr_init(t$1), m) : R(e$1, _$23);
				}
				function K(e$1) {
					var t$1 = G(e$1);
					return t$1 === m && function(e$2) {
						e$2.window_size = 2 * e$2.w_size, D(e$2.head), e$2.max_lazy_match = h[e$2.level].max_lazy, e$2.good_match = h[e$2.level].good_length, e$2.nice_match = h[e$2.level].nice_length, e$2.max_chain_length = h[e$2.level].max_chain, e$2.strstart = 0, e$2.block_start = 0, e$2.lookahead = 0, e$2.insert = 0, e$2.match_length = e$2.prev_length = x - 1, e$2.match_available = 0, e$2.ins_h = 0;
					}(e$1.state), t$1;
				}
				function Y(e$1, t$1, r$1, n$1, i$3, s$1) {
					if (!e$1) return _$23;
					var a$1 = 1;
					if (t$1 === g && (t$1 = 6), n$1 < 0 ? (a$1 = 0, n$1 = -n$1) : 15 < n$1 && (a$1 = 2, n$1 -= 16), i$3 < 1 || y < i$3 || r$1 !== v || n$1 < 8 || 15 < n$1 || t$1 < 0 || 9 < t$1 || s$1 < 0 || b < s$1) return R(e$1, _$23);
					8 === n$1 && (n$1 = 9);
					var o$1 = new H();
					return (e$1.state = o$1).strm = e$1, o$1.wrap = a$1, o$1.gzhead = null, o$1.w_bits = n$1, o$1.w_size = 1 << o$1.w_bits, o$1.w_mask = o$1.w_size - 1, o$1.hash_bits = i$3 + 7, o$1.hash_size = 1 << o$1.hash_bits, o$1.hash_mask = o$1.hash_size - 1, o$1.hash_shift = ~~((o$1.hash_bits + x - 1) / x), o$1.window = new c.Buf8(2 * o$1.w_size), o$1.head = new c.Buf16(o$1.hash_size), o$1.prev = new c.Buf16(o$1.w_size), o$1.lit_bufsize = 1 << i$3 + 6, o$1.pending_buf_size = 4 * o$1.lit_bufsize, o$1.pending_buf = new c.Buf8(o$1.pending_buf_size), o$1.d_buf = 1 * o$1.lit_bufsize, o$1.l_buf = 3 * o$1.lit_bufsize, o$1.level = t$1, o$1.strategy = s$1, o$1.method = r$1, K(e$1);
				}
				h = [
					new M(0, 0, 0, 0, function(e$1, t$1) {
						var r$1 = 65535;
						for (r$1 > e$1.pending_buf_size - 5 && (r$1 = e$1.pending_buf_size - 5);;) {
							if (e$1.lookahead <= 1) {
								if (j(e$1), 0 === e$1.lookahead && t$1 === l) return A;
								if (0 === e$1.lookahead) break;
							}
							e$1.strstart += e$1.lookahead, e$1.lookahead = 0;
							var n$1 = e$1.block_start + r$1;
							if ((0 === e$1.strstart || e$1.strstart >= n$1) && (e$1.lookahead = e$1.strstart - n$1, e$1.strstart = n$1, N(e$1, !1), 0 === e$1.strm.avail_out)) return A;
							if (e$1.strstart - e$1.block_start >= e$1.w_size - z && (N(e$1, !1), 0 === e$1.strm.avail_out)) return A;
						}
						return e$1.insert = 0, t$1 === f ? (N(e$1, !0), 0 === e$1.strm.avail_out ? O : B) : (e$1.strstart > e$1.block_start && (N(e$1, !1), e$1.strm.avail_out), A);
					}),
					new M(4, 4, 8, 4, Z),
					new M(4, 5, 16, 8, Z),
					new M(4, 6, 32, 32, Z),
					new M(4, 4, 16, 16, W),
					new M(8, 16, 32, 32, W),
					new M(8, 16, 128, 128, W),
					new M(8, 32, 128, 256, W),
					new M(32, 128, 258, 1024, W),
					new M(32, 258, 258, 4096, W)
				], r.deflateInit = function(e$1, t$1) {
					return Y(e$1, t$1, v, 15, 8, 0);
				}, r.deflateInit2 = Y, r.deflateReset = K, r.deflateResetKeep = G, r.deflateSetHeader = function(e$1, t$1) {
					return e$1 && e$1.state ? 2 !== e$1.state.wrap ? _$23 : (e$1.state.gzhead = t$1, m) : _$23;
				}, r.deflate = function(e$1, t$1) {
					var r$1, n$1, i$3, s$1;
					if (!e$1 || !e$1.state || 5 < t$1 || t$1 < 0) return e$1 ? R(e$1, _$23) : _$23;
					if (n$1 = e$1.state, !e$1.output || !e$1.input && 0 !== e$1.avail_in || 666 === n$1.status && t$1 !== f) return R(e$1, 0 === e$1.avail_out ? -5 : _$23);
					if (n$1.strm = e$1, r$1 = n$1.last_flush, n$1.last_flush = t$1, n$1.status === C) if (2 === n$1.wrap) e$1.adler = 0, U(n$1, 31), U(n$1, 139), U(n$1, 8), n$1.gzhead ? (U(n$1, (n$1.gzhead.text ? 1 : 0) + (n$1.gzhead.hcrc ? 2 : 0) + (n$1.gzhead.extra ? 4 : 0) + (n$1.gzhead.name ? 8 : 0) + (n$1.gzhead.comment ? 16 : 0)), U(n$1, 255 & n$1.gzhead.time), U(n$1, n$1.gzhead.time >> 8 & 255), U(n$1, n$1.gzhead.time >> 16 & 255), U(n$1, n$1.gzhead.time >> 24 & 255), U(n$1, 9 === n$1.level ? 2 : 2 <= n$1.strategy || n$1.level < 2 ? 4 : 0), U(n$1, 255 & n$1.gzhead.os), n$1.gzhead.extra && n$1.gzhead.extra.length && (U(n$1, 255 & n$1.gzhead.extra.length), U(n$1, n$1.gzhead.extra.length >> 8 & 255)), n$1.gzhead.hcrc && (e$1.adler = p(e$1.adler, n$1.pending_buf, n$1.pending, 0)), n$1.gzindex = 0, n$1.status = 69) : (U(n$1, 0), U(n$1, 0), U(n$1, 0), U(n$1, 0), U(n$1, 0), U(n$1, 9 === n$1.level ? 2 : 2 <= n$1.strategy || n$1.level < 2 ? 4 : 0), U(n$1, 3), n$1.status = E);
					else {
						var a$1 = v + (n$1.w_bits - 8 << 4) << 8;
						a$1 |= (2 <= n$1.strategy || n$1.level < 2 ? 0 : n$1.level < 6 ? 1 : 6 === n$1.level ? 2 : 3) << 6, 0 !== n$1.strstart && (a$1 |= 32), a$1 += 31 - a$1 % 31, n$1.status = E, P(n$1, a$1), 0 !== n$1.strstart && (P(n$1, e$1.adler >>> 16), P(n$1, 65535 & e$1.adler)), e$1.adler = 1;
					}
					if (69 === n$1.status) if (n$1.gzhead.extra) {
						for (i$3 = n$1.pending; n$1.gzindex < (65535 & n$1.gzhead.extra.length) && (n$1.pending !== n$1.pending_buf_size || (n$1.gzhead.hcrc && n$1.pending > i$3 && (e$1.adler = p(e$1.adler, n$1.pending_buf, n$1.pending - i$3, i$3)), F(e$1), i$3 = n$1.pending, n$1.pending !== n$1.pending_buf_size));) U(n$1, 255 & n$1.gzhead.extra[n$1.gzindex]), n$1.gzindex++;
						n$1.gzhead.hcrc && n$1.pending > i$3 && (e$1.adler = p(e$1.adler, n$1.pending_buf, n$1.pending - i$3, i$3)), n$1.gzindex === n$1.gzhead.extra.length && (n$1.gzindex = 0, n$1.status = 73);
					} else n$1.status = 73;
					if (73 === n$1.status) if (n$1.gzhead.name) {
						i$3 = n$1.pending;
						do {
							if (n$1.pending === n$1.pending_buf_size && (n$1.gzhead.hcrc && n$1.pending > i$3 && (e$1.adler = p(e$1.adler, n$1.pending_buf, n$1.pending - i$3, i$3)), F(e$1), i$3 = n$1.pending, n$1.pending === n$1.pending_buf_size)) {
								s$1 = 1;
								break;
							}
							s$1 = n$1.gzindex < n$1.gzhead.name.length ? 255 & n$1.gzhead.name.charCodeAt(n$1.gzindex++) : 0, U(n$1, s$1);
						} while (0 !== s$1);
						n$1.gzhead.hcrc && n$1.pending > i$3 && (e$1.adler = p(e$1.adler, n$1.pending_buf, n$1.pending - i$3, i$3)), 0 === s$1 && (n$1.gzindex = 0, n$1.status = 91);
					} else n$1.status = 91;
					if (91 === n$1.status) if (n$1.gzhead.comment) {
						i$3 = n$1.pending;
						do {
							if (n$1.pending === n$1.pending_buf_size && (n$1.gzhead.hcrc && n$1.pending > i$3 && (e$1.adler = p(e$1.adler, n$1.pending_buf, n$1.pending - i$3, i$3)), F(e$1), i$3 = n$1.pending, n$1.pending === n$1.pending_buf_size)) {
								s$1 = 1;
								break;
							}
							s$1 = n$1.gzindex < n$1.gzhead.comment.length ? 255 & n$1.gzhead.comment.charCodeAt(n$1.gzindex++) : 0, U(n$1, s$1);
						} while (0 !== s$1);
						n$1.gzhead.hcrc && n$1.pending > i$3 && (e$1.adler = p(e$1.adler, n$1.pending_buf, n$1.pending - i$3, i$3)), 0 === s$1 && (n$1.status = 103);
					} else n$1.status = 103;
					if (103 === n$1.status && (n$1.gzhead.hcrc ? (n$1.pending + 2 > n$1.pending_buf_size && F(e$1), n$1.pending + 2 <= n$1.pending_buf_size && (U(n$1, 255 & e$1.adler), U(n$1, e$1.adler >> 8 & 255), e$1.adler = 0, n$1.status = E)) : n$1.status = E), 0 !== n$1.pending) {
						if (F(e$1), 0 === e$1.avail_out) return n$1.last_flush = -1, m;
					} else if (0 === e$1.avail_in && T(t$1) <= T(r$1) && t$1 !== f) return R(e$1, -5);
					if (666 === n$1.status && 0 !== e$1.avail_in) return R(e$1, -5);
					if (0 !== e$1.avail_in || 0 !== n$1.lookahead || t$1 !== l && 666 !== n$1.status) {
						var o$1 = 2 === n$1.strategy ? function(e$2, t$2) {
							for (var r$2;;) {
								if (0 === e$2.lookahead && (j(e$2), 0 === e$2.lookahead)) {
									if (t$2 === l) return A;
									break;
								}
								if (e$2.match_length = 0, r$2 = u._tr_tally(e$2, 0, e$2.window[e$2.strstart]), e$2.lookahead--, e$2.strstart++, r$2 && (N(e$2, !1), 0 === e$2.strm.avail_out)) return A;
							}
							return e$2.insert = 0, t$2 === f ? (N(e$2, !0), 0 === e$2.strm.avail_out ? O : B) : e$2.last_lit && (N(e$2, !1), 0 === e$2.strm.avail_out) ? A : I;
						}(n$1, t$1) : 3 === n$1.strategy ? function(e$2, t$2) {
							for (var r$2, n$2, i$4, s$2, a$2 = e$2.window;;) {
								if (e$2.lookahead <= S) {
									if (j(e$2), e$2.lookahead <= S && t$2 === l) return A;
									if (0 === e$2.lookahead) break;
								}
								if (e$2.match_length = 0, e$2.lookahead >= x && 0 < e$2.strstart && (n$2 = a$2[i$4 = e$2.strstart - 1]) === a$2[++i$4] && n$2 === a$2[++i$4] && n$2 === a$2[++i$4]) {
									s$2 = e$2.strstart + S;
									do									;
while (n$2 === a$2[++i$4] && n$2 === a$2[++i$4] && n$2 === a$2[++i$4] && n$2 === a$2[++i$4] && n$2 === a$2[++i$4] && n$2 === a$2[++i$4] && n$2 === a$2[++i$4] && n$2 === a$2[++i$4] && i$4 < s$2);
									e$2.match_length = S - (s$2 - i$4), e$2.match_length > e$2.lookahead && (e$2.match_length = e$2.lookahead);
								}
								if (e$2.match_length >= x ? (r$2 = u._tr_tally(e$2, 1, e$2.match_length - x), e$2.lookahead -= e$2.match_length, e$2.strstart += e$2.match_length, e$2.match_length = 0) : (r$2 = u._tr_tally(e$2, 0, e$2.window[e$2.strstart]), e$2.lookahead--, e$2.strstart++), r$2 && (N(e$2, !1), 0 === e$2.strm.avail_out)) return A;
							}
							return e$2.insert = 0, t$2 === f ? (N(e$2, !0), 0 === e$2.strm.avail_out ? O : B) : e$2.last_lit && (N(e$2, !1), 0 === e$2.strm.avail_out) ? A : I;
						}(n$1, t$1) : h[n$1.level].func(n$1, t$1);
						if (o$1 !== O && o$1 !== B || (n$1.status = 666), o$1 === A || o$1 === O) return 0 === e$1.avail_out && (n$1.last_flush = -1), m;
						if (o$1 === I && (1 === t$1 ? u._tr_align(n$1) : 5 !== t$1 && (u._tr_stored_block(n$1, 0, 0, !1), 3 === t$1 && (D(n$1.head), 0 === n$1.lookahead && (n$1.strstart = 0, n$1.block_start = 0, n$1.insert = 0))), F(e$1), 0 === e$1.avail_out)) return n$1.last_flush = -1, m;
					}
					return t$1 !== f ? m : n$1.wrap <= 0 ? 1 : (2 === n$1.wrap ? (U(n$1, 255 & e$1.adler), U(n$1, e$1.adler >> 8 & 255), U(n$1, e$1.adler >> 16 & 255), U(n$1, e$1.adler >> 24 & 255), U(n$1, 255 & e$1.total_in), U(n$1, e$1.total_in >> 8 & 255), U(n$1, e$1.total_in >> 16 & 255), U(n$1, e$1.total_in >> 24 & 255)) : (P(n$1, e$1.adler >>> 16), P(n$1, 65535 & e$1.adler)), F(e$1), 0 < n$1.wrap && (n$1.wrap = -n$1.wrap), 0 !== n$1.pending ? m : 1);
				}, r.deflateEnd = function(e$1) {
					var t$1;
					return e$1 && e$1.state ? (t$1 = e$1.state.status) !== C && 69 !== t$1 && 73 !== t$1 && 91 !== t$1 && 103 !== t$1 && t$1 !== E && 666 !== t$1 ? R(e$1, _$23) : (e$1.state = null, t$1 === E ? R(e$1, -3) : m) : _$23;
				}, r.deflateSetDictionary = function(e$1, t$1) {
					var r$1, n$1, i$3, s$1, a$1, o$1, h$1, u$1, l$1 = t$1.length;
					if (!e$1 || !e$1.state) return _$23;
					if (2 === (s$1 = (r$1 = e$1.state).wrap) || 1 === s$1 && r$1.status !== C || r$1.lookahead) return _$23;
					for (1 === s$1 && (e$1.adler = d(e$1.adler, t$1, l$1, 0)), r$1.wrap = 0, l$1 >= r$1.w_size && (0 === s$1 && (D(r$1.head), r$1.strstart = 0, r$1.block_start = 0, r$1.insert = 0), u$1 = new c.Buf8(r$1.w_size), c.arraySet(u$1, t$1, l$1 - r$1.w_size, r$1.w_size, 0), t$1 = u$1, l$1 = r$1.w_size), a$1 = e$1.avail_in, o$1 = e$1.next_in, h$1 = e$1.input, e$1.avail_in = l$1, e$1.next_in = 0, e$1.input = t$1, j(r$1); r$1.lookahead >= x;) {
						for (n$1 = r$1.strstart, i$3 = r$1.lookahead - (x - 1); r$1.ins_h = (r$1.ins_h << r$1.hash_shift ^ r$1.window[n$1 + x - 1]) & r$1.hash_mask, r$1.prev[n$1 & r$1.w_mask] = r$1.head[r$1.ins_h], r$1.head[r$1.ins_h] = n$1, n$1++, --i$3;);
						r$1.strstart = n$1, r$1.lookahead = x - 1, j(r$1);
					}
					return r$1.strstart += r$1.lookahead, r$1.block_start = r$1.strstart, r$1.insert = r$1.lookahead, r$1.lookahead = 0, r$1.match_length = r$1.prev_length = x - 1, r$1.match_available = 0, e$1.next_in = o$1, e$1.input = h$1, e$1.avail_in = a$1, r$1.wrap = s$1, m;
				}, r.deflateInfo = "pako deflate (from Nodeca project)";
			}, {
				"../utils/common": 41,
				"./adler32": 43,
				"./crc32": 45,
				"./messages": 51,
				"./trees": 52
			}],
			47: [function(e, t, r) {
				t.exports = function() {
					this.text = 0, this.time = 0, this.xflags = 0, this.os = 0, this.extra = null, this.extra_len = 0, this.name = "", this.comment = "", this.hcrc = 0, this.done = !1;
				};
			}, {}],
			48: [function(e, t, r) {
				t.exports = function(e$1, t$1) {
					var r$1 = e$1.state, n = e$1.next_in, i$2, s, a, o, h, u, l, f, c, d, p, m, _$23, g, b, v, y, w, k, x, S, z = e$1.input, C;
					i$2 = n + (e$1.avail_in - 5), s = e$1.next_out, C = e$1.output, a = s - (t$1 - e$1.avail_out), o = s + (e$1.avail_out - 257), h = r$1.dmax, u = r$1.wsize, l = r$1.whave, f = r$1.wnext, c = r$1.window, d = r$1.hold, p = r$1.bits, m = r$1.lencode, _$23 = r$1.distcode, g = (1 << r$1.lenbits) - 1, b = (1 << r$1.distbits) - 1;
					e: do {
						p < 15 && (d += z[n++] << p, p += 8, d += z[n++] << p, p += 8), v = m[d & g];
						t: for (;;) {
							if (d >>>= y = v >>> 24, p -= y, 0 === (y = v >>> 16 & 255)) C[s++] = 65535 & v;
							else {
								if (!(16 & y)) {
									if (0 == (64 & y)) {
										v = m[(65535 & v) + (d & (1 << y) - 1)];
										continue t;
									}
									if (32 & y) {
										r$1.mode = 12;
										break e;
									}
									e$1.msg = "invalid literal/length code", r$1.mode = 30;
									break e;
								}
								w = 65535 & v, (y &= 15) && (p < y && (d += z[n++] << p, p += 8), w += d & (1 << y) - 1, d >>>= y, p -= y), p < 15 && (d += z[n++] << p, p += 8, d += z[n++] << p, p += 8), v = _$23[d & b];
								r: for (;;) {
									if (d >>>= y = v >>> 24, p -= y, !(16 & (y = v >>> 16 & 255))) {
										if (0 == (64 & y)) {
											v = _$23[(65535 & v) + (d & (1 << y) - 1)];
											continue r;
										}
										e$1.msg = "invalid distance code", r$1.mode = 30;
										break e;
									}
									if (k = 65535 & v, p < (y &= 15) && (d += z[n++] << p, (p += 8) < y && (d += z[n++] << p, p += 8)), h < (k += d & (1 << y) - 1)) {
										e$1.msg = "invalid distance too far back", r$1.mode = 30;
										break e;
									}
									if (d >>>= y, p -= y, (y = s - a) < k) {
										if (l < (y = k - y) && r$1.sane) {
											e$1.msg = "invalid distance too far back", r$1.mode = 30;
											break e;
										}
										if (S = c, (x = 0) === f) {
											if (x += u - y, y < w) {
												for (w -= y; C[s++] = c[x++], --y;);
												x = s - k, S = C;
											}
										} else if (f < y) {
											if (x += u + f - y, (y -= f) < w) {
												for (w -= y; C[s++] = c[x++], --y;);
												if (x = 0, f < w) {
													for (w -= y = f; C[s++] = c[x++], --y;);
													x = s - k, S = C;
												}
											}
										} else if (x += f - y, y < w) {
											for (w -= y; C[s++] = c[x++], --y;);
											x = s - k, S = C;
										}
										for (; 2 < w;) C[s++] = S[x++], C[s++] = S[x++], C[s++] = S[x++], w -= 3;
										w && (C[s++] = S[x++], 1 < w && (C[s++] = S[x++]));
									} else {
										for (x = s - k; C[s++] = C[x++], C[s++] = C[x++], C[s++] = C[x++], 2 < (w -= 3););
										w && (C[s++] = C[x++], 1 < w && (C[s++] = C[x++]));
									}
									break;
								}
							}
							break;
						}
					} while (n < i$2 && s < o);
					n -= w = p >> 3, d &= (1 << (p -= w << 3)) - 1, e$1.next_in = n, e$1.next_out = s, e$1.avail_in = n < i$2 ? i$2 - n + 5 : 5 - (n - i$2), e$1.avail_out = s < o ? o - s + 257 : 257 - (s - o), r$1.hold = d, r$1.bits = p;
				};
			}, {}],
			49: [function(e, t, r) {
				var I = e("../utils/common"), O = e("./adler32"), B = e("./crc32"), R = e("./inffast"), T = e("./inftrees"), D = 1, F = 2, N = 0, U = -2, P = 1, n = 852, i$2 = 592;
				function L(e$1) {
					return (e$1 >>> 24 & 255) + (e$1 >>> 8 & 65280) + ((65280 & e$1) << 8) + ((255 & e$1) << 24);
				}
				function s() {
					this.mode = 0, this.last = !1, this.wrap = 0, this.havedict = !1, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new I.Buf16(320), this.work = new I.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0;
				}
				function a(e$1) {
					var t$1;
					return e$1 && e$1.state ? (t$1 = e$1.state, e$1.total_in = e$1.total_out = t$1.total = 0, e$1.msg = "", t$1.wrap && (e$1.adler = 1 & t$1.wrap), t$1.mode = P, t$1.last = 0, t$1.havedict = 0, t$1.dmax = 32768, t$1.head = null, t$1.hold = 0, t$1.bits = 0, t$1.lencode = t$1.lendyn = new I.Buf32(n), t$1.distcode = t$1.distdyn = new I.Buf32(i$2), t$1.sane = 1, t$1.back = -1, N) : U;
				}
				function o(e$1) {
					var t$1;
					return e$1 && e$1.state ? ((t$1 = e$1.state).wsize = 0, t$1.whave = 0, t$1.wnext = 0, a(e$1)) : U;
				}
				function h(e$1, t$1) {
					var r$1, n$1;
					return e$1 && e$1.state ? (n$1 = e$1.state, t$1 < 0 ? (r$1 = 0, t$1 = -t$1) : (r$1 = 1 + (t$1 >> 4), t$1 < 48 && (t$1 &= 15)), t$1 && (t$1 < 8 || 15 < t$1) ? U : (null !== n$1.window && n$1.wbits !== t$1 && (n$1.window = null), n$1.wrap = r$1, n$1.wbits = t$1, o(e$1))) : U;
				}
				function u(e$1, t$1) {
					var r$1, n$1;
					return e$1 ? (n$1 = new s(), (e$1.state = n$1).window = null, (r$1 = h(e$1, t$1)) !== N && (e$1.state = null), r$1) : U;
				}
				var l, f, c = !0;
				function j(e$1) {
					if (c) {
						var t$1;
						for (l = new I.Buf32(512), f = new I.Buf32(32), t$1 = 0; t$1 < 144;) e$1.lens[t$1++] = 8;
						for (; t$1 < 256;) e$1.lens[t$1++] = 9;
						for (; t$1 < 280;) e$1.lens[t$1++] = 7;
						for (; t$1 < 288;) e$1.lens[t$1++] = 8;
						for (T(D, e$1.lens, 0, 288, l, 0, e$1.work, { bits: 9 }), t$1 = 0; t$1 < 32;) e$1.lens[t$1++] = 5;
						T(F, e$1.lens, 0, 32, f, 0, e$1.work, { bits: 5 }), c = !1;
					}
					e$1.lencode = l, e$1.lenbits = 9, e$1.distcode = f, e$1.distbits = 5;
				}
				function Z(e$1, t$1, r$1, n$1) {
					var i$3, s$1 = e$1.state;
					return null === s$1.window && (s$1.wsize = 1 << s$1.wbits, s$1.wnext = 0, s$1.whave = 0, s$1.window = new I.Buf8(s$1.wsize)), n$1 >= s$1.wsize ? (I.arraySet(s$1.window, t$1, r$1 - s$1.wsize, s$1.wsize, 0), s$1.wnext = 0, s$1.whave = s$1.wsize) : (n$1 < (i$3 = s$1.wsize - s$1.wnext) && (i$3 = n$1), I.arraySet(s$1.window, t$1, r$1 - n$1, i$3, s$1.wnext), (n$1 -= i$3) ? (I.arraySet(s$1.window, t$1, r$1 - n$1, n$1, 0), s$1.wnext = n$1, s$1.whave = s$1.wsize) : (s$1.wnext += i$3, s$1.wnext === s$1.wsize && (s$1.wnext = 0), s$1.whave < s$1.wsize && (s$1.whave += i$3))), 0;
				}
				r.inflateReset = o, r.inflateReset2 = h, r.inflateResetKeep = a, r.inflateInit = function(e$1) {
					return u(e$1, 15);
				}, r.inflateInit2 = u, r.inflate = function(e$1, t$1) {
					var r$1, n$1, i$3, s$1, a$1, o$1, h$1, u$1, l$1, f$1, c$1, d, p, m, _$23, g, b, v, y, w, k, x, S, z, C = 0, E = new I.Buf8(4), A = [
						16,
						17,
						18,
						0,
						8,
						7,
						9,
						6,
						10,
						5,
						11,
						4,
						12,
						3,
						13,
						2,
						14,
						1,
						15
					];
					if (!e$1 || !e$1.state || !e$1.output || !e$1.input && 0 !== e$1.avail_in) return U;
					12 === (r$1 = e$1.state).mode && (r$1.mode = 13), a$1 = e$1.next_out, i$3 = e$1.output, h$1 = e$1.avail_out, s$1 = e$1.next_in, n$1 = e$1.input, o$1 = e$1.avail_in, u$1 = r$1.hold, l$1 = r$1.bits, f$1 = o$1, c$1 = h$1, x = N;
					e: for (;;) switch (r$1.mode) {
						case P:
							if (0 === r$1.wrap) {
								r$1.mode = 13;
								break;
							}
							for (; l$1 < 16;) {
								if (0 === o$1) break e;
								o$1--, u$1 += n$1[s$1++] << l$1, l$1 += 8;
							}
							if (2 & r$1.wrap && 35615 === u$1) {
								E[r$1.check = 0] = 255 & u$1, E[1] = u$1 >>> 8 & 255, r$1.check = B(r$1.check, E, 2, 0), l$1 = u$1 = 0, r$1.mode = 2;
								break;
							}
							if (r$1.flags = 0, r$1.head && (r$1.head.done = !1), !(1 & r$1.wrap) || (((255 & u$1) << 8) + (u$1 >> 8)) % 31) {
								e$1.msg = "incorrect header check", r$1.mode = 30;
								break;
							}
							if (8 != (15 & u$1)) {
								e$1.msg = "unknown compression method", r$1.mode = 30;
								break;
							}
							if (l$1 -= 4, k = 8 + (15 & (u$1 >>>= 4)), 0 === r$1.wbits) r$1.wbits = k;
							else if (k > r$1.wbits) {
								e$1.msg = "invalid window size", r$1.mode = 30;
								break;
							}
							r$1.dmax = 1 << k, e$1.adler = r$1.check = 1, r$1.mode = 512 & u$1 ? 10 : 12, l$1 = u$1 = 0;
							break;
						case 2:
							for (; l$1 < 16;) {
								if (0 === o$1) break e;
								o$1--, u$1 += n$1[s$1++] << l$1, l$1 += 8;
							}
							if (r$1.flags = u$1, 8 != (255 & r$1.flags)) {
								e$1.msg = "unknown compression method", r$1.mode = 30;
								break;
							}
							if (57344 & r$1.flags) {
								e$1.msg = "unknown header flags set", r$1.mode = 30;
								break;
							}
							r$1.head && (r$1.head.text = u$1 >> 8 & 1), 512 & r$1.flags && (E[0] = 255 & u$1, E[1] = u$1 >>> 8 & 255, r$1.check = B(r$1.check, E, 2, 0)), l$1 = u$1 = 0, r$1.mode = 3;
						case 3:
							for (; l$1 < 32;) {
								if (0 === o$1) break e;
								o$1--, u$1 += n$1[s$1++] << l$1, l$1 += 8;
							}
							r$1.head && (r$1.head.time = u$1), 512 & r$1.flags && (E[0] = 255 & u$1, E[1] = u$1 >>> 8 & 255, E[2] = u$1 >>> 16 & 255, E[3] = u$1 >>> 24 & 255, r$1.check = B(r$1.check, E, 4, 0)), l$1 = u$1 = 0, r$1.mode = 4;
						case 4:
							for (; l$1 < 16;) {
								if (0 === o$1) break e;
								o$1--, u$1 += n$1[s$1++] << l$1, l$1 += 8;
							}
							r$1.head && (r$1.head.xflags = 255 & u$1, r$1.head.os = u$1 >> 8), 512 & r$1.flags && (E[0] = 255 & u$1, E[1] = u$1 >>> 8 & 255, r$1.check = B(r$1.check, E, 2, 0)), l$1 = u$1 = 0, r$1.mode = 5;
						case 5:
							if (1024 & r$1.flags) {
								for (; l$1 < 16;) {
									if (0 === o$1) break e;
									o$1--, u$1 += n$1[s$1++] << l$1, l$1 += 8;
								}
								r$1.length = u$1, r$1.head && (r$1.head.extra_len = u$1), 512 & r$1.flags && (E[0] = 255 & u$1, E[1] = u$1 >>> 8 & 255, r$1.check = B(r$1.check, E, 2, 0)), l$1 = u$1 = 0;
							} else r$1.head && (r$1.head.extra = null);
							r$1.mode = 6;
						case 6:
							if (1024 & r$1.flags && (o$1 < (d = r$1.length) && (d = o$1), d && (r$1.head && (k = r$1.head.extra_len - r$1.length, r$1.head.extra || (r$1.head.extra = new Array(r$1.head.extra_len)), I.arraySet(r$1.head.extra, n$1, s$1, d, k)), 512 & r$1.flags && (r$1.check = B(r$1.check, n$1, d, s$1)), o$1 -= d, s$1 += d, r$1.length -= d), r$1.length)) break e;
							r$1.length = 0, r$1.mode = 7;
						case 7:
							if (2048 & r$1.flags) {
								if (0 === o$1) break e;
								for (d = 0; k = n$1[s$1 + d++], r$1.head && k && r$1.length < 65536 && (r$1.head.name += String.fromCharCode(k)), k && d < o$1;);
								if (512 & r$1.flags && (r$1.check = B(r$1.check, n$1, d, s$1)), o$1 -= d, s$1 += d, k) break e;
							} else r$1.head && (r$1.head.name = null);
							r$1.length = 0, r$1.mode = 8;
						case 8:
							if (4096 & r$1.flags) {
								if (0 === o$1) break e;
								for (d = 0; k = n$1[s$1 + d++], r$1.head && k && r$1.length < 65536 && (r$1.head.comment += String.fromCharCode(k)), k && d < o$1;);
								if (512 & r$1.flags && (r$1.check = B(r$1.check, n$1, d, s$1)), o$1 -= d, s$1 += d, k) break e;
							} else r$1.head && (r$1.head.comment = null);
							r$1.mode = 9;
						case 9:
							if (512 & r$1.flags) {
								for (; l$1 < 16;) {
									if (0 === o$1) break e;
									o$1--, u$1 += n$1[s$1++] << l$1, l$1 += 8;
								}
								if (u$1 !== (65535 & r$1.check)) {
									e$1.msg = "header crc mismatch", r$1.mode = 30;
									break;
								}
								l$1 = u$1 = 0;
							}
							r$1.head && (r$1.head.hcrc = r$1.flags >> 9 & 1, r$1.head.done = !0), e$1.adler = r$1.check = 0, r$1.mode = 12;
							break;
						case 10:
							for (; l$1 < 32;) {
								if (0 === o$1) break e;
								o$1--, u$1 += n$1[s$1++] << l$1, l$1 += 8;
							}
							e$1.adler = r$1.check = L(u$1), l$1 = u$1 = 0, r$1.mode = 11;
						case 11:
							if (0 === r$1.havedict) return e$1.next_out = a$1, e$1.avail_out = h$1, e$1.next_in = s$1, e$1.avail_in = o$1, r$1.hold = u$1, r$1.bits = l$1, 2;
							e$1.adler = r$1.check = 1, r$1.mode = 12;
						case 12: if (5 === t$1 || 6 === t$1) break e;
						case 13:
							if (r$1.last) {
								u$1 >>>= 7 & l$1, l$1 -= 7 & l$1, r$1.mode = 27;
								break;
							}
							for (; l$1 < 3;) {
								if (0 === o$1) break e;
								o$1--, u$1 += n$1[s$1++] << l$1, l$1 += 8;
							}
							switch (r$1.last = 1 & u$1, l$1 -= 1, 3 & (u$1 >>>= 1)) {
								case 0:
									r$1.mode = 14;
									break;
								case 1:
									if (j(r$1), r$1.mode = 20, 6 !== t$1) break;
									u$1 >>>= 2, l$1 -= 2;
									break e;
								case 2:
									r$1.mode = 17;
									break;
								case 3: e$1.msg = "invalid block type", r$1.mode = 30;
							}
							u$1 >>>= 2, l$1 -= 2;
							break;
						case 14:
							for (u$1 >>>= 7 & l$1, l$1 -= 7 & l$1; l$1 < 32;) {
								if (0 === o$1) break e;
								o$1--, u$1 += n$1[s$1++] << l$1, l$1 += 8;
							}
							if ((65535 & u$1) != (u$1 >>> 16 ^ 65535)) {
								e$1.msg = "invalid stored block lengths", r$1.mode = 30;
								break;
							}
							if (r$1.length = 65535 & u$1, l$1 = u$1 = 0, r$1.mode = 15, 6 === t$1) break e;
						case 15: r$1.mode = 16;
						case 16:
							if (d = r$1.length) {
								if (o$1 < d && (d = o$1), h$1 < d && (d = h$1), 0 === d) break e;
								I.arraySet(i$3, n$1, s$1, d, a$1), o$1 -= d, s$1 += d, h$1 -= d, a$1 += d, r$1.length -= d;
								break;
							}
							r$1.mode = 12;
							break;
						case 17:
							for (; l$1 < 14;) {
								if (0 === o$1) break e;
								o$1--, u$1 += n$1[s$1++] << l$1, l$1 += 8;
							}
							if (r$1.nlen = 257 + (31 & u$1), u$1 >>>= 5, l$1 -= 5, r$1.ndist = 1 + (31 & u$1), u$1 >>>= 5, l$1 -= 5, r$1.ncode = 4 + (15 & u$1), u$1 >>>= 4, l$1 -= 4, 286 < r$1.nlen || 30 < r$1.ndist) {
								e$1.msg = "too many length or distance symbols", r$1.mode = 30;
								break;
							}
							r$1.have = 0, r$1.mode = 18;
						case 18:
							for (; r$1.have < r$1.ncode;) {
								for (; l$1 < 3;) {
									if (0 === o$1) break e;
									o$1--, u$1 += n$1[s$1++] << l$1, l$1 += 8;
								}
								r$1.lens[A[r$1.have++]] = 7 & u$1, u$1 >>>= 3, l$1 -= 3;
							}
							for (; r$1.have < 19;) r$1.lens[A[r$1.have++]] = 0;
							if (r$1.lencode = r$1.lendyn, r$1.lenbits = 7, S = { bits: r$1.lenbits }, x = T(0, r$1.lens, 0, 19, r$1.lencode, 0, r$1.work, S), r$1.lenbits = S.bits, x) {
								e$1.msg = "invalid code lengths set", r$1.mode = 30;
								break;
							}
							r$1.have = 0, r$1.mode = 19;
						case 19:
							for (; r$1.have < r$1.nlen + r$1.ndist;) {
								for (; g = (C = r$1.lencode[u$1 & (1 << r$1.lenbits) - 1]) >>> 16 & 255, b = 65535 & C, !((_$23 = C >>> 24) <= l$1);) {
									if (0 === o$1) break e;
									o$1--, u$1 += n$1[s$1++] << l$1, l$1 += 8;
								}
								if (b < 16) u$1 >>>= _$23, l$1 -= _$23, r$1.lens[r$1.have++] = b;
								else {
									if (16 === b) {
										for (z = _$23 + 2; l$1 < z;) {
											if (0 === o$1) break e;
											o$1--, u$1 += n$1[s$1++] << l$1, l$1 += 8;
										}
										if (u$1 >>>= _$23, l$1 -= _$23, 0 === r$1.have) {
											e$1.msg = "invalid bit length repeat", r$1.mode = 30;
											break;
										}
										k = r$1.lens[r$1.have - 1], d = 3 + (3 & u$1), u$1 >>>= 2, l$1 -= 2;
									} else if (17 === b) {
										for (z = _$23 + 3; l$1 < z;) {
											if (0 === o$1) break e;
											o$1--, u$1 += n$1[s$1++] << l$1, l$1 += 8;
										}
										l$1 -= _$23, k = 0, d = 3 + (7 & (u$1 >>>= _$23)), u$1 >>>= 3, l$1 -= 3;
									} else {
										for (z = _$23 + 7; l$1 < z;) {
											if (0 === o$1) break e;
											o$1--, u$1 += n$1[s$1++] << l$1, l$1 += 8;
										}
										l$1 -= _$23, k = 0, d = 11 + (127 & (u$1 >>>= _$23)), u$1 >>>= 7, l$1 -= 7;
									}
									if (r$1.have + d > r$1.nlen + r$1.ndist) {
										e$1.msg = "invalid bit length repeat", r$1.mode = 30;
										break;
									}
									for (; d--;) r$1.lens[r$1.have++] = k;
								}
							}
							if (30 === r$1.mode) break;
							if (0 === r$1.lens[256]) {
								e$1.msg = "invalid code -- missing end-of-block", r$1.mode = 30;
								break;
							}
							if (r$1.lenbits = 9, S = { bits: r$1.lenbits }, x = T(D, r$1.lens, 0, r$1.nlen, r$1.lencode, 0, r$1.work, S), r$1.lenbits = S.bits, x) {
								e$1.msg = "invalid literal/lengths set", r$1.mode = 30;
								break;
							}
							if (r$1.distbits = 6, r$1.distcode = r$1.distdyn, S = { bits: r$1.distbits }, x = T(F, r$1.lens, r$1.nlen, r$1.ndist, r$1.distcode, 0, r$1.work, S), r$1.distbits = S.bits, x) {
								e$1.msg = "invalid distances set", r$1.mode = 30;
								break;
							}
							if (r$1.mode = 20, 6 === t$1) break e;
						case 20: r$1.mode = 21;
						case 21:
							if (6 <= o$1 && 258 <= h$1) {
								e$1.next_out = a$1, e$1.avail_out = h$1, e$1.next_in = s$1, e$1.avail_in = o$1, r$1.hold = u$1, r$1.bits = l$1, R(e$1, c$1), a$1 = e$1.next_out, i$3 = e$1.output, h$1 = e$1.avail_out, s$1 = e$1.next_in, n$1 = e$1.input, o$1 = e$1.avail_in, u$1 = r$1.hold, l$1 = r$1.bits, 12 === r$1.mode && (r$1.back = -1);
								break;
							}
							for (r$1.back = 0; g = (C = r$1.lencode[u$1 & (1 << r$1.lenbits) - 1]) >>> 16 & 255, b = 65535 & C, !((_$23 = C >>> 24) <= l$1);) {
								if (0 === o$1) break e;
								o$1--, u$1 += n$1[s$1++] << l$1, l$1 += 8;
							}
							if (g && 0 == (240 & g)) {
								for (v = _$23, y = g, w = b; g = (C = r$1.lencode[w + ((u$1 & (1 << v + y) - 1) >> v)]) >>> 16 & 255, b = 65535 & C, !(v + (_$23 = C >>> 24) <= l$1);) {
									if (0 === o$1) break e;
									o$1--, u$1 += n$1[s$1++] << l$1, l$1 += 8;
								}
								u$1 >>>= v, l$1 -= v, r$1.back += v;
							}
							if (u$1 >>>= _$23, l$1 -= _$23, r$1.back += _$23, r$1.length = b, 0 === g) {
								r$1.mode = 26;
								break;
							}
							if (32 & g) {
								r$1.back = -1, r$1.mode = 12;
								break;
							}
							if (64 & g) {
								e$1.msg = "invalid literal/length code", r$1.mode = 30;
								break;
							}
							r$1.extra = 15 & g, r$1.mode = 22;
						case 22:
							if (r$1.extra) {
								for (z = r$1.extra; l$1 < z;) {
									if (0 === o$1) break e;
									o$1--, u$1 += n$1[s$1++] << l$1, l$1 += 8;
								}
								r$1.length += u$1 & (1 << r$1.extra) - 1, u$1 >>>= r$1.extra, l$1 -= r$1.extra, r$1.back += r$1.extra;
							}
							r$1.was = r$1.length, r$1.mode = 23;
						case 23:
							for (; g = (C = r$1.distcode[u$1 & (1 << r$1.distbits) - 1]) >>> 16 & 255, b = 65535 & C, !((_$23 = C >>> 24) <= l$1);) {
								if (0 === o$1) break e;
								o$1--, u$1 += n$1[s$1++] << l$1, l$1 += 8;
							}
							if (0 == (240 & g)) {
								for (v = _$23, y = g, w = b; g = (C = r$1.distcode[w + ((u$1 & (1 << v + y) - 1) >> v)]) >>> 16 & 255, b = 65535 & C, !(v + (_$23 = C >>> 24) <= l$1);) {
									if (0 === o$1) break e;
									o$1--, u$1 += n$1[s$1++] << l$1, l$1 += 8;
								}
								u$1 >>>= v, l$1 -= v, r$1.back += v;
							}
							if (u$1 >>>= _$23, l$1 -= _$23, r$1.back += _$23, 64 & g) {
								e$1.msg = "invalid distance code", r$1.mode = 30;
								break;
							}
							r$1.offset = b, r$1.extra = 15 & g, r$1.mode = 24;
						case 24:
							if (r$1.extra) {
								for (z = r$1.extra; l$1 < z;) {
									if (0 === o$1) break e;
									o$1--, u$1 += n$1[s$1++] << l$1, l$1 += 8;
								}
								r$1.offset += u$1 & (1 << r$1.extra) - 1, u$1 >>>= r$1.extra, l$1 -= r$1.extra, r$1.back += r$1.extra;
							}
							if (r$1.offset > r$1.dmax) {
								e$1.msg = "invalid distance too far back", r$1.mode = 30;
								break;
							}
							r$1.mode = 25;
						case 25:
							if (0 === h$1) break e;
							if (d = c$1 - h$1, r$1.offset > d) {
								if ((d = r$1.offset - d) > r$1.whave && r$1.sane) {
									e$1.msg = "invalid distance too far back", r$1.mode = 30;
									break;
								}
								p = d > r$1.wnext ? (d -= r$1.wnext, r$1.wsize - d) : r$1.wnext - d, d > r$1.length && (d = r$1.length), m = r$1.window;
							} else m = i$3, p = a$1 - r$1.offset, d = r$1.length;
							for (h$1 < d && (d = h$1), h$1 -= d, r$1.length -= d; i$3[a$1++] = m[p++], --d;);
							0 === r$1.length && (r$1.mode = 21);
							break;
						case 26:
							if (0 === h$1) break e;
							i$3[a$1++] = r$1.length, h$1--, r$1.mode = 21;
							break;
						case 27:
							if (r$1.wrap) {
								for (; l$1 < 32;) {
									if (0 === o$1) break e;
									o$1--, u$1 |= n$1[s$1++] << l$1, l$1 += 8;
								}
								if (c$1 -= h$1, e$1.total_out += c$1, r$1.total += c$1, c$1 && (e$1.adler = r$1.check = r$1.flags ? B(r$1.check, i$3, c$1, a$1 - c$1) : O(r$1.check, i$3, c$1, a$1 - c$1)), c$1 = h$1, (r$1.flags ? u$1 : L(u$1)) !== r$1.check) {
									e$1.msg = "incorrect data check", r$1.mode = 30;
									break;
								}
								l$1 = u$1 = 0;
							}
							r$1.mode = 28;
						case 28:
							if (r$1.wrap && r$1.flags) {
								for (; l$1 < 32;) {
									if (0 === o$1) break e;
									o$1--, u$1 += n$1[s$1++] << l$1, l$1 += 8;
								}
								if (u$1 !== (4294967295 & r$1.total)) {
									e$1.msg = "incorrect length check", r$1.mode = 30;
									break;
								}
								l$1 = u$1 = 0;
							}
							r$1.mode = 29;
						case 29:
							x = 1;
							break e;
						case 30:
							x = -3;
							break e;
						case 31: return -4;
						case 32:
						default: return U;
					}
					return e$1.next_out = a$1, e$1.avail_out = h$1, e$1.next_in = s$1, e$1.avail_in = o$1, r$1.hold = u$1, r$1.bits = l$1, (r$1.wsize || c$1 !== e$1.avail_out && r$1.mode < 30 && (r$1.mode < 27 || 4 !== t$1)) && Z(e$1, e$1.output, e$1.next_out, c$1 - e$1.avail_out) ? (r$1.mode = 31, -4) : (f$1 -= e$1.avail_in, c$1 -= e$1.avail_out, e$1.total_in += f$1, e$1.total_out += c$1, r$1.total += c$1, r$1.wrap && c$1 && (e$1.adler = r$1.check = r$1.flags ? B(r$1.check, i$3, c$1, e$1.next_out - c$1) : O(r$1.check, i$3, c$1, e$1.next_out - c$1)), e$1.data_type = r$1.bits + (r$1.last ? 64 : 0) + (12 === r$1.mode ? 128 : 0) + (20 === r$1.mode || 15 === r$1.mode ? 256 : 0), (0 == f$1 && 0 === c$1 || 4 === t$1) && x === N && (x = -5), x);
				}, r.inflateEnd = function(e$1) {
					if (!e$1 || !e$1.state) return U;
					var t$1 = e$1.state;
					return t$1.window && (t$1.window = null), e$1.state = null, N;
				}, r.inflateGetHeader = function(e$1, t$1) {
					var r$1;
					return e$1 && e$1.state ? 0 == (2 & (r$1 = e$1.state).wrap) ? U : ((r$1.head = t$1).done = !1, N) : U;
				}, r.inflateSetDictionary = function(e$1, t$1) {
					var r$1, n$1 = t$1.length;
					return e$1 && e$1.state ? 0 !== (r$1 = e$1.state).wrap && 11 !== r$1.mode ? U : 11 === r$1.mode && O(1, t$1, n$1, 0) !== r$1.check ? -3 : Z(e$1, t$1, n$1, n$1) ? (r$1.mode = 31, -4) : (r$1.havedict = 1, N) : U;
				}, r.inflateInfo = "pako inflate (from Nodeca project)";
			}, {
				"../utils/common": 41,
				"./adler32": 43,
				"./crc32": 45,
				"./inffast": 48,
				"./inftrees": 50
			}],
			50: [function(e, t, r) {
				var D = e("../utils/common"), F = [
					3,
					4,
					5,
					6,
					7,
					8,
					9,
					10,
					11,
					13,
					15,
					17,
					19,
					23,
					27,
					31,
					35,
					43,
					51,
					59,
					67,
					83,
					99,
					115,
					131,
					163,
					195,
					227,
					258,
					0,
					0
				], N = [
					16,
					16,
					16,
					16,
					16,
					16,
					16,
					16,
					17,
					17,
					17,
					17,
					18,
					18,
					18,
					18,
					19,
					19,
					19,
					19,
					20,
					20,
					20,
					20,
					21,
					21,
					21,
					21,
					16,
					72,
					78
				], U = [
					1,
					2,
					3,
					4,
					5,
					7,
					9,
					13,
					17,
					25,
					33,
					49,
					65,
					97,
					129,
					193,
					257,
					385,
					513,
					769,
					1025,
					1537,
					2049,
					3073,
					4097,
					6145,
					8193,
					12289,
					16385,
					24577,
					0,
					0
				], P = [
					16,
					16,
					16,
					16,
					17,
					17,
					18,
					18,
					19,
					19,
					20,
					20,
					21,
					21,
					22,
					22,
					23,
					23,
					24,
					24,
					25,
					25,
					26,
					26,
					27,
					27,
					28,
					28,
					29,
					29,
					64,
					64
				];
				t.exports = function(e$1, t$1, r$1, n, i$2, s, a, o) {
					var h, u, l, f, c, d, p, m, _$23, g = o.bits, b = 0, v = 0, y = 0, w = 0, k = 0, x = 0, S = 0, z = 0, C = 0, E = 0, A = null, I = 0, O = new D.Buf16(16), B = new D.Buf16(16), R = null, T = 0;
					for (b = 0; b <= 15; b++) O[b] = 0;
					for (v = 0; v < n; v++) O[t$1[r$1 + v]]++;
					for (k = g, w = 15; 1 <= w && 0 === O[w]; w--);
					if (w < k && (k = w), 0 === w) return i$2[s++] = 20971520, i$2[s++] = 20971520, o.bits = 1, 0;
					for (y = 1; y < w && 0 === O[y]; y++);
					for (k < y && (k = y), b = z = 1; b <= 15; b++) if (z <<= 1, (z -= O[b]) < 0) return -1;
					if (0 < z && (0 === e$1 || 1 !== w)) return -1;
					for (B[1] = 0, b = 1; b < 15; b++) B[b + 1] = B[b] + O[b];
					for (v = 0; v < n; v++) 0 !== t$1[r$1 + v] && (a[B[t$1[r$1 + v]]++] = v);
					if (d = 0 === e$1 ? (A = R = a, 19) : 1 === e$1 ? (A = F, I -= 257, R = N, T -= 257, 256) : (A = U, R = P, -1), b = y, c = s, S = v = E = 0, l = -1, f = (C = 1 << (x = k)) - 1, 1 === e$1 && 852 < C || 2 === e$1 && 592 < C) return 1;
					for (;;) {
						for (p = b - S, _$23 = a[v] < d ? (m = 0, a[v]) : a[v] > d ? (m = R[T + a[v]], A[I + a[v]]) : (m = 96, 0), h = 1 << b - S, y = u = 1 << x; i$2[c + (E >> S) + (u -= h)] = p << 24 | m << 16 | _$23 | 0, 0 !== u;);
						for (h = 1 << b - 1; E & h;) h >>= 1;
						if (0 !== h ? (E &= h - 1, E += h) : E = 0, v++, 0 == --O[b]) {
							if (b === w) break;
							b = t$1[r$1 + a[v]];
						}
						if (k < b && (E & f) !== l) {
							for (0 === S && (S = k), c += y, z = 1 << (x = b - S); x + S < w && !((z -= O[x + S]) <= 0);) x++, z <<= 1;
							if (C += 1 << x, 1 === e$1 && 852 < C || 2 === e$1 && 592 < C) return 1;
							i$2[l = E & f] = k << 24 | x << 16 | c - s | 0;
						}
					}
					return 0 !== E && (i$2[c + E] = b - S << 24 | 4194304), o.bits = k, 0;
				};
			}, { "../utils/common": 41 }],
			51: [function(e, t, r) {
				t.exports = {
					2: "need dictionary",
					1: "stream end",
					0: "",
					"-1": "file error",
					"-2": "stream error",
					"-3": "data error",
					"-4": "insufficient memory",
					"-5": "buffer error",
					"-6": "incompatible version"
				};
			}, {}],
			52: [function(e, t, r) {
				var i$2 = e("../utils/common"), o = 0, h = 1;
				function n(e$1) {
					for (var t$1 = e$1.length; 0 <= --t$1;) e$1[t$1] = 0;
				}
				var s = 0, a = 29, u = 256, l = u + 1 + a, f = 30, c = 19, _$23 = 2 * l + 1, g = 15, d = 16, p = 7, m = 256, b = 16, v = 17, y = 18, w = [
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					1,
					1,
					1,
					1,
					2,
					2,
					2,
					2,
					3,
					3,
					3,
					3,
					4,
					4,
					4,
					4,
					5,
					5,
					5,
					5,
					0
				], k = [
					0,
					0,
					0,
					0,
					1,
					1,
					2,
					2,
					3,
					3,
					4,
					4,
					5,
					5,
					6,
					6,
					7,
					7,
					8,
					8,
					9,
					9,
					10,
					10,
					11,
					11,
					12,
					12,
					13,
					13
				], x = [
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					2,
					3,
					7
				], S = [
					16,
					17,
					18,
					0,
					8,
					7,
					9,
					6,
					10,
					5,
					11,
					4,
					12,
					3,
					13,
					2,
					14,
					1,
					15
				], z = new Array(2 * (l + 2));
				n(z);
				var C = new Array(2 * f);
				n(C);
				var E = new Array(512);
				n(E);
				var A = new Array(256);
				n(A);
				var I = new Array(a);
				n(I);
				var O, B, R, T = new Array(f);
				function D(e$1, t$1, r$1, n$1, i$3) {
					this.static_tree = e$1, this.extra_bits = t$1, this.extra_base = r$1, this.elems = n$1, this.max_length = i$3, this.has_stree = e$1 && e$1.length;
				}
				function F(e$1, t$1) {
					this.dyn_tree = e$1, this.max_code = 0, this.stat_desc = t$1;
				}
				function N(e$1) {
					return e$1 < 256 ? E[e$1] : E[256 + (e$1 >>> 7)];
				}
				function U(e$1, t$1) {
					e$1.pending_buf[e$1.pending++] = 255 & t$1, e$1.pending_buf[e$1.pending++] = t$1 >>> 8 & 255;
				}
				function P(e$1, t$1, r$1) {
					e$1.bi_valid > d - r$1 ? (e$1.bi_buf |= t$1 << e$1.bi_valid & 65535, U(e$1, e$1.bi_buf), e$1.bi_buf = t$1 >> d - e$1.bi_valid, e$1.bi_valid += r$1 - d) : (e$1.bi_buf |= t$1 << e$1.bi_valid & 65535, e$1.bi_valid += r$1);
				}
				function L(e$1, t$1, r$1) {
					P(e$1, r$1[2 * t$1], r$1[2 * t$1 + 1]);
				}
				function j(e$1, t$1) {
					for (var r$1 = 0; r$1 |= 1 & e$1, e$1 >>>= 1, r$1 <<= 1, 0 < --t$1;);
					return r$1 >>> 1;
				}
				function Z(e$1, t$1, r$1) {
					var n$1, i$3, s$1 = new Array(g + 1), a$1 = 0;
					for (n$1 = 1; n$1 <= g; n$1++) s$1[n$1] = a$1 = a$1 + r$1[n$1 - 1] << 1;
					for (i$3 = 0; i$3 <= t$1; i$3++) {
						var o$1 = e$1[2 * i$3 + 1];
						0 !== o$1 && (e$1[2 * i$3] = j(s$1[o$1]++, o$1));
					}
				}
				function W(e$1) {
					var t$1;
					for (t$1 = 0; t$1 < l; t$1++) e$1.dyn_ltree[2 * t$1] = 0;
					for (t$1 = 0; t$1 < f; t$1++) e$1.dyn_dtree[2 * t$1] = 0;
					for (t$1 = 0; t$1 < c; t$1++) e$1.bl_tree[2 * t$1] = 0;
					e$1.dyn_ltree[2 * m] = 1, e$1.opt_len = e$1.static_len = 0, e$1.last_lit = e$1.matches = 0;
				}
				function M(e$1) {
					8 < e$1.bi_valid ? U(e$1, e$1.bi_buf) : 0 < e$1.bi_valid && (e$1.pending_buf[e$1.pending++] = e$1.bi_buf), e$1.bi_buf = 0, e$1.bi_valid = 0;
				}
				function H(e$1, t$1, r$1, n$1) {
					var i$3 = 2 * t$1, s$1 = 2 * r$1;
					return e$1[i$3] < e$1[s$1] || e$1[i$3] === e$1[s$1] && n$1[t$1] <= n$1[r$1];
				}
				function G(e$1, t$1, r$1) {
					for (var n$1 = e$1.heap[r$1], i$3 = r$1 << 1; i$3 <= e$1.heap_len && (i$3 < e$1.heap_len && H(t$1, e$1.heap[i$3 + 1], e$1.heap[i$3], e$1.depth) && i$3++, !H(t$1, n$1, e$1.heap[i$3], e$1.depth));) e$1.heap[r$1] = e$1.heap[i$3], r$1 = i$3, i$3 <<= 1;
					e$1.heap[r$1] = n$1;
				}
				function K(e$1, t$1, r$1) {
					var n$1, i$3, s$1, a$1, o$1 = 0;
					if (0 !== e$1.last_lit) for (; n$1 = e$1.pending_buf[e$1.d_buf + 2 * o$1] << 8 | e$1.pending_buf[e$1.d_buf + 2 * o$1 + 1], i$3 = e$1.pending_buf[e$1.l_buf + o$1], o$1++, 0 === n$1 ? L(e$1, i$3, t$1) : (L(e$1, (s$1 = A[i$3]) + u + 1, t$1), 0 !== (a$1 = w[s$1]) && P(e$1, i$3 -= I[s$1], a$1), L(e$1, s$1 = N(--n$1), r$1), 0 !== (a$1 = k[s$1]) && P(e$1, n$1 -= T[s$1], a$1)), o$1 < e$1.last_lit;);
					L(e$1, m, t$1);
				}
				function Y(e$1, t$1) {
					var r$1, n$1, i$3, s$1 = t$1.dyn_tree, a$1 = t$1.stat_desc.static_tree, o$1 = t$1.stat_desc.has_stree, h$1 = t$1.stat_desc.elems, u$1 = -1;
					for (e$1.heap_len = 0, e$1.heap_max = _$23, r$1 = 0; r$1 < h$1; r$1++) 0 !== s$1[2 * r$1] ? (e$1.heap[++e$1.heap_len] = u$1 = r$1, e$1.depth[r$1] = 0) : s$1[2 * r$1 + 1] = 0;
					for (; e$1.heap_len < 2;) s$1[2 * (i$3 = e$1.heap[++e$1.heap_len] = u$1 < 2 ? ++u$1 : 0)] = 1, e$1.depth[i$3] = 0, e$1.opt_len--, o$1 && (e$1.static_len -= a$1[2 * i$3 + 1]);
					for (t$1.max_code = u$1, r$1 = e$1.heap_len >> 1; 1 <= r$1; r$1--) G(e$1, s$1, r$1);
					for (i$3 = h$1; r$1 = e$1.heap[1], e$1.heap[1] = e$1.heap[e$1.heap_len--], G(e$1, s$1, 1), n$1 = e$1.heap[1], e$1.heap[--e$1.heap_max] = r$1, e$1.heap[--e$1.heap_max] = n$1, s$1[2 * i$3] = s$1[2 * r$1] + s$1[2 * n$1], e$1.depth[i$3] = (e$1.depth[r$1] >= e$1.depth[n$1] ? e$1.depth[r$1] : e$1.depth[n$1]) + 1, s$1[2 * r$1 + 1] = s$1[2 * n$1 + 1] = i$3, e$1.heap[1] = i$3++, G(e$1, s$1, 1), 2 <= e$1.heap_len;);
					e$1.heap[--e$1.heap_max] = e$1.heap[1], function(e$2, t$2) {
						var r$2, n$2, i$4, s$2, a$2, o$2, h$2 = t$2.dyn_tree, u$2 = t$2.max_code, l$1 = t$2.stat_desc.static_tree, f$1 = t$2.stat_desc.has_stree, c$1 = t$2.stat_desc.extra_bits, d$1 = t$2.stat_desc.extra_base, p$1 = t$2.stat_desc.max_length, m$1 = 0;
						for (s$2 = 0; s$2 <= g; s$2++) e$2.bl_count[s$2] = 0;
						for (h$2[2 * e$2.heap[e$2.heap_max] + 1] = 0, r$2 = e$2.heap_max + 1; r$2 < _$23; r$2++) p$1 < (s$2 = h$2[2 * h$2[2 * (n$2 = e$2.heap[r$2]) + 1] + 1] + 1) && (s$2 = p$1, m$1++), h$2[2 * n$2 + 1] = s$2, u$2 < n$2 || (e$2.bl_count[s$2]++, a$2 = 0, d$1 <= n$2 && (a$2 = c$1[n$2 - d$1]), o$2 = h$2[2 * n$2], e$2.opt_len += o$2 * (s$2 + a$2), f$1 && (e$2.static_len += o$2 * (l$1[2 * n$2 + 1] + a$2)));
						if (0 !== m$1) {
							do {
								for (s$2 = p$1 - 1; 0 === e$2.bl_count[s$2];) s$2--;
								e$2.bl_count[s$2]--, e$2.bl_count[s$2 + 1] += 2, e$2.bl_count[p$1]--, m$1 -= 2;
							} while (0 < m$1);
							for (s$2 = p$1; 0 !== s$2; s$2--) for (n$2 = e$2.bl_count[s$2]; 0 !== n$2;) u$2 < (i$4 = e$2.heap[--r$2]) || (h$2[2 * i$4 + 1] !== s$2 && (e$2.opt_len += (s$2 - h$2[2 * i$4 + 1]) * h$2[2 * i$4], h$2[2 * i$4 + 1] = s$2), n$2--);
						}
					}(e$1, t$1), Z(s$1, u$1, e$1.bl_count);
				}
				function X(e$1, t$1, r$1) {
					var n$1, i$3, s$1 = -1, a$1 = t$1[1], o$1 = 0, h$1 = 7, u$1 = 4;
					for (0 === a$1 && (h$1 = 138, u$1 = 3), t$1[2 * (r$1 + 1) + 1] = 65535, n$1 = 0; n$1 <= r$1; n$1++) i$3 = a$1, a$1 = t$1[2 * (n$1 + 1) + 1], ++o$1 < h$1 && i$3 === a$1 || (o$1 < u$1 ? e$1.bl_tree[2 * i$3] += o$1 : 0 !== i$3 ? (i$3 !== s$1 && e$1.bl_tree[2 * i$3]++, e$1.bl_tree[2 * b]++) : o$1 <= 10 ? e$1.bl_tree[2 * v]++ : e$1.bl_tree[2 * y]++, s$1 = i$3, u$1 = (o$1 = 0) === a$1 ? (h$1 = 138, 3) : i$3 === a$1 ? (h$1 = 6, 3) : (h$1 = 7, 4));
				}
				function V(e$1, t$1, r$1) {
					var n$1, i$3, s$1 = -1, a$1 = t$1[1], o$1 = 0, h$1 = 7, u$1 = 4;
					for (0 === a$1 && (h$1 = 138, u$1 = 3), n$1 = 0; n$1 <= r$1; n$1++) if (i$3 = a$1, a$1 = t$1[2 * (n$1 + 1) + 1], !(++o$1 < h$1 && i$3 === a$1)) {
						if (o$1 < u$1) for (; L(e$1, i$3, e$1.bl_tree), 0 != --o$1;);
						else 0 !== i$3 ? (i$3 !== s$1 && (L(e$1, i$3, e$1.bl_tree), o$1--), L(e$1, b, e$1.bl_tree), P(e$1, o$1 - 3, 2)) : o$1 <= 10 ? (L(e$1, v, e$1.bl_tree), P(e$1, o$1 - 3, 3)) : (L(e$1, y, e$1.bl_tree), P(e$1, o$1 - 11, 7));
						s$1 = i$3, u$1 = (o$1 = 0) === a$1 ? (h$1 = 138, 3) : i$3 === a$1 ? (h$1 = 6, 3) : (h$1 = 7, 4);
					}
				}
				n(T);
				var q = !1;
				function J(e$1, t$1, r$1, n$1) {
					P(e$1, (s << 1) + (n$1 ? 1 : 0), 3), function(e$2, t$2, r$2, n$2) {
						M(e$2), n$2 && (U(e$2, r$2), U(e$2, ~r$2)), i$2.arraySet(e$2.pending_buf, e$2.window, t$2, r$2, e$2.pending), e$2.pending += r$2;
					}(e$1, t$1, r$1, !0);
				}
				r._tr_init = function(e$1) {
					q || (function() {
						var e$2, t$1, r$1, n$1, i$3, s$1 = new Array(g + 1);
						for (n$1 = r$1 = 0; n$1 < a - 1; n$1++) for (I[n$1] = r$1, e$2 = 0; e$2 < 1 << w[n$1]; e$2++) A[r$1++] = n$1;
						for (A[r$1 - 1] = n$1, n$1 = i$3 = 0; n$1 < 16; n$1++) for (T[n$1] = i$3, e$2 = 0; e$2 < 1 << k[n$1]; e$2++) E[i$3++] = n$1;
						for (i$3 >>= 7; n$1 < f; n$1++) for (T[n$1] = i$3 << 7, e$2 = 0; e$2 < 1 << k[n$1] - 7; e$2++) E[256 + i$3++] = n$1;
						for (t$1 = 0; t$1 <= g; t$1++) s$1[t$1] = 0;
						for (e$2 = 0; e$2 <= 143;) z[2 * e$2 + 1] = 8, e$2++, s$1[8]++;
						for (; e$2 <= 255;) z[2 * e$2 + 1] = 9, e$2++, s$1[9]++;
						for (; e$2 <= 279;) z[2 * e$2 + 1] = 7, e$2++, s$1[7]++;
						for (; e$2 <= 287;) z[2 * e$2 + 1] = 8, e$2++, s$1[8]++;
						for (Z(z, l + 1, s$1), e$2 = 0; e$2 < f; e$2++) C[2 * e$2 + 1] = 5, C[2 * e$2] = j(e$2, 5);
						O = new D(z, w, u + 1, l, g), B = new D(C, k, 0, f, g), R = new D(new Array(0), x, 0, c, p);
					}(), q = !0), e$1.l_desc = new F(e$1.dyn_ltree, O), e$1.d_desc = new F(e$1.dyn_dtree, B), e$1.bl_desc = new F(e$1.bl_tree, R), e$1.bi_buf = 0, e$1.bi_valid = 0, W(e$1);
				}, r._tr_stored_block = J, r._tr_flush_block = function(e$1, t$1, r$1, n$1) {
					var i$3, s$1, a$1 = 0;
					0 < e$1.level ? (2 === e$1.strm.data_type && (e$1.strm.data_type = function(e$2) {
						var t$2, r$2 = 4093624447;
						for (t$2 = 0; t$2 <= 31; t$2++, r$2 >>>= 1) if (1 & r$2 && 0 !== e$2.dyn_ltree[2 * t$2]) return o;
						if (0 !== e$2.dyn_ltree[18] || 0 !== e$2.dyn_ltree[20] || 0 !== e$2.dyn_ltree[26]) return h;
						for (t$2 = 32; t$2 < u; t$2++) if (0 !== e$2.dyn_ltree[2 * t$2]) return h;
						return o;
					}(e$1)), Y(e$1, e$1.l_desc), Y(e$1, e$1.d_desc), a$1 = function(e$2) {
						var t$2;
						for (X(e$2, e$2.dyn_ltree, e$2.l_desc.max_code), X(e$2, e$2.dyn_dtree, e$2.d_desc.max_code), Y(e$2, e$2.bl_desc), t$2 = c - 1; 3 <= t$2 && 0 === e$2.bl_tree[2 * S[t$2] + 1]; t$2--);
						return e$2.opt_len += 3 * (t$2 + 1) + 5 + 5 + 4, t$2;
					}(e$1), i$3 = e$1.opt_len + 3 + 7 >>> 3, (s$1 = e$1.static_len + 3 + 7 >>> 3) <= i$3 && (i$3 = s$1)) : i$3 = s$1 = r$1 + 5, r$1 + 4 <= i$3 && -1 !== t$1 ? J(e$1, t$1, r$1, n$1) : 4 === e$1.strategy || s$1 === i$3 ? (P(e$1, 2 + (n$1 ? 1 : 0), 3), K(e$1, z, C)) : (P(e$1, 4 + (n$1 ? 1 : 0), 3), function(e$2, t$2, r$2, n$2) {
						var i$4;
						for (P(e$2, t$2 - 257, 5), P(e$2, r$2 - 1, 5), P(e$2, n$2 - 4, 4), i$4 = 0; i$4 < n$2; i$4++) P(e$2, e$2.bl_tree[2 * S[i$4] + 1], 3);
						V(e$2, e$2.dyn_ltree, t$2 - 1), V(e$2, e$2.dyn_dtree, r$2 - 1);
					}(e$1, e$1.l_desc.max_code + 1, e$1.d_desc.max_code + 1, a$1 + 1), K(e$1, e$1.dyn_ltree, e$1.dyn_dtree)), W(e$1), n$1 && M(e$1);
				}, r._tr_tally = function(e$1, t$1, r$1) {
					return e$1.pending_buf[e$1.d_buf + 2 * e$1.last_lit] = t$1 >>> 8 & 255, e$1.pending_buf[e$1.d_buf + 2 * e$1.last_lit + 1] = 255 & t$1, e$1.pending_buf[e$1.l_buf + e$1.last_lit] = 255 & r$1, e$1.last_lit++, 0 === t$1 ? e$1.dyn_ltree[2 * r$1]++ : (e$1.matches++, t$1--, e$1.dyn_ltree[2 * (A[r$1] + u + 1)]++, e$1.dyn_dtree[2 * N(t$1)]++), e$1.last_lit === e$1.lit_bufsize - 1;
				}, r._tr_align = function(e$1) {
					P(e$1, 2, 3), L(e$1, m, z), function(e$2) {
						16 === e$2.bi_valid ? (U(e$2, e$2.bi_buf), e$2.bi_buf = 0, e$2.bi_valid = 0) : 8 <= e$2.bi_valid && (e$2.pending_buf[e$2.pending++] = 255 & e$2.bi_buf, e$2.bi_buf >>= 8, e$2.bi_valid -= 8);
					}(e$1);
				};
			}, { "../utils/common": 41 }],
			53: [function(e, t, r) {
				t.exports = function() {
					this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0;
				};
			}, {}],
			54: [function(e, t, r) {
				(function(e$1) {
					(function(r$1, n) {
						if (!r$1.setImmediate) {
							var i$2, s, t$1, a, o = 1, h = {}, u = !1, l = r$1.document, e$2 = Object.getPrototypeOf && Object.getPrototypeOf(r$1);
							e$2 = e$2 && e$2.setTimeout ? e$2 : r$1, i$2 = "[object process]" === {}.toString.call(r$1.process) ? function(e$3) {
								process.nextTick(function() {
									c(e$3);
								});
							} : function() {
								if (r$1.postMessage && !r$1.importScripts) {
									var e$3 = !0, t$2 = r$1.onmessage;
									return r$1.onmessage = function() {
										e$3 = !1;
									}, r$1.postMessage("", "*"), r$1.onmessage = t$2, e$3;
								}
							}() ? (a = "setImmediate$" + Math.random() + "$", r$1.addEventListener ? r$1.addEventListener("message", d, !1) : r$1.attachEvent("onmessage", d), function(e$3) {
								r$1.postMessage(a + e$3, "*");
							}) : r$1.MessageChannel ? ((t$1 = new MessageChannel()).port1.onmessage = function(e$3) {
								c(e$3.data);
							}, function(e$3) {
								t$1.port2.postMessage(e$3);
							}) : l && "onreadystatechange" in l.createElement("script") ? (s = l.documentElement, function(e$3) {
								var t$2 = l.createElement("script");
								t$2.onreadystatechange = function() {
									c(e$3), t$2.onreadystatechange = null, s.removeChild(t$2), t$2 = null;
								}, s.appendChild(t$2);
							}) : function(e$3) {
								setTimeout(c, 0, e$3);
							}, e$2.setImmediate = function(e$3) {
								"function" != typeof e$3 && (e$3 = new Function("" + e$3));
								for (var t$2 = new Array(arguments.length - 1), r$2 = 0; r$2 < t$2.length; r$2++) t$2[r$2] = arguments[r$2 + 1];
								return h[o] = {
									callback: e$3,
									args: t$2
								}, i$2(o), o++;
							}, e$2.clearImmediate = f;
						}
						function f(e$3) {
							delete h[e$3];
						}
						function c(e$3) {
							if (u) setTimeout(c, 0, e$3);
							else {
								var t$2 = h[e$3];
								if (t$2) {
									u = !0;
									try {
										(function(e$4) {
											var t$3 = e$4.callback, r$2 = e$4.args;
											switch (r$2.length) {
												case 0:
													t$3();
													break;
												case 1:
													t$3(r$2[0]);
													break;
												case 2:
													t$3(r$2[0], r$2[1]);
													break;
												case 3:
													t$3(r$2[0], r$2[1], r$2[2]);
													break;
												default: t$3.apply(n, r$2);
											}
										})(t$2);
									} finally {
										f(e$3), u = !1;
									}
								}
							}
						}
						function d(e$3) {
							e$3.source === r$1 && "string" == typeof e$3.data && 0 === e$3.data.indexOf(a) && c(+e$3.data.slice(a.length));
						}
					})("undefined" == typeof self ? void 0 === e$1 ? this : e$1 : self);
				}).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
			}, {}]
		}, {}, [10])(10);
	});
}) });

//#endregion
//#region node_modules/mammoth/lib/zipfile.js
var require_zipfile = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/lib/zipfile.js": ((exports) => {
	var base64js = require_base64_js();
	var JSZip = require_jszip_min();
	exports.openArrayBuffer = openArrayBuffer;
	exports.splitPath = splitPath;
	exports.joinPath = joinPath;
	function openArrayBuffer(arrayBuffer) {
		return JSZip.loadAsync(arrayBuffer).then(function(zipFile) {
			function exists(name) {
				return zipFile.file(name) !== null;
			}
			function read$2(name, encoding) {
				return zipFile.file(name).async("uint8array").then(function(array) {
					if (encoding === "base64") return base64js.fromByteArray(array);
					else if (encoding) return new TextDecoder(encoding).decode(array);
					else return array;
				});
			}
			function write$1(name, contents) {
				zipFile.file(name, contents);
			}
			function toArrayBuffer() {
				return zipFile.generateAsync({ type: "arraybuffer" });
			}
			return {
				exists,
				read: read$2,
				write: write$1,
				toArrayBuffer
			};
		});
	}
	function splitPath(path) {
		var lastIndex = path.lastIndexOf("/");
		if (lastIndex === -1) return {
			dirname: "",
			basename: path
		};
		else return {
			dirname: path.substring(0, lastIndex),
			basename: path.substring(lastIndex + 1)
		};
	}
	function joinPath() {
		var nonEmptyPaths = Array.prototype.filter.call(arguments, function(path) {
			return path;
		});
		var relevantPaths = [];
		nonEmptyPaths.forEach(function(path) {
			if (/^\//.test(path)) relevantPaths = [path];
			else relevantPaths.push(path);
		});
		return relevantPaths.join("/");
	}
}) });

//#endregion
//#region node_modules/mammoth/lib/xml/nodes.js
var require_nodes = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/lib/xml/nodes.js": ((exports) => {
	var _$17 = (init_index_all(), __toCommonJS(index_all_exports));
	exports.Element = Element$3;
	exports.element = function(name, attributes, children) {
		return new Element$3(name, attributes, children);
	};
	exports.text = function(value) {
		return {
			type: "text",
			value
		};
	};
	var emptyElement = exports.emptyElement = {
		first: function() {
			return null;
		},
		firstOrEmpty: function() {
			return emptyElement;
		},
		attributes: {},
		children: []
	};
	function Element$3(name, attributes, children) {
		this.type = "element";
		this.name = name;
		this.attributes = attributes || {};
		this.children = children || [];
	}
	Element$3.prototype.first = function(name) {
		return _$17.find(this.children, function(child) {
			return child.name === name;
		});
	};
	Element$3.prototype.firstOrEmpty = function(name) {
		return this.first(name) || emptyElement;
	};
	Element$3.prototype.getElementsByTagName = function(name) {
		var elements$2 = _$17.filter(this.children, function(child) {
			return child.name === name;
		});
		return toElementList(elements$2);
	};
	Element$3.prototype.text = function() {
		if (this.children.length === 0) return "";
		else if (this.children.length !== 1 || this.children[0].type !== "text") throw new Error("Not implemented");
		return this.children[0].value;
	};
	var elementListPrototype = { getElementsByTagName: function(name) {
		return toElementList(_$17.flatten(this.map(function(element$2) {
			return element$2.getElementsByTagName(name);
		}, true)));
	} };
	function toElementList(array) {
		return _$17.extend(array, elementListPrototype);
	}
}) });

//#endregion
//#region node_modules/@xmldom/xmldom/lib/conventions.js
var require_conventions = /* @__PURE__ */ __commonJS({ "node_modules/@xmldom/xmldom/lib/conventions.js": ((exports) => {
	/**
	* Ponyfill for `Array.prototype.find` which is only available in ES6 runtimes.
	*
	* Works with anything that has a `length` property and index access properties, including NodeList.
	*
	* @template {unknown} T
	* @param {Array<T> | ({length:number, [number]: T})} list
	* @param {function (item: T, index: number, list:Array<T> | ({length:number, [number]: T})):boolean} predicate
	* @param {Partial<Pick<ArrayConstructor['prototype'], 'find'>>?} ac `Array.prototype` by default,
	* 				allows injecting a custom implementation in tests
	* @returns {T | undefined}
	*
	* @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find
	* @see https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.find
	*/
	function find$1(list, predicate, ac) {
		if (ac === void 0) ac = Array.prototype;
		if (list && typeof ac.find === "function") return ac.find.call(list, predicate);
		for (var i$2 = 0; i$2 < list.length; i$2++) if (Object.prototype.hasOwnProperty.call(list, i$2)) {
			var item = list[i$2];
			if (predicate.call(void 0, item, i$2, list)) return item;
		}
	}
	/**
	* "Shallow freezes" an object to render it immutable.
	* Uses `Object.freeze` if available,
	* otherwise the immutability is only in the type.
	*
	* Is used to create "enum like" objects.
	*
	* @template T
	* @param {T} object the object to freeze
	* @param {Pick<ObjectConstructor, 'freeze'> = Object} oc `Object` by default,
	* 				allows to inject custom object constructor for tests
	* @returns {Readonly<T>}
	*
	* @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze
	*/
	function freeze$1(object$1, oc) {
		if (oc === void 0) oc = Object;
		return oc && typeof oc.freeze === "function" ? oc.freeze(object$1) : object$1;
	}
	/**
	* Since we can not rely on `Object.assign` we provide a simplified version
	* that is sufficient for our needs.
	*
	* @param {Object} target
	* @param {Object | null | undefined} source
	*
	* @returns {Object} target
	* @throws TypeError if target is not an object
	*
	* @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign
	* @see https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-object.assign
	*/
	function assign(target, source) {
		if (target === null || typeof target !== "object") throw new TypeError("target is not an object");
		for (var key in source) if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
		return target;
	}
	/**
	* All mime types that are allowed as input to `DOMParser.parseFromString`
	*
	* @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString#Argument02 MDN
	* @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#domparsersupportedtype WHATWG HTML Spec
	* @see DOMParser.prototype.parseFromString
	*/
	var MIME_TYPE = freeze$1({
		HTML: "text/html",
		isHTML: function(value) {
			return value === MIME_TYPE.HTML;
		},
		XML_APPLICATION: "application/xml",
		XML_TEXT: "text/xml",
		XML_XHTML_APPLICATION: "application/xhtml+xml",
		XML_SVG_IMAGE: "image/svg+xml"
	});
	/**
	* Namespaces that are used in this code base.
	*
	* @see http://www.w3.org/TR/REC-xml-names
	*/
	var NAMESPACE$3 = freeze$1({
		HTML: "http://www.w3.org/1999/xhtml",
		isHTML: function(uri) {
			return uri === NAMESPACE$3.HTML;
		},
		SVG: "http://www.w3.org/2000/svg",
		XML: "http://www.w3.org/XML/1998/namespace",
		XMLNS: "http://www.w3.org/2000/xmlns/"
	});
	exports.assign = assign;
	exports.find = find$1;
	exports.freeze = freeze$1;
	exports.MIME_TYPE = MIME_TYPE;
	exports.NAMESPACE = NAMESPACE$3;
}) });

//#endregion
//#region node_modules/@xmldom/xmldom/lib/dom.js
var require_dom = /* @__PURE__ */ __commonJS({ "node_modules/@xmldom/xmldom/lib/dom.js": ((exports) => {
	var conventions$1 = require_conventions();
	var find = conventions$1.find;
	var NAMESPACE$2 = conventions$1.NAMESPACE;
	/**
	* A prerequisite for `[].filter`, to drop elements that are empty
	* @param {string} input
	* @returns {boolean}
	*/
	function notEmptyString(input) {
		return input !== "";
	}
	/**
	* @see https://infra.spec.whatwg.org/#split-on-ascii-whitespace
	* @see https://infra.spec.whatwg.org/#ascii-whitespace
	*
	* @param {string} input
	* @returns {string[]} (can be empty)
	*/
	function splitOnASCIIWhitespace(input) {
		return input ? input.split(/[\t\n\f\r ]+/).filter(notEmptyString) : [];
	}
	/**
	* Adds element as a key to current if it is not already present.
	*
	* @param {Record<string, boolean | undefined>} current
	* @param {string} element
	* @returns {Record<string, boolean | undefined>}
	*/
	function orderedSetReducer(current, element$2) {
		if (!current.hasOwnProperty(element$2)) current[element$2] = true;
		return current;
	}
	/**
	* @see https://infra.spec.whatwg.org/#ordered-set
	* @param {string} input
	* @returns {string[]}
	*/
	function toOrderedSet(input) {
		if (!input) return [];
		var list = splitOnASCIIWhitespace(input);
		return Object.keys(list.reduce(orderedSetReducer, {}));
	}
	/**
	* Uses `list.indexOf` to implement something like `Array.prototype.includes`,
	* which we can not rely on being available.
	*
	* @param {any[]} list
	* @returns {function(any): boolean}
	*/
	function arrayIncludes(list) {
		return function(element$2) {
			return list && list.indexOf(element$2) !== -1;
		};
	}
	function copy(src, dest) {
		for (var p in src) if (Object.prototype.hasOwnProperty.call(src, p)) dest[p] = src[p];
	}
	/**
	^\w+\.prototype\.([_\w]+)\s*=\s*((?:.*\{\s*?[\r\n][\s\S]*?^})|\S.*?(?=[;\r\n]));?
	^\w+\.prototype\.([_\w]+)\s*=\s*(\S.*?(?=[;\r\n]));?
	*/
	function _extends(Class, Super) {
		var pt = Class.prototype;
		if (!(pt instanceof Super)) {
			function t() {}
			t.prototype = Super.prototype;
			t = new t();
			copy(pt, t);
			Class.prototype = pt = t;
		}
		if (pt.constructor != Class) {
			if (typeof Class != "function") console.error("unknown Class:" + Class);
			pt.constructor = Class;
		}
	}
	var NodeType = {};
	var ELEMENT_NODE = NodeType.ELEMENT_NODE = 1;
	var ATTRIBUTE_NODE = NodeType.ATTRIBUTE_NODE = 2;
	var TEXT_NODE = NodeType.TEXT_NODE = 3;
	var CDATA_SECTION_NODE = NodeType.CDATA_SECTION_NODE = 4;
	var ENTITY_REFERENCE_NODE = NodeType.ENTITY_REFERENCE_NODE = 5;
	var ENTITY_NODE = NodeType.ENTITY_NODE = 6;
	var PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;
	var COMMENT_NODE = NodeType.COMMENT_NODE = 8;
	var DOCUMENT_NODE = NodeType.DOCUMENT_NODE = 9;
	var DOCUMENT_TYPE_NODE = NodeType.DOCUMENT_TYPE_NODE = 10;
	var DOCUMENT_FRAGMENT_NODE = NodeType.DOCUMENT_FRAGMENT_NODE = 11;
	var NOTATION_NODE = NodeType.NOTATION_NODE = 12;
	var ExceptionCode = {};
	var ExceptionMessage = {};
	ExceptionCode.INDEX_SIZE_ERR = (ExceptionMessage[1] = "Index size error", 1);
	ExceptionCode.DOMSTRING_SIZE_ERR = (ExceptionMessage[2] = "DOMString size error", 2);
	var HIERARCHY_REQUEST_ERR = ExceptionCode.HIERARCHY_REQUEST_ERR = (ExceptionMessage[3] = "Hierarchy request error", 3);
	ExceptionCode.WRONG_DOCUMENT_ERR = (ExceptionMessage[4] = "Wrong document", 4);
	ExceptionCode.INVALID_CHARACTER_ERR = (ExceptionMessage[5] = "Invalid character", 5);
	ExceptionCode.NO_DATA_ALLOWED_ERR = (ExceptionMessage[6] = "No data allowed", 6);
	ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = (ExceptionMessage[7] = "No modification allowed", 7);
	var NOT_FOUND_ERR = ExceptionCode.NOT_FOUND_ERR = (ExceptionMessage[8] = "Not found", 8);
	ExceptionCode.NOT_SUPPORTED_ERR = (ExceptionMessage[9] = "Not supported", 9);
	var INUSE_ATTRIBUTE_ERR = ExceptionCode.INUSE_ATTRIBUTE_ERR = (ExceptionMessage[10] = "Attribute in use", 10);
	ExceptionCode.INVALID_STATE_ERR = (ExceptionMessage[11] = "Invalid state", 11);
	ExceptionCode.SYNTAX_ERR = (ExceptionMessage[12] = "Syntax error", 12);
	ExceptionCode.INVALID_MODIFICATION_ERR = (ExceptionMessage[13] = "Invalid modification", 13);
	ExceptionCode.NAMESPACE_ERR = (ExceptionMessage[14] = "Invalid namespace", 14);
	ExceptionCode.INVALID_ACCESS_ERR = (ExceptionMessage[15] = "Invalid access", 15);
	/**
	* DOM Level 2
	* Object DOMException
	* @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
	* @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html
	*/
	function DOMException(code$1, message) {
		if (message instanceof Error) var error$1 = message;
		else {
			error$1 = this;
			Error.call(this, ExceptionMessage[code$1]);
			this.message = ExceptionMessage[code$1];
			if (Error.captureStackTrace) Error.captureStackTrace(this, DOMException);
		}
		error$1.code = code$1;
		if (message) this.message = this.message + ": " + message;
		return error$1;
	}
	DOMException.prototype = Error.prototype;
	copy(ExceptionCode, DOMException);
	/**
	* @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177
	* The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.
	* The items in the NodeList are accessible via an integral index, starting from 0.
	*/
	function NodeList() {}
	NodeList.prototype = {
		length: 0,
		item: function(index) {
			return index >= 0 && index < this.length ? this[index] : null;
		},
		toString: function(isHTML, nodeFilter) {
			for (var buf = [], i$2 = 0; i$2 < this.length; i$2++) serializeToString(this[i$2], buf, isHTML, nodeFilter);
			return buf.join("");
		},
		filter: function(predicate) {
			return Array.prototype.filter.call(this, predicate);
		},
		indexOf: function(item) {
			return Array.prototype.indexOf.call(this, item);
		}
	};
	function LiveNodeList(node, refresh) {
		this._node = node;
		this._refresh = refresh;
		_updateLiveList(this);
	}
	function _updateLiveList(list) {
		var inc = list._node._inc || list._node.ownerDocument._inc;
		if (list._inc !== inc) {
			var ls = list._refresh(list._node);
			__set__(list, "length", ls.length);
			if (!list.$$length || ls.length < list.$$length) {
				for (var i$2 = ls.length; i$2 in list; i$2++) if (Object.prototype.hasOwnProperty.call(list, i$2)) delete list[i$2];
			}
			copy(ls, list);
			list._inc = inc;
		}
	}
	LiveNodeList.prototype.item = function(i$2) {
		_updateLiveList(this);
		return this[i$2] || null;
	};
	_extends(LiveNodeList, NodeList);
	/**
	* Objects implementing the NamedNodeMap interface are used
	* to represent collections of nodes that can be accessed by name.
	* Note that NamedNodeMap does not inherit from NodeList;
	* NamedNodeMaps are not maintained in any particular order.
	* Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index,
	* but this is simply to allow convenient enumeration of the contents of a NamedNodeMap,
	* and does not imply that the DOM specifies an order to these Nodes.
	* NamedNodeMap objects in the DOM are live.
	* used for attributes or DocumentType entities
	*/
	function NamedNodeMap() {}
	function _findNodeIndex(list, node) {
		var i$2 = list.length;
		while (i$2--) if (list[i$2] === node) return i$2;
	}
	function _addNamedNode(el, list, newAttr, oldAttr) {
		if (oldAttr) list[_findNodeIndex(list, oldAttr)] = newAttr;
		else list[list.length++] = newAttr;
		if (el) {
			newAttr.ownerElement = el;
			var doc = el.ownerDocument;
			if (doc) {
				oldAttr && _onRemoveAttribute(doc, el, oldAttr);
				_onAddAttribute(doc, el, newAttr);
			}
		}
	}
	function _removeNamedNode(el, list, attr) {
		var i$2 = _findNodeIndex(list, attr);
		if (i$2 >= 0) {
			var lastIndex = list.length - 1;
			while (i$2 < lastIndex) list[i$2] = list[++i$2];
			list.length = lastIndex;
			if (el) {
				var doc = el.ownerDocument;
				if (doc) {
					_onRemoveAttribute(doc, el, attr);
					attr.ownerElement = null;
				}
			}
		} else throw new DOMException(NOT_FOUND_ERR, /* @__PURE__ */ new Error(el.tagName + "@" + attr));
	}
	NamedNodeMap.prototype = {
		length: 0,
		item: NodeList.prototype.item,
		getNamedItem: function(key) {
			var i$2 = this.length;
			while (i$2--) {
				var attr = this[i$2];
				if (attr.nodeName == key) return attr;
			}
		},
		setNamedItem: function(attr) {
			var el = attr.ownerElement;
			if (el && el != this._ownerElement) throw new DOMException(INUSE_ATTRIBUTE_ERR);
			var oldAttr = this.getNamedItem(attr.nodeName);
			_addNamedNode(this._ownerElement, this, attr, oldAttr);
			return oldAttr;
		},
		setNamedItemNS: function(attr) {
			var el = attr.ownerElement, oldAttr;
			if (el && el != this._ownerElement) throw new DOMException(INUSE_ATTRIBUTE_ERR);
			oldAttr = this.getNamedItemNS(attr.namespaceURI, attr.localName);
			_addNamedNode(this._ownerElement, this, attr, oldAttr);
			return oldAttr;
		},
		removeNamedItem: function(key) {
			var attr = this.getNamedItem(key);
			_removeNamedNode(this._ownerElement, this, attr);
			return attr;
		},
		removeNamedItemNS: function(namespaceURI, localName) {
			var attr = this.getNamedItemNS(namespaceURI, localName);
			_removeNamedNode(this._ownerElement, this, attr);
			return attr;
		},
		getNamedItemNS: function(namespaceURI, localName) {
			var i$2 = this.length;
			while (i$2--) {
				var node = this[i$2];
				if (node.localName == localName && node.namespaceURI == namespaceURI) return node;
			}
			return null;
		}
	};
	/**
	* The DOMImplementation interface represents an object providing methods
	* which are not dependent on any particular document.
	* Such an object is returned by the `Document.implementation` property.
	*
	* __The individual methods describe the differences compared to the specs.__
	*
	* @constructor
	*
	* @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation MDN
	* @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490 DOM Level 1 Core (Initial)
	* @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490 DOM Level 2 Core
	* @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 DOM Level 3 Core
	* @see https://dom.spec.whatwg.org/#domimplementation DOM Living Standard
	*/
	function DOMImplementation$1() {}
	DOMImplementation$1.prototype = {
		hasFeature: function(feature, version) {
			return true;
		},
		createDocument: function(namespaceURI, qualifiedName, doctype) {
			var doc = new Document();
			doc.implementation = this;
			doc.childNodes = new NodeList();
			doc.doctype = doctype || null;
			if (doctype) doc.appendChild(doctype);
			if (qualifiedName) {
				var root$1 = doc.createElementNS(namespaceURI, qualifiedName);
				doc.appendChild(root$1);
			}
			return doc;
		},
		createDocumentType: function(qualifiedName, publicId, systemId) {
			var node = new DocumentType();
			node.name = qualifiedName;
			node.nodeName = qualifiedName;
			node.publicId = publicId || "";
			node.systemId = systemId || "";
			return node;
		}
	};
	/**
	* @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247
	*/
	function Node$1() {}
	Node$1.prototype = {
		firstChild: null,
		lastChild: null,
		previousSibling: null,
		nextSibling: null,
		attributes: null,
		parentNode: null,
		childNodes: null,
		ownerDocument: null,
		nodeValue: null,
		namespaceURI: null,
		prefix: null,
		localName: null,
		insertBefore: function(newChild, refChild) {
			return _insertBefore(this, newChild, refChild);
		},
		replaceChild: function(newChild, oldChild) {
			_insertBefore(this, newChild, oldChild, assertPreReplacementValidityInDocument);
			if (oldChild) this.removeChild(oldChild);
		},
		removeChild: function(oldChild) {
			return _removeChild(this, oldChild);
		},
		appendChild: function(newChild) {
			return this.insertBefore(newChild, null);
		},
		hasChildNodes: function() {
			return this.firstChild != null;
		},
		cloneNode: function(deep) {
			return cloneNode(this.ownerDocument || this, this, deep);
		},
		normalize: function() {
			var child = this.firstChild;
			while (child) {
				var next = child.nextSibling;
				if (next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE) {
					this.removeChild(next);
					child.appendData(next.data);
				} else {
					child.normalize();
					child = next;
				}
			}
		},
		isSupported: function(feature, version) {
			return this.ownerDocument.implementation.hasFeature(feature, version);
		},
		hasAttributes: function() {
			return this.attributes.length > 0;
		},
		lookupPrefix: function(namespaceURI) {
			var el = this;
			while (el) {
				var map$1 = el._nsMap;
				if (map$1) {
					for (var n in map$1) if (Object.prototype.hasOwnProperty.call(map$1, n) && map$1[n] === namespaceURI) return n;
				}
				el = el.nodeType == ATTRIBUTE_NODE ? el.ownerDocument : el.parentNode;
			}
			return null;
		},
		lookupNamespaceURI: function(prefix) {
			var el = this;
			while (el) {
				var map$1 = el._nsMap;
				if (map$1) {
					if (Object.prototype.hasOwnProperty.call(map$1, prefix)) return map$1[prefix];
				}
				el = el.nodeType == ATTRIBUTE_NODE ? el.ownerDocument : el.parentNode;
			}
			return null;
		},
		isDefaultNamespace: function(namespaceURI) {
			return this.lookupPrefix(namespaceURI) == null;
		}
	};
	function _xmlEncoder(c) {
		return c == "<" && "&lt;" || c == ">" && "&gt;" || c == "&" && "&amp;" || c == "\"" && "&quot;" || "&#" + c.charCodeAt() + ";";
	}
	copy(NodeType, Node$1);
	copy(NodeType, Node$1.prototype);
	/**
	* @param callback return true for continue,false for break
	* @return boolean true: break visit;
	*/
	function _visitNode(node, callback) {
		if (callback(node)) return true;
		if (node = node.firstChild) do
			if (_visitNode(node, callback)) return true;
		while (node = node.nextSibling);
	}
	function Document() {
		this.ownerDocument = this;
	}
	function _onAddAttribute(doc, el, newAttr) {
		doc && doc._inc++;
		if (newAttr.namespaceURI === NAMESPACE$2.XMLNS) el._nsMap[newAttr.prefix ? newAttr.localName : ""] = newAttr.value;
	}
	function _onRemoveAttribute(doc, el, newAttr, remove) {
		doc && doc._inc++;
		if (newAttr.namespaceURI === NAMESPACE$2.XMLNS) delete el._nsMap[newAttr.prefix ? newAttr.localName : ""];
	}
	/**
	* Updates `el.childNodes`, updating the indexed items and it's `length`.
	* Passing `newChild` means it will be appended.
	* Otherwise it's assumed that an item has been removed,
	* and `el.firstNode` and it's `.nextSibling` are used
	* to walk the current list of child nodes.
	*
	* @param {Document} doc
	* @param {Node} el
	* @param {Node} [newChild]
	* @private
	*/
	function _onUpdateChild(doc, el, newChild) {
		if (doc && doc._inc) {
			doc._inc++;
			var cs = el.childNodes;
			if (newChild) cs[cs.length++] = newChild;
			else {
				var child = el.firstChild;
				var i$2 = 0;
				while (child) {
					cs[i$2++] = child;
					child = child.nextSibling;
				}
				cs.length = i$2;
				delete cs[cs.length];
			}
		}
	}
	/**
	* Removes the connections between `parentNode` and `child`
	* and any existing `child.previousSibling` or `child.nextSibling`.
	*
	* @see https://github.com/xmldom/xmldom/issues/135
	* @see https://github.com/xmldom/xmldom/issues/145
	*
	* @param {Node} parentNode
	* @param {Node} child
	* @returns {Node} the child that was removed.
	* @private
	*/
	function _removeChild(parentNode, child) {
		var previous = child.previousSibling;
		var next = child.nextSibling;
		if (previous) previous.nextSibling = next;
		else parentNode.firstChild = next;
		if (next) next.previousSibling = previous;
		else parentNode.lastChild = previous;
		child.parentNode = null;
		child.previousSibling = null;
		child.nextSibling = null;
		_onUpdateChild(parentNode.ownerDocument, parentNode);
		return child;
	}
	/**
	* Returns `true` if `node` can be a parent for insertion.
	* @param {Node} node
	* @returns {boolean}
	*/
	function hasValidParentNodeType(node) {
		return node && (node.nodeType === Node$1.DOCUMENT_NODE || node.nodeType === Node$1.DOCUMENT_FRAGMENT_NODE || node.nodeType === Node$1.ELEMENT_NODE);
	}
	/**
	* Returns `true` if `node` can be inserted according to it's `nodeType`.
	* @param {Node} node
	* @returns {boolean}
	*/
	function hasInsertableNodeType(node) {
		return node && (isElementNode(node) || isTextNode(node) || isDocTypeNode(node) || node.nodeType === Node$1.DOCUMENT_FRAGMENT_NODE || node.nodeType === Node$1.COMMENT_NODE || node.nodeType === Node$1.PROCESSING_INSTRUCTION_NODE);
	}
	/**
	* Returns true if `node` is a DOCTYPE node
	* @param {Node} node
	* @returns {boolean}
	*/
	function isDocTypeNode(node) {
		return node && node.nodeType === Node$1.DOCUMENT_TYPE_NODE;
	}
	/**
	* Returns true if the node is an element
	* @param {Node} node
	* @returns {boolean}
	*/
	function isElementNode(node) {
		return node && node.nodeType === Node$1.ELEMENT_NODE;
	}
	/**
	* Returns true if `node` is a text node
	* @param {Node} node
	* @returns {boolean}
	*/
	function isTextNode(node) {
		return node && node.nodeType === Node$1.TEXT_NODE;
	}
	/**
	* Check if en element node can be inserted before `child`, or at the end if child is falsy,
	* according to the presence and position of a doctype node on the same level.
	*
	* @param {Document} doc The document node
	* @param {Node} child the node that would become the nextSibling if the element would be inserted
	* @returns {boolean} `true` if an element can be inserted before child
	* @private
	* https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity
	*/
	function isElementInsertionPossible(doc, child) {
		var parentChildNodes = doc.childNodes || [];
		if (find(parentChildNodes, isElementNode) || isDocTypeNode(child)) return false;
		var docTypeNode = find(parentChildNodes, isDocTypeNode);
		return !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));
	}
	/**
	* Check if en element node can be inserted before `child`, or at the end if child is falsy,
	* according to the presence and position of a doctype node on the same level.
	*
	* @param {Node} doc The document node
	* @param {Node} child the node that would become the nextSibling if the element would be inserted
	* @returns {boolean} `true` if an element can be inserted before child
	* @private
	* https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity
	*/
	function isElementReplacementPossible(doc, child) {
		var parentChildNodes = doc.childNodes || [];
		function hasElementChildThatIsNotChild(node) {
			return isElementNode(node) && node !== child;
		}
		if (find(parentChildNodes, hasElementChildThatIsNotChild)) return false;
		var docTypeNode = find(parentChildNodes, isDocTypeNode);
		return !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));
	}
	/**
	* @private
	* Steps 1-5 of the checks before inserting and before replacing a child are the same.
	*
	* @param {Node} parent the parent node to insert `node` into
	* @param {Node} node the node to insert
	* @param {Node=} child the node that should become the `nextSibling` of `node`
	* @returns {Node}
	* @throws DOMException for several node combinations that would create a DOM that is not well-formed.
	* @throws DOMException if `child` is provided but is not a child of `parent`.
	* @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity
	* @see https://dom.spec.whatwg.org/#concept-node-replace
	*/
	function assertPreInsertionValidity1to5(parent, node, child) {
		if (!hasValidParentNodeType(parent)) throw new DOMException(HIERARCHY_REQUEST_ERR, "Unexpected parent node type " + parent.nodeType);
		if (child && child.parentNode !== parent) throw new DOMException(NOT_FOUND_ERR, "child not in parent");
		if (!hasInsertableNodeType(node) || isDocTypeNode(node) && parent.nodeType !== Node$1.DOCUMENT_NODE) throw new DOMException(HIERARCHY_REQUEST_ERR, "Unexpected node type " + node.nodeType + " for parent node type " + parent.nodeType);
	}
	/**
	* @private
	* Step 6 of the checks before inserting and before replacing a child are different.
	*
	* @param {Document} parent the parent node to insert `node` into
	* @param {Node} node the node to insert
	* @param {Node | undefined} child the node that should become the `nextSibling` of `node`
	* @returns {Node}
	* @throws DOMException for several node combinations that would create a DOM that is not well-formed.
	* @throws DOMException if `child` is provided but is not a child of `parent`.
	* @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity
	* @see https://dom.spec.whatwg.org/#concept-node-replace
	*/
	function assertPreInsertionValidityInDocument(parent, node, child) {
		var parentChildNodes = parent.childNodes || [];
		var nodeChildNodes = node.childNodes || [];
		if (node.nodeType === Node$1.DOCUMENT_FRAGMENT_NODE) {
			var nodeChildElements = nodeChildNodes.filter(isElementNode);
			if (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) throw new DOMException(HIERARCHY_REQUEST_ERR, "More than one element or text in fragment");
			if (nodeChildElements.length === 1 && !isElementInsertionPossible(parent, child)) throw new DOMException(HIERARCHY_REQUEST_ERR, "Element in fragment can not be inserted before doctype");
		}
		if (isElementNode(node)) {
			if (!isElementInsertionPossible(parent, child)) throw new DOMException(HIERARCHY_REQUEST_ERR, "Only one element can be added and only after doctype");
		}
		if (isDocTypeNode(node)) {
			if (find(parentChildNodes, isDocTypeNode)) throw new DOMException(HIERARCHY_REQUEST_ERR, "Only one doctype is allowed");
			var parentElementChild = find(parentChildNodes, isElementNode);
			if (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) throw new DOMException(HIERARCHY_REQUEST_ERR, "Doctype can only be inserted before an element");
			if (!child && parentElementChild) throw new DOMException(HIERARCHY_REQUEST_ERR, "Doctype can not be appended since element is present");
		}
	}
	/**
	* @private
	* Step 6 of the checks before inserting and before replacing a child are different.
	*
	* @param {Document} parent the parent node to insert `node` into
	* @param {Node} node the node to insert
	* @param {Node | undefined} child the node that should become the `nextSibling` of `node`
	* @returns {Node}
	* @throws DOMException for several node combinations that would create a DOM that is not well-formed.
	* @throws DOMException if `child` is provided but is not a child of `parent`.
	* @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity
	* @see https://dom.spec.whatwg.org/#concept-node-replace
	*/
	function assertPreReplacementValidityInDocument(parent, node, child) {
		var parentChildNodes = parent.childNodes || [];
		var nodeChildNodes = node.childNodes || [];
		if (node.nodeType === Node$1.DOCUMENT_FRAGMENT_NODE) {
			var nodeChildElements = nodeChildNodes.filter(isElementNode);
			if (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) throw new DOMException(HIERARCHY_REQUEST_ERR, "More than one element or text in fragment");
			if (nodeChildElements.length === 1 && !isElementReplacementPossible(parent, child)) throw new DOMException(HIERARCHY_REQUEST_ERR, "Element in fragment can not be inserted before doctype");
		}
		if (isElementNode(node)) {
			if (!isElementReplacementPossible(parent, child)) throw new DOMException(HIERARCHY_REQUEST_ERR, "Only one element can be added and only after doctype");
		}
		if (isDocTypeNode(node)) {
			function hasDoctypeChildThatIsNotChild(node$1) {
				return isDocTypeNode(node$1) && node$1 !== child;
			}
			if (find(parentChildNodes, hasDoctypeChildThatIsNotChild)) throw new DOMException(HIERARCHY_REQUEST_ERR, "Only one doctype is allowed");
			var parentElementChild = find(parentChildNodes, isElementNode);
			if (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) throw new DOMException(HIERARCHY_REQUEST_ERR, "Doctype can only be inserted before an element");
		}
	}
	/**
	* @private
	* @param {Node} parent the parent node to insert `node` into
	* @param {Node} node the node to insert
	* @param {Node=} child the node that should become the `nextSibling` of `node`
	* @returns {Node}
	* @throws DOMException for several node combinations that would create a DOM that is not well-formed.
	* @throws DOMException if `child` is provided but is not a child of `parent`.
	* @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity
	*/
	function _insertBefore(parent, node, child, _inDocumentAssertion) {
		assertPreInsertionValidity1to5(parent, node, child);
		if (parent.nodeType === Node$1.DOCUMENT_NODE) (_inDocumentAssertion || assertPreInsertionValidityInDocument)(parent, node, child);
		var cp = node.parentNode;
		if (cp) cp.removeChild(node);
		if (node.nodeType === DOCUMENT_FRAGMENT_NODE) {
			var newFirst = node.firstChild;
			if (newFirst == null) return node;
			var newLast = node.lastChild;
		} else newFirst = newLast = node;
		var pre = child ? child.previousSibling : parent.lastChild;
		newFirst.previousSibling = pre;
		newLast.nextSibling = child;
		if (pre) pre.nextSibling = newFirst;
		else parent.firstChild = newFirst;
		if (child == null) parent.lastChild = newLast;
		else child.previousSibling = newLast;
		do {
			newFirst.parentNode = parent;
			var targetDoc = parent.ownerDocument || parent;
			_updateOwnerDocument(newFirst, targetDoc);
		} while (newFirst !== newLast && (newFirst = newFirst.nextSibling));
		_onUpdateChild(parent.ownerDocument || parent, parent);
		if (node.nodeType == DOCUMENT_FRAGMENT_NODE) node.firstChild = node.lastChild = null;
		return node;
	}
	/**
	* Recursively updates the ownerDocument property for a node and all its descendants
	* @param {Node} node
	* @param {Document} newOwnerDocument
	* @private
	*/
	function _updateOwnerDocument(node, newOwnerDocument) {
		if (node.ownerDocument === newOwnerDocument) return;
		node.ownerDocument = newOwnerDocument;
		if (node.nodeType === ELEMENT_NODE && node.attributes) for (var i$2 = 0; i$2 < node.attributes.length; i$2++) {
			var attr = node.attributes.item(i$2);
			if (attr) attr.ownerDocument = newOwnerDocument;
		}
		var child = node.firstChild;
		while (child) {
			_updateOwnerDocument(child, newOwnerDocument);
			child = child.nextSibling;
		}
	}
	/**
	* Appends `newChild` to `parentNode`.
	* If `newChild` is already connected to a `parentNode` it is first removed from it.
	*
	* @see https://github.com/xmldom/xmldom/issues/135
	* @see https://github.com/xmldom/xmldom/issues/145
	* @param {Node} parentNode
	* @param {Node} newChild
	* @returns {Node}
	* @private
	*/
	function _appendSingleChild(parentNode, newChild) {
		if (newChild.parentNode) newChild.parentNode.removeChild(newChild);
		newChild.parentNode = parentNode;
		newChild.previousSibling = parentNode.lastChild;
		newChild.nextSibling = null;
		if (newChild.previousSibling) newChild.previousSibling.nextSibling = newChild;
		else parentNode.firstChild = newChild;
		parentNode.lastChild = newChild;
		_onUpdateChild(parentNode.ownerDocument, parentNode, newChild);
		var targetDoc = parentNode.ownerDocument || parentNode;
		_updateOwnerDocument(newChild, targetDoc);
		return newChild;
	}
	Document.prototype = {
		nodeName: "#document",
		nodeType: DOCUMENT_NODE,
		doctype: null,
		documentElement: null,
		_inc: 1,
		insertBefore: function(newChild, refChild) {
			if (newChild.nodeType == DOCUMENT_FRAGMENT_NODE) {
				var child = newChild.firstChild;
				while (child) {
					var next = child.nextSibling;
					this.insertBefore(child, refChild);
					child = next;
				}
				return newChild;
			}
			_insertBefore(this, newChild, refChild);
			_updateOwnerDocument(newChild, this);
			if (this.documentElement === null && newChild.nodeType === ELEMENT_NODE) this.documentElement = newChild;
			return newChild;
		},
		removeChild: function(oldChild) {
			if (this.documentElement == oldChild) this.documentElement = null;
			return _removeChild(this, oldChild);
		},
		replaceChild: function(newChild, oldChild) {
			_insertBefore(this, newChild, oldChild, assertPreReplacementValidityInDocument);
			_updateOwnerDocument(newChild, this);
			if (oldChild) this.removeChild(oldChild);
			if (isElementNode(newChild)) this.documentElement = newChild;
		},
		importNode: function(importedNode, deep) {
			return importNode(this, importedNode, deep);
		},
		getElementById: function(id) {
			var rtv = null;
			_visitNode(this.documentElement, function(node) {
				if (node.nodeType == ELEMENT_NODE) {
					if (node.getAttribute("id") == id) {
						rtv = node;
						return true;
					}
				}
			});
			return rtv;
		},
		getElementsByClassName: function(classNames) {
			var classNamesSet = toOrderedSet(classNames);
			return new LiveNodeList(this, function(base) {
				var ls = [];
				if (classNamesSet.length > 0) _visitNode(base.documentElement, function(node) {
					if (node !== base && node.nodeType === ELEMENT_NODE) {
						var nodeClassNames = node.getAttribute("class");
						if (nodeClassNames) {
							var matches = classNames === nodeClassNames;
							if (!matches) {
								var nodeClassNamesSet = toOrderedSet(nodeClassNames);
								matches = classNamesSet.every(arrayIncludes(nodeClassNamesSet));
							}
							if (matches) ls.push(node);
						}
					}
				});
				return ls;
			});
		},
		createElement: function(tagName) {
			var node = new Element$2();
			node.ownerDocument = this;
			node.nodeName = tagName;
			node.tagName = tagName;
			node.localName = tagName;
			node.childNodes = new NodeList();
			var attrs = node.attributes = new NamedNodeMap();
			attrs._ownerElement = node;
			return node;
		},
		createDocumentFragment: function() {
			var node = new DocumentFragment();
			node.ownerDocument = this;
			node.childNodes = new NodeList();
			return node;
		},
		createTextNode: function(data) {
			var node = new Text();
			node.ownerDocument = this;
			node.appendData(data);
			return node;
		},
		createComment: function(data) {
			var node = new Comment();
			node.ownerDocument = this;
			node.appendData(data);
			return node;
		},
		createCDATASection: function(data) {
			var node = new CDATASection();
			node.ownerDocument = this;
			node.appendData(data);
			return node;
		},
		createProcessingInstruction: function(target, data) {
			var node = new ProcessingInstruction();
			node.ownerDocument = this;
			node.tagName = node.nodeName = node.target = target;
			node.nodeValue = node.data = data;
			return node;
		},
		createAttribute: function(name) {
			var node = new Attr();
			node.ownerDocument = this;
			node.name = name;
			node.nodeName = name;
			node.localName = name;
			node.specified = true;
			return node;
		},
		createEntityReference: function(name) {
			var node = new EntityReference();
			node.ownerDocument = this;
			node.nodeName = name;
			return node;
		},
		createElementNS: function(namespaceURI, qualifiedName) {
			var node = new Element$2();
			var pl = qualifiedName.split(":");
			var attrs = node.attributes = new NamedNodeMap();
			node.childNodes = new NodeList();
			node.ownerDocument = this;
			node.nodeName = qualifiedName;
			node.tagName = qualifiedName;
			node.namespaceURI = namespaceURI;
			if (pl.length == 2) {
				node.prefix = pl[0];
				node.localName = pl[1];
			} else node.localName = qualifiedName;
			attrs._ownerElement = node;
			return node;
		},
		createAttributeNS: function(namespaceURI, qualifiedName) {
			var node = new Attr();
			var pl = qualifiedName.split(":");
			node.ownerDocument = this;
			node.nodeName = qualifiedName;
			node.name = qualifiedName;
			node.namespaceURI = namespaceURI;
			node.specified = true;
			if (pl.length == 2) {
				node.prefix = pl[0];
				node.localName = pl[1];
			} else node.localName = qualifiedName;
			return node;
		}
	};
	_extends(Document, Node$1);
	function Element$2() {
		this._nsMap = {};
	}
	Element$2.prototype = {
		nodeType: ELEMENT_NODE,
		hasAttribute: function(name) {
			return this.getAttributeNode(name) != null;
		},
		getAttribute: function(name) {
			var attr = this.getAttributeNode(name);
			return attr && attr.value || "";
		},
		getAttributeNode: function(name) {
			return this.attributes.getNamedItem(name);
		},
		setAttribute: function(name, value) {
			var attr = this.ownerDocument.createAttribute(name);
			attr.value = attr.nodeValue = "" + value;
			this.setAttributeNode(attr);
		},
		removeAttribute: function(name) {
			var attr = this.getAttributeNode(name);
			attr && this.removeAttributeNode(attr);
		},
		appendChild: function(newChild) {
			if (newChild.nodeType === DOCUMENT_FRAGMENT_NODE) return this.insertBefore(newChild, null);
			else return _appendSingleChild(this, newChild);
		},
		setAttributeNode: function(newAttr) {
			return this.attributes.setNamedItem(newAttr);
		},
		setAttributeNodeNS: function(newAttr) {
			return this.attributes.setNamedItemNS(newAttr);
		},
		removeAttributeNode: function(oldAttr) {
			return this.attributes.removeNamedItem(oldAttr.nodeName);
		},
		removeAttributeNS: function(namespaceURI, localName) {
			var old = this.getAttributeNodeNS(namespaceURI, localName);
			old && this.removeAttributeNode(old);
		},
		hasAttributeNS: function(namespaceURI, localName) {
			return this.getAttributeNodeNS(namespaceURI, localName) != null;
		},
		getAttributeNS: function(namespaceURI, localName) {
			var attr = this.getAttributeNodeNS(namespaceURI, localName);
			return attr && attr.value || "";
		},
		setAttributeNS: function(namespaceURI, qualifiedName, value) {
			var attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);
			attr.value = attr.nodeValue = "" + value;
			this.setAttributeNode(attr);
		},
		getAttributeNodeNS: function(namespaceURI, localName) {
			return this.attributes.getNamedItemNS(namespaceURI, localName);
		},
		getElementsByTagName: function(tagName) {
			return new LiveNodeList(this, function(base) {
				var ls = [];
				_visitNode(base, function(node) {
					if (node !== base && node.nodeType == ELEMENT_NODE && (tagName === "*" || node.tagName == tagName)) ls.push(node);
				});
				return ls;
			});
		},
		getElementsByTagNameNS: function(namespaceURI, localName) {
			return new LiveNodeList(this, function(base) {
				var ls = [];
				_visitNode(base, function(node) {
					if (node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === "*" || node.namespaceURI === namespaceURI) && (localName === "*" || node.localName == localName)) ls.push(node);
				});
				return ls;
			});
		}
	};
	Document.prototype.getElementsByTagName = Element$2.prototype.getElementsByTagName;
	Document.prototype.getElementsByTagNameNS = Element$2.prototype.getElementsByTagNameNS;
	_extends(Element$2, Node$1);
	function Attr() {}
	Attr.prototype.nodeType = ATTRIBUTE_NODE;
	_extends(Attr, Node$1);
	function CharacterData() {}
	CharacterData.prototype = {
		data: "",
		substringData: function(offset, count) {
			return this.data.substring(offset, offset + count);
		},
		appendData: function(text$1) {
			text$1 = this.data + text$1;
			this.nodeValue = this.data = text$1;
			this.length = text$1.length;
		},
		insertData: function(offset, text$1) {
			this.replaceData(offset, 0, text$1);
		},
		appendChild: function(newChild) {
			throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR]);
		},
		deleteData: function(offset, count) {
			this.replaceData(offset, count, "");
		},
		replaceData: function(offset, count, text$1) {
			var start = this.data.substring(0, offset);
			var end = this.data.substring(offset + count);
			text$1 = start + text$1 + end;
			this.nodeValue = this.data = text$1;
			this.length = text$1.length;
		}
	};
	_extends(CharacterData, Node$1);
	function Text() {}
	Text.prototype = {
		nodeName: "#text",
		nodeType: TEXT_NODE,
		splitText: function(offset) {
			var text$1 = this.data;
			var newText = text$1.substring(offset);
			text$1 = text$1.substring(0, offset);
			this.data = this.nodeValue = text$1;
			this.length = text$1.length;
			var newNode = this.ownerDocument.createTextNode(newText);
			if (this.parentNode) this.parentNode.insertBefore(newNode, this.nextSibling);
			return newNode;
		}
	};
	_extends(Text, CharacterData);
	function Comment() {}
	Comment.prototype = {
		nodeName: "#comment",
		nodeType: COMMENT_NODE
	};
	_extends(Comment, CharacterData);
	function CDATASection() {}
	CDATASection.prototype = {
		nodeName: "#cdata-section",
		nodeType: CDATA_SECTION_NODE
	};
	_extends(CDATASection, CharacterData);
	function DocumentType() {}
	DocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;
	_extends(DocumentType, Node$1);
	function Notation() {}
	Notation.prototype.nodeType = NOTATION_NODE;
	_extends(Notation, Node$1);
	function Entity() {}
	Entity.prototype.nodeType = ENTITY_NODE;
	_extends(Entity, Node$1);
	function EntityReference() {}
	EntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;
	_extends(EntityReference, Node$1);
	function DocumentFragment() {}
	DocumentFragment.prototype.nodeName = "#document-fragment";
	DocumentFragment.prototype.nodeType = DOCUMENT_FRAGMENT_NODE;
	_extends(DocumentFragment, Node$1);
	function ProcessingInstruction() {}
	ProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;
	_extends(ProcessingInstruction, Node$1);
	function XMLSerializer() {}
	XMLSerializer.prototype.serializeToString = function(node, isHtml, nodeFilter) {
		return nodeSerializeToString.call(node, isHtml, nodeFilter);
	};
	Node$1.prototype.toString = nodeSerializeToString;
	function nodeSerializeToString(isHtml, nodeFilter) {
		var buf = [];
		var refNode = this.nodeType == 9 && this.documentElement || this;
		var prefix = refNode.prefix;
		var uri = refNode.namespaceURI;
		if (uri && prefix == null) {
			var prefix = refNode.lookupPrefix(uri);
			if (prefix == null) var visibleNamespaces = [{
				namespace: uri,
				prefix: null
			}];
		}
		serializeToString(this, buf, isHtml, nodeFilter, visibleNamespaces);
		return buf.join("");
	}
	function needNamespaceDefine(node, isHTML, visibleNamespaces) {
		var prefix = node.prefix || "";
		var uri = node.namespaceURI;
		if (!uri) return false;
		if (prefix === "xml" && uri === NAMESPACE$2.XML || uri === NAMESPACE$2.XMLNS) return false;
		var i$2 = visibleNamespaces.length;
		while (i$2--) {
			var ns = visibleNamespaces[i$2];
			if (ns.prefix === prefix) return ns.namespace !== uri;
		}
		return true;
	}
	/**
	* Well-formed constraint: No < in Attribute Values
	* > The replacement text of any entity referred to directly or indirectly
	* > in an attribute value must not contain a <.
	* @see https://www.w3.org/TR/xml11/#CleanAttrVals
	* @see https://www.w3.org/TR/xml11/#NT-AttValue
	*
	* Literal whitespace other than space that appear in attribute values
	* are serialized as their entity references, so they will be preserved.
	* (In contrast to whitespace literals in the input which are normalized to spaces)
	* @see https://www.w3.org/TR/xml11/#AVNormalize
	* @see https://w3c.github.io/DOM-Parsing/#serializing-an-element-s-attributes
	*/
	function addSerializedAttribute(buf, qualifiedName, value) {
		buf.push(" ", qualifiedName, "=\"", value.replace(/[<>&"\t\n\r]/g, _xmlEncoder), "\"");
	}
	function serializeToString(node, buf, isHTML, nodeFilter, visibleNamespaces) {
		if (!visibleNamespaces) visibleNamespaces = [];
		if (nodeFilter) {
			node = nodeFilter(node);
			if (node) {
				if (typeof node == "string") {
					buf.push(node);
					return;
				}
			} else return;
		}
		switch (node.nodeType) {
			case ELEMENT_NODE:
				var attrs = node.attributes;
				var len$1 = attrs.length;
				var child = node.firstChild;
				var nodeName = node.tagName;
				isHTML = NAMESPACE$2.isHTML(node.namespaceURI) || isHTML;
				var prefixedNodeName = nodeName;
				if (!isHTML && !node.prefix && node.namespaceURI) {
					var defaultNS;
					for (var ai = 0; ai < attrs.length; ai++) if (attrs.item(ai).name === "xmlns") {
						defaultNS = attrs.item(ai).value;
						break;
					}
					if (!defaultNS) for (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {
						var namespace = visibleNamespaces[nsi];
						if (namespace.prefix === "" && namespace.namespace === node.namespaceURI) {
							defaultNS = namespace.namespace;
							break;
						}
					}
					if (defaultNS !== node.namespaceURI) for (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {
						var namespace = visibleNamespaces[nsi];
						if (namespace.namespace === node.namespaceURI) {
							if (namespace.prefix) prefixedNodeName = namespace.prefix + ":" + nodeName;
							break;
						}
					}
				}
				buf.push("<", prefixedNodeName);
				for (var i$2 = 0; i$2 < len$1; i$2++) {
					var attr = attrs.item(i$2);
					if (attr.prefix == "xmlns") visibleNamespaces.push({
						prefix: attr.localName,
						namespace: attr.value
					});
					else if (attr.nodeName == "xmlns") visibleNamespaces.push({
						prefix: "",
						namespace: attr.value
					});
				}
				for (var i$2 = 0; i$2 < len$1; i$2++) {
					var attr = attrs.item(i$2);
					if (needNamespaceDefine(attr, isHTML, visibleNamespaces)) {
						var prefix = attr.prefix || "";
						var uri = attr.namespaceURI;
						addSerializedAttribute(buf, prefix ? "xmlns:" + prefix : "xmlns", uri);
						visibleNamespaces.push({
							prefix,
							namespace: uri
						});
					}
					serializeToString(attr, buf, isHTML, nodeFilter, visibleNamespaces);
				}
				if (nodeName === prefixedNodeName && needNamespaceDefine(node, isHTML, visibleNamespaces)) {
					var prefix = node.prefix || "";
					var uri = node.namespaceURI;
					addSerializedAttribute(buf, prefix ? "xmlns:" + prefix : "xmlns", uri);
					visibleNamespaces.push({
						prefix,
						namespace: uri
					});
				}
				if (child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)) {
					buf.push(">");
					if (isHTML && /^script$/i.test(nodeName)) while (child) {
						if (child.data) buf.push(child.data);
						else serializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());
						child = child.nextSibling;
					}
					else while (child) {
						serializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());
						child = child.nextSibling;
					}
					buf.push("</", prefixedNodeName, ">");
				} else buf.push("/>");
				return;
			case DOCUMENT_NODE:
			case DOCUMENT_FRAGMENT_NODE:
				var child = node.firstChild;
				while (child) {
					serializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());
					child = child.nextSibling;
				}
				return;
			case ATTRIBUTE_NODE: return addSerializedAttribute(buf, node.name, node.value);
			case TEXT_NODE:
 /**
			* The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,
			* except when used as markup delimiters, or within a comment, a processing instruction, or a CDATA section.
			* If they are needed elsewhere, they must be escaped using either numeric character references or the strings
			* `&amp;` and `&lt;` respectively.
			* The right angle bracket (>) may be represented using the string " &gt; ", and must, for compatibility,
			* be escaped using either `&gt;` or a character reference when it appears in the string `]]>` in content,
			* when that string is not marking the end of a CDATA section.
			*
			* In the content of elements, character data is any string of characters
			* which does not contain the start-delimiter of any markup
			* and does not include the CDATA-section-close delimiter, `]]>`.
			*
			* @see https://www.w3.org/TR/xml/#NT-CharData
			* @see https://w3c.github.io/DOM-Parsing/#xml-serializing-a-text-node
			*/
			return buf.push(node.data.replace(/[<&>]/g, _xmlEncoder));
			case CDATA_SECTION_NODE: return buf.push("<![CDATA[", node.data, "]]>");
			case COMMENT_NODE: return buf.push("<!--", node.data, "-->");
			case DOCUMENT_TYPE_NODE:
				var pubid = node.publicId;
				var sysid = node.systemId;
				buf.push("<!DOCTYPE ", node.name);
				if (pubid) {
					buf.push(" PUBLIC ", pubid);
					if (sysid && sysid != ".") buf.push(" ", sysid);
					buf.push(">");
				} else if (sysid && sysid != ".") buf.push(" SYSTEM ", sysid, ">");
				else {
					var sub = node.internalSubset;
					if (sub) buf.push(" [", sub, "]");
					buf.push(">");
				}
				return;
			case PROCESSING_INSTRUCTION_NODE: return buf.push("<?", node.target, " ", node.data, "?>");
			case ENTITY_REFERENCE_NODE: return buf.push("&", node.nodeName, ";");
			default: buf.push("??", node.nodeName);
		}
	}
	function importNode(doc, node, deep) {
		var node2;
		switch (node.nodeType) {
			case ELEMENT_NODE:
				node2 = node.cloneNode(false);
				node2.ownerDocument = doc;
			case DOCUMENT_FRAGMENT_NODE: break;
			case ATTRIBUTE_NODE:
				deep = true;
				break;
		}
		if (!node2) node2 = node.cloneNode(false);
		node2.ownerDocument = doc;
		node2.parentNode = null;
		if (deep) {
			var child = node.firstChild;
			while (child) {
				node2.appendChild(importNode(doc, child, deep));
				child = child.nextSibling;
			}
		}
		return node2;
	}
	function cloneNode(doc, node, deep) {
		var node2 = new node.constructor();
		for (var n in node) if (Object.prototype.hasOwnProperty.call(node, n)) {
			var v = node[n];
			if (typeof v != "object") {
				if (v != node2[n]) node2[n] = v;
			}
		}
		if (node.childNodes) node2.childNodes = new NodeList();
		node2.ownerDocument = doc;
		switch (node2.nodeType) {
			case ELEMENT_NODE:
				var attrs = node.attributes;
				var attrs2 = node2.attributes = new NamedNodeMap();
				var len$1 = attrs.length;
				attrs2._ownerElement = node2;
				for (var i$2 = 0; i$2 < len$1; i$2++) node2.setAttributeNode(cloneNode(doc, attrs.item(i$2), true));
				break;
			case ATTRIBUTE_NODE: deep = true;
		}
		if (deep) {
			var child = node.firstChild;
			while (child) {
				node2.appendChild(cloneNode(doc, child, deep));
				child = child.nextSibling;
			}
		}
		return node2;
	}
	function __set__(object$1, key, value) {
		object$1[key] = value;
	}
	try {
		if (Object.defineProperty) {
			Object.defineProperty(LiveNodeList.prototype, "length", { get: function() {
				_updateLiveList(this);
				return this.$$length;
			} });
			Object.defineProperty(Node$1.prototype, "textContent", {
				get: function() {
					return getTextContent(this);
				},
				set: function(data) {
					switch (this.nodeType) {
						case ELEMENT_NODE:
						case DOCUMENT_FRAGMENT_NODE:
							while (this.firstChild) this.removeChild(this.firstChild);
							if (data || String(data)) this.appendChild(this.ownerDocument.createTextNode(data));
							break;
						default:
							this.data = data;
							this.value = data;
							this.nodeValue = data;
					}
				}
			});
			function getTextContent(node) {
				switch (node.nodeType) {
					case ELEMENT_NODE:
					case DOCUMENT_FRAGMENT_NODE:
						var buf = [];
						node = node.firstChild;
						while (node) {
							if (node.nodeType !== 7 && node.nodeType !== 8) buf.push(getTextContent(node));
							node = node.nextSibling;
						}
						return buf.join("");
					default: return node.nodeValue;
				}
			}
			__set__ = function(object$1, key, value) {
				object$1["$$" + key] = value;
			};
		}
	} catch (e) {}
	exports.DocumentType = DocumentType;
	exports.DOMException = DOMException;
	exports.DOMImplementation = DOMImplementation$1;
	exports.Element = Element$2;
	exports.Node = Node$1;
	exports.NodeList = NodeList;
	exports.XMLSerializer = XMLSerializer;
}) });

//#endregion
//#region node_modules/@xmldom/xmldom/lib/entities.js
var require_entities = /* @__PURE__ */ __commonJS({ "node_modules/@xmldom/xmldom/lib/entities.js": ((exports) => {
	var freeze = require_conventions().freeze;
	/**
	* The entities that are predefined in every XML document.
	*
	* @see https://www.w3.org/TR/2006/REC-xml11-20060816/#sec-predefined-ent W3C XML 1.1
	* @see https://www.w3.org/TR/2008/REC-xml-20081126/#sec-predefined-ent W3C XML 1.0
	* @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Predefined_entities_in_XML Wikipedia
	*/
	exports.XML_ENTITIES = freeze({
		amp: "&",
		apos: "'",
		gt: ">",
		lt: "<",
		quot: "\""
	});
	/**
	* A map of all entities that are detected in an HTML document.
	* They contain all entries from `XML_ENTITIES`.
	*
	* @see XML_ENTITIES
	* @see DOMParser.parseFromString
	* @see DOMImplementation.prototype.createHTMLDocument
	* @see https://html.spec.whatwg.org/#named-character-references WHATWG HTML(5) Spec
	* @see https://html.spec.whatwg.org/entities.json JSON
	* @see https://www.w3.org/TR/xml-entity-names/ W3C XML Entity Names
	* @see https://www.w3.org/TR/html4/sgml/entities.html W3C HTML4/SGML
	* @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Character_entity_references_in_HTML Wikipedia (HTML)
	* @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Entities_representing_special_characters_in_XHTML Wikpedia (XHTML)
	*/
	exports.HTML_ENTITIES = freeze({
		Aacute: "Á",
		aacute: "á",
		Abreve: "Ă",
		abreve: "ă",
		ac: "∾",
		acd: "∿",
		acE: "∾̳",
		Acirc: "Â",
		acirc: "â",
		acute: "´",
		Acy: "А",
		acy: "а",
		AElig: "Æ",
		aelig: "æ",
		af: "⁡",
		Afr: "𝔄",
		afr: "𝔞",
		Agrave: "À",
		agrave: "à",
		alefsym: "ℵ",
		aleph: "ℵ",
		Alpha: "Α",
		alpha: "α",
		Amacr: "Ā",
		amacr: "ā",
		amalg: "⨿",
		AMP: "&",
		amp: "&",
		And: "⩓",
		and: "∧",
		andand: "⩕",
		andd: "⩜",
		andslope: "⩘",
		andv: "⩚",
		ang: "∠",
		ange: "⦤",
		angle: "∠",
		angmsd: "∡",
		angmsdaa: "⦨",
		angmsdab: "⦩",
		angmsdac: "⦪",
		angmsdad: "⦫",
		angmsdae: "⦬",
		angmsdaf: "⦭",
		angmsdag: "⦮",
		angmsdah: "⦯",
		angrt: "∟",
		angrtvb: "⊾",
		angrtvbd: "⦝",
		angsph: "∢",
		angst: "Å",
		angzarr: "⍼",
		Aogon: "Ą",
		aogon: "ą",
		Aopf: "𝔸",
		aopf: "𝕒",
		ap: "≈",
		apacir: "⩯",
		apE: "⩰",
		ape: "≊",
		apid: "≋",
		apos: "'",
		ApplyFunction: "⁡",
		approx: "≈",
		approxeq: "≊",
		Aring: "Å",
		aring: "å",
		Ascr: "𝒜",
		ascr: "𝒶",
		Assign: "≔",
		ast: "*",
		asymp: "≈",
		asympeq: "≍",
		Atilde: "Ã",
		atilde: "ã",
		Auml: "Ä",
		auml: "ä",
		awconint: "∳",
		awint: "⨑",
		backcong: "≌",
		backepsilon: "϶",
		backprime: "‵",
		backsim: "∽",
		backsimeq: "⋍",
		Backslash: "∖",
		Barv: "⫧",
		barvee: "⊽",
		Barwed: "⌆",
		barwed: "⌅",
		barwedge: "⌅",
		bbrk: "⎵",
		bbrktbrk: "⎶",
		bcong: "≌",
		Bcy: "Б",
		bcy: "б",
		bdquo: "„",
		becaus: "∵",
		Because: "∵",
		because: "∵",
		bemptyv: "⦰",
		bepsi: "϶",
		bernou: "ℬ",
		Bernoullis: "ℬ",
		Beta: "Β",
		beta: "β",
		beth: "ℶ",
		between: "≬",
		Bfr: "𝔅",
		bfr: "𝔟",
		bigcap: "⋂",
		bigcirc: "◯",
		bigcup: "⋃",
		bigodot: "⨀",
		bigoplus: "⨁",
		bigotimes: "⨂",
		bigsqcup: "⨆",
		bigstar: "★",
		bigtriangledown: "▽",
		bigtriangleup: "△",
		biguplus: "⨄",
		bigvee: "⋁",
		bigwedge: "⋀",
		bkarow: "⤍",
		blacklozenge: "⧫",
		blacksquare: "▪",
		blacktriangle: "▴",
		blacktriangledown: "▾",
		blacktriangleleft: "◂",
		blacktriangleright: "▸",
		blank: "␣",
		blk12: "▒",
		blk14: "░",
		blk34: "▓",
		block: "█",
		bne: "=⃥",
		bnequiv: "≡⃥",
		bNot: "⫭",
		bnot: "⌐",
		Bopf: "𝔹",
		bopf: "𝕓",
		bot: "⊥",
		bottom: "⊥",
		bowtie: "⋈",
		boxbox: "⧉",
		boxDL: "╗",
		boxDl: "╖",
		boxdL: "╕",
		boxdl: "┐",
		boxDR: "╔",
		boxDr: "╓",
		boxdR: "╒",
		boxdr: "┌",
		boxH: "═",
		boxh: "─",
		boxHD: "╦",
		boxHd: "╤",
		boxhD: "╥",
		boxhd: "┬",
		boxHU: "╩",
		boxHu: "╧",
		boxhU: "╨",
		boxhu: "┴",
		boxminus: "⊟",
		boxplus: "⊞",
		boxtimes: "⊠",
		boxUL: "╝",
		boxUl: "╜",
		boxuL: "╛",
		boxul: "┘",
		boxUR: "╚",
		boxUr: "╙",
		boxuR: "╘",
		boxur: "└",
		boxV: "║",
		boxv: "│",
		boxVH: "╬",
		boxVh: "╫",
		boxvH: "╪",
		boxvh: "┼",
		boxVL: "╣",
		boxVl: "╢",
		boxvL: "╡",
		boxvl: "┤",
		boxVR: "╠",
		boxVr: "╟",
		boxvR: "╞",
		boxvr: "├",
		bprime: "‵",
		Breve: "˘",
		breve: "˘",
		brvbar: "¦",
		Bscr: "ℬ",
		bscr: "𝒷",
		bsemi: "⁏",
		bsim: "∽",
		bsime: "⋍",
		bsol: "\\",
		bsolb: "⧅",
		bsolhsub: "⟈",
		bull: "•",
		bullet: "•",
		bump: "≎",
		bumpE: "⪮",
		bumpe: "≏",
		Bumpeq: "≎",
		bumpeq: "≏",
		Cacute: "Ć",
		cacute: "ć",
		Cap: "⋒",
		cap: "∩",
		capand: "⩄",
		capbrcup: "⩉",
		capcap: "⩋",
		capcup: "⩇",
		capdot: "⩀",
		CapitalDifferentialD: "ⅅ",
		caps: "∩︀",
		caret: "⁁",
		caron: "ˇ",
		Cayleys: "ℭ",
		ccaps: "⩍",
		Ccaron: "Č",
		ccaron: "č",
		Ccedil: "Ç",
		ccedil: "ç",
		Ccirc: "Ĉ",
		ccirc: "ĉ",
		Cconint: "∰",
		ccups: "⩌",
		ccupssm: "⩐",
		Cdot: "Ċ",
		cdot: "ċ",
		cedil: "¸",
		Cedilla: "¸",
		cemptyv: "⦲",
		cent: "¢",
		CenterDot: "·",
		centerdot: "·",
		Cfr: "ℭ",
		cfr: "𝔠",
		CHcy: "Ч",
		chcy: "ч",
		check: "✓",
		checkmark: "✓",
		Chi: "Χ",
		chi: "χ",
		cir: "○",
		circ: "ˆ",
		circeq: "≗",
		circlearrowleft: "↺",
		circlearrowright: "↻",
		circledast: "⊛",
		circledcirc: "⊚",
		circleddash: "⊝",
		CircleDot: "⊙",
		circledR: "®",
		circledS: "Ⓢ",
		CircleMinus: "⊖",
		CirclePlus: "⊕",
		CircleTimes: "⊗",
		cirE: "⧃",
		cire: "≗",
		cirfnint: "⨐",
		cirmid: "⫯",
		cirscir: "⧂",
		ClockwiseContourIntegral: "∲",
		CloseCurlyDoubleQuote: "”",
		CloseCurlyQuote: "’",
		clubs: "♣",
		clubsuit: "♣",
		Colon: "∷",
		colon: ":",
		Colone: "⩴",
		colone: "≔",
		coloneq: "≔",
		comma: ",",
		commat: "@",
		comp: "∁",
		compfn: "∘",
		complement: "∁",
		complexes: "ℂ",
		cong: "≅",
		congdot: "⩭",
		Congruent: "≡",
		Conint: "∯",
		conint: "∮",
		ContourIntegral: "∮",
		Copf: "ℂ",
		copf: "𝕔",
		coprod: "∐",
		Coproduct: "∐",
		COPY: "©",
		copy: "©",
		copysr: "℗",
		CounterClockwiseContourIntegral: "∳",
		crarr: "↵",
		Cross: "⨯",
		cross: "✗",
		Cscr: "𝒞",
		cscr: "𝒸",
		csub: "⫏",
		csube: "⫑",
		csup: "⫐",
		csupe: "⫒",
		ctdot: "⋯",
		cudarrl: "⤸",
		cudarrr: "⤵",
		cuepr: "⋞",
		cuesc: "⋟",
		cularr: "↶",
		cularrp: "⤽",
		Cup: "⋓",
		cup: "∪",
		cupbrcap: "⩈",
		CupCap: "≍",
		cupcap: "⩆",
		cupcup: "⩊",
		cupdot: "⊍",
		cupor: "⩅",
		cups: "∪︀",
		curarr: "↷",
		curarrm: "⤼",
		curlyeqprec: "⋞",
		curlyeqsucc: "⋟",
		curlyvee: "⋎",
		curlywedge: "⋏",
		curren: "¤",
		curvearrowleft: "↶",
		curvearrowright: "↷",
		cuvee: "⋎",
		cuwed: "⋏",
		cwconint: "∲",
		cwint: "∱",
		cylcty: "⌭",
		Dagger: "‡",
		dagger: "†",
		daleth: "ℸ",
		Darr: "↡",
		dArr: "⇓",
		darr: "↓",
		dash: "‐",
		Dashv: "⫤",
		dashv: "⊣",
		dbkarow: "⤏",
		dblac: "˝",
		Dcaron: "Ď",
		dcaron: "ď",
		Dcy: "Д",
		dcy: "д",
		DD: "ⅅ",
		dd: "ⅆ",
		ddagger: "‡",
		ddarr: "⇊",
		DDotrahd: "⤑",
		ddotseq: "⩷",
		deg: "°",
		Del: "∇",
		Delta: "Δ",
		delta: "δ",
		demptyv: "⦱",
		dfisht: "⥿",
		Dfr: "𝔇",
		dfr: "𝔡",
		dHar: "⥥",
		dharl: "⇃",
		dharr: "⇂",
		DiacriticalAcute: "´",
		DiacriticalDot: "˙",
		DiacriticalDoubleAcute: "˝",
		DiacriticalGrave: "`",
		DiacriticalTilde: "˜",
		diam: "⋄",
		Diamond: "⋄",
		diamond: "⋄",
		diamondsuit: "♦",
		diams: "♦",
		die: "¨",
		DifferentialD: "ⅆ",
		digamma: "ϝ",
		disin: "⋲",
		div: "÷",
		divide: "÷",
		divideontimes: "⋇",
		divonx: "⋇",
		DJcy: "Ђ",
		djcy: "ђ",
		dlcorn: "⌞",
		dlcrop: "⌍",
		dollar: "$",
		Dopf: "𝔻",
		dopf: "𝕕",
		Dot: "¨",
		dot: "˙",
		DotDot: "⃜",
		doteq: "≐",
		doteqdot: "≑",
		DotEqual: "≐",
		dotminus: "∸",
		dotplus: "∔",
		dotsquare: "⊡",
		doublebarwedge: "⌆",
		DoubleContourIntegral: "∯",
		DoubleDot: "¨",
		DoubleDownArrow: "⇓",
		DoubleLeftArrow: "⇐",
		DoubleLeftRightArrow: "⇔",
		DoubleLeftTee: "⫤",
		DoubleLongLeftArrow: "⟸",
		DoubleLongLeftRightArrow: "⟺",
		DoubleLongRightArrow: "⟹",
		DoubleRightArrow: "⇒",
		DoubleRightTee: "⊨",
		DoubleUpArrow: "⇑",
		DoubleUpDownArrow: "⇕",
		DoubleVerticalBar: "∥",
		DownArrow: "↓",
		Downarrow: "⇓",
		downarrow: "↓",
		DownArrowBar: "⤓",
		DownArrowUpArrow: "⇵",
		DownBreve: "̑",
		downdownarrows: "⇊",
		downharpoonleft: "⇃",
		downharpoonright: "⇂",
		DownLeftRightVector: "⥐",
		DownLeftTeeVector: "⥞",
		DownLeftVector: "↽",
		DownLeftVectorBar: "⥖",
		DownRightTeeVector: "⥟",
		DownRightVector: "⇁",
		DownRightVectorBar: "⥗",
		DownTee: "⊤",
		DownTeeArrow: "↧",
		drbkarow: "⤐",
		drcorn: "⌟",
		drcrop: "⌌",
		Dscr: "𝒟",
		dscr: "𝒹",
		DScy: "Ѕ",
		dscy: "ѕ",
		dsol: "⧶",
		Dstrok: "Đ",
		dstrok: "đ",
		dtdot: "⋱",
		dtri: "▿",
		dtrif: "▾",
		duarr: "⇵",
		duhar: "⥯",
		dwangle: "⦦",
		DZcy: "Џ",
		dzcy: "џ",
		dzigrarr: "⟿",
		Eacute: "É",
		eacute: "é",
		easter: "⩮",
		Ecaron: "Ě",
		ecaron: "ě",
		ecir: "≖",
		Ecirc: "Ê",
		ecirc: "ê",
		ecolon: "≕",
		Ecy: "Э",
		ecy: "э",
		eDDot: "⩷",
		Edot: "Ė",
		eDot: "≑",
		edot: "ė",
		ee: "ⅇ",
		efDot: "≒",
		Efr: "𝔈",
		efr: "𝔢",
		eg: "⪚",
		Egrave: "È",
		egrave: "è",
		egs: "⪖",
		egsdot: "⪘",
		el: "⪙",
		Element: "∈",
		elinters: "⏧",
		ell: "ℓ",
		els: "⪕",
		elsdot: "⪗",
		Emacr: "Ē",
		emacr: "ē",
		empty: "∅",
		emptyset: "∅",
		EmptySmallSquare: "◻",
		emptyv: "∅",
		EmptyVerySmallSquare: "▫",
		emsp: " ",
		emsp13: " ",
		emsp14: " ",
		ENG: "Ŋ",
		eng: "ŋ",
		ensp: " ",
		Eogon: "Ę",
		eogon: "ę",
		Eopf: "𝔼",
		eopf: "𝕖",
		epar: "⋕",
		eparsl: "⧣",
		eplus: "⩱",
		epsi: "ε",
		Epsilon: "Ε",
		epsilon: "ε",
		epsiv: "ϵ",
		eqcirc: "≖",
		eqcolon: "≕",
		eqsim: "≂",
		eqslantgtr: "⪖",
		eqslantless: "⪕",
		Equal: "⩵",
		equals: "=",
		EqualTilde: "≂",
		equest: "≟",
		Equilibrium: "⇌",
		equiv: "≡",
		equivDD: "⩸",
		eqvparsl: "⧥",
		erarr: "⥱",
		erDot: "≓",
		Escr: "ℰ",
		escr: "ℯ",
		esdot: "≐",
		Esim: "⩳",
		esim: "≂",
		Eta: "Η",
		eta: "η",
		ETH: "Ð",
		eth: "ð",
		Euml: "Ë",
		euml: "ë",
		euro: "€",
		excl: "!",
		exist: "∃",
		Exists: "∃",
		expectation: "ℰ",
		ExponentialE: "ⅇ",
		exponentiale: "ⅇ",
		fallingdotseq: "≒",
		Fcy: "Ф",
		fcy: "ф",
		female: "♀",
		ffilig: "ﬃ",
		fflig: "ﬀ",
		ffllig: "ﬄ",
		Ffr: "𝔉",
		ffr: "𝔣",
		filig: "ﬁ",
		FilledSmallSquare: "◼",
		FilledVerySmallSquare: "▪",
		fjlig: "fj",
		flat: "♭",
		fllig: "ﬂ",
		fltns: "▱",
		fnof: "ƒ",
		Fopf: "𝔽",
		fopf: "𝕗",
		ForAll: "∀",
		forall: "∀",
		fork: "⋔",
		forkv: "⫙",
		Fouriertrf: "ℱ",
		fpartint: "⨍",
		frac12: "½",
		frac13: "⅓",
		frac14: "¼",
		frac15: "⅕",
		frac16: "⅙",
		frac18: "⅛",
		frac23: "⅔",
		frac25: "⅖",
		frac34: "¾",
		frac35: "⅗",
		frac38: "⅜",
		frac45: "⅘",
		frac56: "⅚",
		frac58: "⅝",
		frac78: "⅞",
		frasl: "⁄",
		frown: "⌢",
		Fscr: "ℱ",
		fscr: "𝒻",
		gacute: "ǵ",
		Gamma: "Γ",
		gamma: "γ",
		Gammad: "Ϝ",
		gammad: "ϝ",
		gap: "⪆",
		Gbreve: "Ğ",
		gbreve: "ğ",
		Gcedil: "Ģ",
		Gcirc: "Ĝ",
		gcirc: "ĝ",
		Gcy: "Г",
		gcy: "г",
		Gdot: "Ġ",
		gdot: "ġ",
		gE: "≧",
		ge: "≥",
		gEl: "⪌",
		gel: "⋛",
		geq: "≥",
		geqq: "≧",
		geqslant: "⩾",
		ges: "⩾",
		gescc: "⪩",
		gesdot: "⪀",
		gesdoto: "⪂",
		gesdotol: "⪄",
		gesl: "⋛︀",
		gesles: "⪔",
		Gfr: "𝔊",
		gfr: "𝔤",
		Gg: "⋙",
		gg: "≫",
		ggg: "⋙",
		gimel: "ℷ",
		GJcy: "Ѓ",
		gjcy: "ѓ",
		gl: "≷",
		gla: "⪥",
		glE: "⪒",
		glj: "⪤",
		gnap: "⪊",
		gnapprox: "⪊",
		gnE: "≩",
		gne: "⪈",
		gneq: "⪈",
		gneqq: "≩",
		gnsim: "⋧",
		Gopf: "𝔾",
		gopf: "𝕘",
		grave: "`",
		GreaterEqual: "≥",
		GreaterEqualLess: "⋛",
		GreaterFullEqual: "≧",
		GreaterGreater: "⪢",
		GreaterLess: "≷",
		GreaterSlantEqual: "⩾",
		GreaterTilde: "≳",
		Gscr: "𝒢",
		gscr: "ℊ",
		gsim: "≳",
		gsime: "⪎",
		gsiml: "⪐",
		Gt: "≫",
		GT: ">",
		gt: ">",
		gtcc: "⪧",
		gtcir: "⩺",
		gtdot: "⋗",
		gtlPar: "⦕",
		gtquest: "⩼",
		gtrapprox: "⪆",
		gtrarr: "⥸",
		gtrdot: "⋗",
		gtreqless: "⋛",
		gtreqqless: "⪌",
		gtrless: "≷",
		gtrsim: "≳",
		gvertneqq: "≩︀",
		gvnE: "≩︀",
		Hacek: "ˇ",
		hairsp: " ",
		half: "½",
		hamilt: "ℋ",
		HARDcy: "Ъ",
		hardcy: "ъ",
		hArr: "⇔",
		harr: "↔",
		harrcir: "⥈",
		harrw: "↭",
		Hat: "^",
		hbar: "ℏ",
		Hcirc: "Ĥ",
		hcirc: "ĥ",
		hearts: "♥",
		heartsuit: "♥",
		hellip: "…",
		hercon: "⊹",
		Hfr: "ℌ",
		hfr: "𝔥",
		HilbertSpace: "ℋ",
		hksearow: "⤥",
		hkswarow: "⤦",
		hoarr: "⇿",
		homtht: "∻",
		hookleftarrow: "↩",
		hookrightarrow: "↪",
		Hopf: "ℍ",
		hopf: "𝕙",
		horbar: "―",
		HorizontalLine: "─",
		Hscr: "ℋ",
		hscr: "𝒽",
		hslash: "ℏ",
		Hstrok: "Ħ",
		hstrok: "ħ",
		HumpDownHump: "≎",
		HumpEqual: "≏",
		hybull: "⁃",
		hyphen: "‐",
		Iacute: "Í",
		iacute: "í",
		ic: "⁣",
		Icirc: "Î",
		icirc: "î",
		Icy: "И",
		icy: "и",
		Idot: "İ",
		IEcy: "Е",
		iecy: "е",
		iexcl: "¡",
		iff: "⇔",
		Ifr: "ℑ",
		ifr: "𝔦",
		Igrave: "Ì",
		igrave: "ì",
		ii: "ⅈ",
		iiiint: "⨌",
		iiint: "∭",
		iinfin: "⧜",
		iiota: "℩",
		IJlig: "Ĳ",
		ijlig: "ĳ",
		Im: "ℑ",
		Imacr: "Ī",
		imacr: "ī",
		image: "ℑ",
		ImaginaryI: "ⅈ",
		imagline: "ℐ",
		imagpart: "ℑ",
		imath: "ı",
		imof: "⊷",
		imped: "Ƶ",
		Implies: "⇒",
		in: "∈",
		incare: "℅",
		infin: "∞",
		infintie: "⧝",
		inodot: "ı",
		Int: "∬",
		int: "∫",
		intcal: "⊺",
		integers: "ℤ",
		Integral: "∫",
		intercal: "⊺",
		Intersection: "⋂",
		intlarhk: "⨗",
		intprod: "⨼",
		InvisibleComma: "⁣",
		InvisibleTimes: "⁢",
		IOcy: "Ё",
		iocy: "ё",
		Iogon: "Į",
		iogon: "į",
		Iopf: "𝕀",
		iopf: "𝕚",
		Iota: "Ι",
		iota: "ι",
		iprod: "⨼",
		iquest: "¿",
		Iscr: "ℐ",
		iscr: "𝒾",
		isin: "∈",
		isindot: "⋵",
		isinE: "⋹",
		isins: "⋴",
		isinsv: "⋳",
		isinv: "∈",
		it: "⁢",
		Itilde: "Ĩ",
		itilde: "ĩ",
		Iukcy: "І",
		iukcy: "і",
		Iuml: "Ï",
		iuml: "ï",
		Jcirc: "Ĵ",
		jcirc: "ĵ",
		Jcy: "Й",
		jcy: "й",
		Jfr: "𝔍",
		jfr: "𝔧",
		jmath: "ȷ",
		Jopf: "𝕁",
		jopf: "𝕛",
		Jscr: "𝒥",
		jscr: "𝒿",
		Jsercy: "Ј",
		jsercy: "ј",
		Jukcy: "Є",
		jukcy: "є",
		Kappa: "Κ",
		kappa: "κ",
		kappav: "ϰ",
		Kcedil: "Ķ",
		kcedil: "ķ",
		Kcy: "К",
		kcy: "к",
		Kfr: "𝔎",
		kfr: "𝔨",
		kgreen: "ĸ",
		KHcy: "Х",
		khcy: "х",
		KJcy: "Ќ",
		kjcy: "ќ",
		Kopf: "𝕂",
		kopf: "𝕜",
		Kscr: "𝒦",
		kscr: "𝓀",
		lAarr: "⇚",
		Lacute: "Ĺ",
		lacute: "ĺ",
		laemptyv: "⦴",
		lagran: "ℒ",
		Lambda: "Λ",
		lambda: "λ",
		Lang: "⟪",
		lang: "⟨",
		langd: "⦑",
		langle: "⟨",
		lap: "⪅",
		Laplacetrf: "ℒ",
		laquo: "«",
		Larr: "↞",
		lArr: "⇐",
		larr: "←",
		larrb: "⇤",
		larrbfs: "⤟",
		larrfs: "⤝",
		larrhk: "↩",
		larrlp: "↫",
		larrpl: "⤹",
		larrsim: "⥳",
		larrtl: "↢",
		lat: "⪫",
		lAtail: "⤛",
		latail: "⤙",
		late: "⪭",
		lates: "⪭︀",
		lBarr: "⤎",
		lbarr: "⤌",
		lbbrk: "❲",
		lbrace: "{",
		lbrack: "[",
		lbrke: "⦋",
		lbrksld: "⦏",
		lbrkslu: "⦍",
		Lcaron: "Ľ",
		lcaron: "ľ",
		Lcedil: "Ļ",
		lcedil: "ļ",
		lceil: "⌈",
		lcub: "{",
		Lcy: "Л",
		lcy: "л",
		ldca: "⤶",
		ldquo: "“",
		ldquor: "„",
		ldrdhar: "⥧",
		ldrushar: "⥋",
		ldsh: "↲",
		lE: "≦",
		le: "≤",
		LeftAngleBracket: "⟨",
		LeftArrow: "←",
		Leftarrow: "⇐",
		leftarrow: "←",
		LeftArrowBar: "⇤",
		LeftArrowRightArrow: "⇆",
		leftarrowtail: "↢",
		LeftCeiling: "⌈",
		LeftDoubleBracket: "⟦",
		LeftDownTeeVector: "⥡",
		LeftDownVector: "⇃",
		LeftDownVectorBar: "⥙",
		LeftFloor: "⌊",
		leftharpoondown: "↽",
		leftharpoonup: "↼",
		leftleftarrows: "⇇",
		LeftRightArrow: "↔",
		Leftrightarrow: "⇔",
		leftrightarrow: "↔",
		leftrightarrows: "⇆",
		leftrightharpoons: "⇋",
		leftrightsquigarrow: "↭",
		LeftRightVector: "⥎",
		LeftTee: "⊣",
		LeftTeeArrow: "↤",
		LeftTeeVector: "⥚",
		leftthreetimes: "⋋",
		LeftTriangle: "⊲",
		LeftTriangleBar: "⧏",
		LeftTriangleEqual: "⊴",
		LeftUpDownVector: "⥑",
		LeftUpTeeVector: "⥠",
		LeftUpVector: "↿",
		LeftUpVectorBar: "⥘",
		LeftVector: "↼",
		LeftVectorBar: "⥒",
		lEg: "⪋",
		leg: "⋚",
		leq: "≤",
		leqq: "≦",
		leqslant: "⩽",
		les: "⩽",
		lescc: "⪨",
		lesdot: "⩿",
		lesdoto: "⪁",
		lesdotor: "⪃",
		lesg: "⋚︀",
		lesges: "⪓",
		lessapprox: "⪅",
		lessdot: "⋖",
		lesseqgtr: "⋚",
		lesseqqgtr: "⪋",
		LessEqualGreater: "⋚",
		LessFullEqual: "≦",
		LessGreater: "≶",
		lessgtr: "≶",
		LessLess: "⪡",
		lesssim: "≲",
		LessSlantEqual: "⩽",
		LessTilde: "≲",
		lfisht: "⥼",
		lfloor: "⌊",
		Lfr: "𝔏",
		lfr: "𝔩",
		lg: "≶",
		lgE: "⪑",
		lHar: "⥢",
		lhard: "↽",
		lharu: "↼",
		lharul: "⥪",
		lhblk: "▄",
		LJcy: "Љ",
		ljcy: "љ",
		Ll: "⋘",
		ll: "≪",
		llarr: "⇇",
		llcorner: "⌞",
		Lleftarrow: "⇚",
		llhard: "⥫",
		lltri: "◺",
		Lmidot: "Ŀ",
		lmidot: "ŀ",
		lmoust: "⎰",
		lmoustache: "⎰",
		lnap: "⪉",
		lnapprox: "⪉",
		lnE: "≨",
		lne: "⪇",
		lneq: "⪇",
		lneqq: "≨",
		lnsim: "⋦",
		loang: "⟬",
		loarr: "⇽",
		lobrk: "⟦",
		LongLeftArrow: "⟵",
		Longleftarrow: "⟸",
		longleftarrow: "⟵",
		LongLeftRightArrow: "⟷",
		Longleftrightarrow: "⟺",
		longleftrightarrow: "⟷",
		longmapsto: "⟼",
		LongRightArrow: "⟶",
		Longrightarrow: "⟹",
		longrightarrow: "⟶",
		looparrowleft: "↫",
		looparrowright: "↬",
		lopar: "⦅",
		Lopf: "𝕃",
		lopf: "𝕝",
		loplus: "⨭",
		lotimes: "⨴",
		lowast: "∗",
		lowbar: "_",
		LowerLeftArrow: "↙",
		LowerRightArrow: "↘",
		loz: "◊",
		lozenge: "◊",
		lozf: "⧫",
		lpar: "(",
		lparlt: "⦓",
		lrarr: "⇆",
		lrcorner: "⌟",
		lrhar: "⇋",
		lrhard: "⥭",
		lrm: "‎",
		lrtri: "⊿",
		lsaquo: "‹",
		Lscr: "ℒ",
		lscr: "𝓁",
		Lsh: "↰",
		lsh: "↰",
		lsim: "≲",
		lsime: "⪍",
		lsimg: "⪏",
		lsqb: "[",
		lsquo: "‘",
		lsquor: "‚",
		Lstrok: "Ł",
		lstrok: "ł",
		Lt: "≪",
		LT: "<",
		lt: "<",
		ltcc: "⪦",
		ltcir: "⩹",
		ltdot: "⋖",
		lthree: "⋋",
		ltimes: "⋉",
		ltlarr: "⥶",
		ltquest: "⩻",
		ltri: "◃",
		ltrie: "⊴",
		ltrif: "◂",
		ltrPar: "⦖",
		lurdshar: "⥊",
		luruhar: "⥦",
		lvertneqq: "≨︀",
		lvnE: "≨︀",
		macr: "¯",
		male: "♂",
		malt: "✠",
		maltese: "✠",
		Map: "⤅",
		map: "↦",
		mapsto: "↦",
		mapstodown: "↧",
		mapstoleft: "↤",
		mapstoup: "↥",
		marker: "▮",
		mcomma: "⨩",
		Mcy: "М",
		mcy: "м",
		mdash: "—",
		mDDot: "∺",
		measuredangle: "∡",
		MediumSpace: " ",
		Mellintrf: "ℳ",
		Mfr: "𝔐",
		mfr: "𝔪",
		mho: "℧",
		micro: "µ",
		mid: "∣",
		midast: "*",
		midcir: "⫰",
		middot: "·",
		minus: "−",
		minusb: "⊟",
		minusd: "∸",
		minusdu: "⨪",
		MinusPlus: "∓",
		mlcp: "⫛",
		mldr: "…",
		mnplus: "∓",
		models: "⊧",
		Mopf: "𝕄",
		mopf: "𝕞",
		mp: "∓",
		Mscr: "ℳ",
		mscr: "𝓂",
		mstpos: "∾",
		Mu: "Μ",
		mu: "μ",
		multimap: "⊸",
		mumap: "⊸",
		nabla: "∇",
		Nacute: "Ń",
		nacute: "ń",
		nang: "∠⃒",
		nap: "≉",
		napE: "⩰̸",
		napid: "≋̸",
		napos: "ŉ",
		napprox: "≉",
		natur: "♮",
		natural: "♮",
		naturals: "ℕ",
		nbsp: "\xA0",
		nbump: "≎̸",
		nbumpe: "≏̸",
		ncap: "⩃",
		Ncaron: "Ň",
		ncaron: "ň",
		Ncedil: "Ņ",
		ncedil: "ņ",
		ncong: "≇",
		ncongdot: "⩭̸",
		ncup: "⩂",
		Ncy: "Н",
		ncy: "н",
		ndash: "–",
		ne: "≠",
		nearhk: "⤤",
		neArr: "⇗",
		nearr: "↗",
		nearrow: "↗",
		nedot: "≐̸",
		NegativeMediumSpace: "​",
		NegativeThickSpace: "​",
		NegativeThinSpace: "​",
		NegativeVeryThinSpace: "​",
		nequiv: "≢",
		nesear: "⤨",
		nesim: "≂̸",
		NestedGreaterGreater: "≫",
		NestedLessLess: "≪",
		NewLine: "\n",
		nexist: "∄",
		nexists: "∄",
		Nfr: "𝔑",
		nfr: "𝔫",
		ngE: "≧̸",
		nge: "≱",
		ngeq: "≱",
		ngeqq: "≧̸",
		ngeqslant: "⩾̸",
		nges: "⩾̸",
		nGg: "⋙̸",
		ngsim: "≵",
		nGt: "≫⃒",
		ngt: "≯",
		ngtr: "≯",
		nGtv: "≫̸",
		nhArr: "⇎",
		nharr: "↮",
		nhpar: "⫲",
		ni: "∋",
		nis: "⋼",
		nisd: "⋺",
		niv: "∋",
		NJcy: "Њ",
		njcy: "њ",
		nlArr: "⇍",
		nlarr: "↚",
		nldr: "‥",
		nlE: "≦̸",
		nle: "≰",
		nLeftarrow: "⇍",
		nleftarrow: "↚",
		nLeftrightarrow: "⇎",
		nleftrightarrow: "↮",
		nleq: "≰",
		nleqq: "≦̸",
		nleqslant: "⩽̸",
		nles: "⩽̸",
		nless: "≮",
		nLl: "⋘̸",
		nlsim: "≴",
		nLt: "≪⃒",
		nlt: "≮",
		nltri: "⋪",
		nltrie: "⋬",
		nLtv: "≪̸",
		nmid: "∤",
		NoBreak: "⁠",
		NonBreakingSpace: "\xA0",
		Nopf: "ℕ",
		nopf: "𝕟",
		Not: "⫬",
		not: "¬",
		NotCongruent: "≢",
		NotCupCap: "≭",
		NotDoubleVerticalBar: "∦",
		NotElement: "∉",
		NotEqual: "≠",
		NotEqualTilde: "≂̸",
		NotExists: "∄",
		NotGreater: "≯",
		NotGreaterEqual: "≱",
		NotGreaterFullEqual: "≧̸",
		NotGreaterGreater: "≫̸",
		NotGreaterLess: "≹",
		NotGreaterSlantEqual: "⩾̸",
		NotGreaterTilde: "≵",
		NotHumpDownHump: "≎̸",
		NotHumpEqual: "≏̸",
		notin: "∉",
		notindot: "⋵̸",
		notinE: "⋹̸",
		notinva: "∉",
		notinvb: "⋷",
		notinvc: "⋶",
		NotLeftTriangle: "⋪",
		NotLeftTriangleBar: "⧏̸",
		NotLeftTriangleEqual: "⋬",
		NotLess: "≮",
		NotLessEqual: "≰",
		NotLessGreater: "≸",
		NotLessLess: "≪̸",
		NotLessSlantEqual: "⩽̸",
		NotLessTilde: "≴",
		NotNestedGreaterGreater: "⪢̸",
		NotNestedLessLess: "⪡̸",
		notni: "∌",
		notniva: "∌",
		notnivb: "⋾",
		notnivc: "⋽",
		NotPrecedes: "⊀",
		NotPrecedesEqual: "⪯̸",
		NotPrecedesSlantEqual: "⋠",
		NotReverseElement: "∌",
		NotRightTriangle: "⋫",
		NotRightTriangleBar: "⧐̸",
		NotRightTriangleEqual: "⋭",
		NotSquareSubset: "⊏̸",
		NotSquareSubsetEqual: "⋢",
		NotSquareSuperset: "⊐̸",
		NotSquareSupersetEqual: "⋣",
		NotSubset: "⊂⃒",
		NotSubsetEqual: "⊈",
		NotSucceeds: "⊁",
		NotSucceedsEqual: "⪰̸",
		NotSucceedsSlantEqual: "⋡",
		NotSucceedsTilde: "≿̸",
		NotSuperset: "⊃⃒",
		NotSupersetEqual: "⊉",
		NotTilde: "≁",
		NotTildeEqual: "≄",
		NotTildeFullEqual: "≇",
		NotTildeTilde: "≉",
		NotVerticalBar: "∤",
		npar: "∦",
		nparallel: "∦",
		nparsl: "⫽⃥",
		npart: "∂̸",
		npolint: "⨔",
		npr: "⊀",
		nprcue: "⋠",
		npre: "⪯̸",
		nprec: "⊀",
		npreceq: "⪯̸",
		nrArr: "⇏",
		nrarr: "↛",
		nrarrc: "⤳̸",
		nrarrw: "↝̸",
		nRightarrow: "⇏",
		nrightarrow: "↛",
		nrtri: "⋫",
		nrtrie: "⋭",
		nsc: "⊁",
		nsccue: "⋡",
		nsce: "⪰̸",
		Nscr: "𝒩",
		nscr: "𝓃",
		nshortmid: "∤",
		nshortparallel: "∦",
		nsim: "≁",
		nsime: "≄",
		nsimeq: "≄",
		nsmid: "∤",
		nspar: "∦",
		nsqsube: "⋢",
		nsqsupe: "⋣",
		nsub: "⊄",
		nsubE: "⫅̸",
		nsube: "⊈",
		nsubset: "⊂⃒",
		nsubseteq: "⊈",
		nsubseteqq: "⫅̸",
		nsucc: "⊁",
		nsucceq: "⪰̸",
		nsup: "⊅",
		nsupE: "⫆̸",
		nsupe: "⊉",
		nsupset: "⊃⃒",
		nsupseteq: "⊉",
		nsupseteqq: "⫆̸",
		ntgl: "≹",
		Ntilde: "Ñ",
		ntilde: "ñ",
		ntlg: "≸",
		ntriangleleft: "⋪",
		ntrianglelefteq: "⋬",
		ntriangleright: "⋫",
		ntrianglerighteq: "⋭",
		Nu: "Ν",
		nu: "ν",
		num: "#",
		numero: "№",
		numsp: " ",
		nvap: "≍⃒",
		nVDash: "⊯",
		nVdash: "⊮",
		nvDash: "⊭",
		nvdash: "⊬",
		nvge: "≥⃒",
		nvgt: ">⃒",
		nvHarr: "⤄",
		nvinfin: "⧞",
		nvlArr: "⤂",
		nvle: "≤⃒",
		nvlt: "<⃒",
		nvltrie: "⊴⃒",
		nvrArr: "⤃",
		nvrtrie: "⊵⃒",
		nvsim: "∼⃒",
		nwarhk: "⤣",
		nwArr: "⇖",
		nwarr: "↖",
		nwarrow: "↖",
		nwnear: "⤧",
		Oacute: "Ó",
		oacute: "ó",
		oast: "⊛",
		ocir: "⊚",
		Ocirc: "Ô",
		ocirc: "ô",
		Ocy: "О",
		ocy: "о",
		odash: "⊝",
		Odblac: "Ő",
		odblac: "ő",
		odiv: "⨸",
		odot: "⊙",
		odsold: "⦼",
		OElig: "Œ",
		oelig: "œ",
		ofcir: "⦿",
		Ofr: "𝔒",
		ofr: "𝔬",
		ogon: "˛",
		Ograve: "Ò",
		ograve: "ò",
		ogt: "⧁",
		ohbar: "⦵",
		ohm: "Ω",
		oint: "∮",
		olarr: "↺",
		olcir: "⦾",
		olcross: "⦻",
		oline: "‾",
		olt: "⧀",
		Omacr: "Ō",
		omacr: "ō",
		Omega: "Ω",
		omega: "ω",
		Omicron: "Ο",
		omicron: "ο",
		omid: "⦶",
		ominus: "⊖",
		Oopf: "𝕆",
		oopf: "𝕠",
		opar: "⦷",
		OpenCurlyDoubleQuote: "“",
		OpenCurlyQuote: "‘",
		operp: "⦹",
		oplus: "⊕",
		Or: "⩔",
		or: "∨",
		orarr: "↻",
		ord: "⩝",
		order: "ℴ",
		orderof: "ℴ",
		ordf: "ª",
		ordm: "º",
		origof: "⊶",
		oror: "⩖",
		orslope: "⩗",
		orv: "⩛",
		oS: "Ⓢ",
		Oscr: "𝒪",
		oscr: "ℴ",
		Oslash: "Ø",
		oslash: "ø",
		osol: "⊘",
		Otilde: "Õ",
		otilde: "õ",
		Otimes: "⨷",
		otimes: "⊗",
		otimesas: "⨶",
		Ouml: "Ö",
		ouml: "ö",
		ovbar: "⌽",
		OverBar: "‾",
		OverBrace: "⏞",
		OverBracket: "⎴",
		OverParenthesis: "⏜",
		par: "∥",
		para: "¶",
		parallel: "∥",
		parsim: "⫳",
		parsl: "⫽",
		part: "∂",
		PartialD: "∂",
		Pcy: "П",
		pcy: "п",
		percnt: "%",
		period: ".",
		permil: "‰",
		perp: "⊥",
		pertenk: "‱",
		Pfr: "𝔓",
		pfr: "𝔭",
		Phi: "Φ",
		phi: "φ",
		phiv: "ϕ",
		phmmat: "ℳ",
		phone: "☎",
		Pi: "Π",
		pi: "π",
		pitchfork: "⋔",
		piv: "ϖ",
		planck: "ℏ",
		planckh: "ℎ",
		plankv: "ℏ",
		plus: "+",
		plusacir: "⨣",
		plusb: "⊞",
		pluscir: "⨢",
		plusdo: "∔",
		plusdu: "⨥",
		pluse: "⩲",
		PlusMinus: "±",
		plusmn: "±",
		plussim: "⨦",
		plustwo: "⨧",
		pm: "±",
		Poincareplane: "ℌ",
		pointint: "⨕",
		Popf: "ℙ",
		popf: "𝕡",
		pound: "£",
		Pr: "⪻",
		pr: "≺",
		prap: "⪷",
		prcue: "≼",
		prE: "⪳",
		pre: "⪯",
		prec: "≺",
		precapprox: "⪷",
		preccurlyeq: "≼",
		Precedes: "≺",
		PrecedesEqual: "⪯",
		PrecedesSlantEqual: "≼",
		PrecedesTilde: "≾",
		preceq: "⪯",
		precnapprox: "⪹",
		precneqq: "⪵",
		precnsim: "⋨",
		precsim: "≾",
		Prime: "″",
		prime: "′",
		primes: "ℙ",
		prnap: "⪹",
		prnE: "⪵",
		prnsim: "⋨",
		prod: "∏",
		Product: "∏",
		profalar: "⌮",
		profline: "⌒",
		profsurf: "⌓",
		prop: "∝",
		Proportion: "∷",
		Proportional: "∝",
		propto: "∝",
		prsim: "≾",
		prurel: "⊰",
		Pscr: "𝒫",
		pscr: "𝓅",
		Psi: "Ψ",
		psi: "ψ",
		puncsp: " ",
		Qfr: "𝔔",
		qfr: "𝔮",
		qint: "⨌",
		Qopf: "ℚ",
		qopf: "𝕢",
		qprime: "⁗",
		Qscr: "𝒬",
		qscr: "𝓆",
		quaternions: "ℍ",
		quatint: "⨖",
		quest: "?",
		questeq: "≟",
		QUOT: "\"",
		quot: "\"",
		rAarr: "⇛",
		race: "∽̱",
		Racute: "Ŕ",
		racute: "ŕ",
		radic: "√",
		raemptyv: "⦳",
		Rang: "⟫",
		rang: "⟩",
		rangd: "⦒",
		range: "⦥",
		rangle: "⟩",
		raquo: "»",
		Rarr: "↠",
		rArr: "⇒",
		rarr: "→",
		rarrap: "⥵",
		rarrb: "⇥",
		rarrbfs: "⤠",
		rarrc: "⤳",
		rarrfs: "⤞",
		rarrhk: "↪",
		rarrlp: "↬",
		rarrpl: "⥅",
		rarrsim: "⥴",
		Rarrtl: "⤖",
		rarrtl: "↣",
		rarrw: "↝",
		rAtail: "⤜",
		ratail: "⤚",
		ratio: "∶",
		rationals: "ℚ",
		RBarr: "⤐",
		rBarr: "⤏",
		rbarr: "⤍",
		rbbrk: "❳",
		rbrace: "}",
		rbrack: "]",
		rbrke: "⦌",
		rbrksld: "⦎",
		rbrkslu: "⦐",
		Rcaron: "Ř",
		rcaron: "ř",
		Rcedil: "Ŗ",
		rcedil: "ŗ",
		rceil: "⌉",
		rcub: "}",
		Rcy: "Р",
		rcy: "р",
		rdca: "⤷",
		rdldhar: "⥩",
		rdquo: "”",
		rdquor: "”",
		rdsh: "↳",
		Re: "ℜ",
		real: "ℜ",
		realine: "ℛ",
		realpart: "ℜ",
		reals: "ℝ",
		rect: "▭",
		REG: "®",
		reg: "®",
		ReverseElement: "∋",
		ReverseEquilibrium: "⇋",
		ReverseUpEquilibrium: "⥯",
		rfisht: "⥽",
		rfloor: "⌋",
		Rfr: "ℜ",
		rfr: "𝔯",
		rHar: "⥤",
		rhard: "⇁",
		rharu: "⇀",
		rharul: "⥬",
		Rho: "Ρ",
		rho: "ρ",
		rhov: "ϱ",
		RightAngleBracket: "⟩",
		RightArrow: "→",
		Rightarrow: "⇒",
		rightarrow: "→",
		RightArrowBar: "⇥",
		RightArrowLeftArrow: "⇄",
		rightarrowtail: "↣",
		RightCeiling: "⌉",
		RightDoubleBracket: "⟧",
		RightDownTeeVector: "⥝",
		RightDownVector: "⇂",
		RightDownVectorBar: "⥕",
		RightFloor: "⌋",
		rightharpoondown: "⇁",
		rightharpoonup: "⇀",
		rightleftarrows: "⇄",
		rightleftharpoons: "⇌",
		rightrightarrows: "⇉",
		rightsquigarrow: "↝",
		RightTee: "⊢",
		RightTeeArrow: "↦",
		RightTeeVector: "⥛",
		rightthreetimes: "⋌",
		RightTriangle: "⊳",
		RightTriangleBar: "⧐",
		RightTriangleEqual: "⊵",
		RightUpDownVector: "⥏",
		RightUpTeeVector: "⥜",
		RightUpVector: "↾",
		RightUpVectorBar: "⥔",
		RightVector: "⇀",
		RightVectorBar: "⥓",
		ring: "˚",
		risingdotseq: "≓",
		rlarr: "⇄",
		rlhar: "⇌",
		rlm: "‏",
		rmoust: "⎱",
		rmoustache: "⎱",
		rnmid: "⫮",
		roang: "⟭",
		roarr: "⇾",
		robrk: "⟧",
		ropar: "⦆",
		Ropf: "ℝ",
		ropf: "𝕣",
		roplus: "⨮",
		rotimes: "⨵",
		RoundImplies: "⥰",
		rpar: ")",
		rpargt: "⦔",
		rppolint: "⨒",
		rrarr: "⇉",
		Rrightarrow: "⇛",
		rsaquo: "›",
		Rscr: "ℛ",
		rscr: "𝓇",
		Rsh: "↱",
		rsh: "↱",
		rsqb: "]",
		rsquo: "’",
		rsquor: "’",
		rthree: "⋌",
		rtimes: "⋊",
		rtri: "▹",
		rtrie: "⊵",
		rtrif: "▸",
		rtriltri: "⧎",
		RuleDelayed: "⧴",
		ruluhar: "⥨",
		rx: "℞",
		Sacute: "Ś",
		sacute: "ś",
		sbquo: "‚",
		Sc: "⪼",
		sc: "≻",
		scap: "⪸",
		Scaron: "Š",
		scaron: "š",
		sccue: "≽",
		scE: "⪴",
		sce: "⪰",
		Scedil: "Ş",
		scedil: "ş",
		Scirc: "Ŝ",
		scirc: "ŝ",
		scnap: "⪺",
		scnE: "⪶",
		scnsim: "⋩",
		scpolint: "⨓",
		scsim: "≿",
		Scy: "С",
		scy: "с",
		sdot: "⋅",
		sdotb: "⊡",
		sdote: "⩦",
		searhk: "⤥",
		seArr: "⇘",
		searr: "↘",
		searrow: "↘",
		sect: "§",
		semi: ";",
		seswar: "⤩",
		setminus: "∖",
		setmn: "∖",
		sext: "✶",
		Sfr: "𝔖",
		sfr: "𝔰",
		sfrown: "⌢",
		sharp: "♯",
		SHCHcy: "Щ",
		shchcy: "щ",
		SHcy: "Ш",
		shcy: "ш",
		ShortDownArrow: "↓",
		ShortLeftArrow: "←",
		shortmid: "∣",
		shortparallel: "∥",
		ShortRightArrow: "→",
		ShortUpArrow: "↑",
		shy: "­",
		Sigma: "Σ",
		sigma: "σ",
		sigmaf: "ς",
		sigmav: "ς",
		sim: "∼",
		simdot: "⩪",
		sime: "≃",
		simeq: "≃",
		simg: "⪞",
		simgE: "⪠",
		siml: "⪝",
		simlE: "⪟",
		simne: "≆",
		simplus: "⨤",
		simrarr: "⥲",
		slarr: "←",
		SmallCircle: "∘",
		smallsetminus: "∖",
		smashp: "⨳",
		smeparsl: "⧤",
		smid: "∣",
		smile: "⌣",
		smt: "⪪",
		smte: "⪬",
		smtes: "⪬︀",
		SOFTcy: "Ь",
		softcy: "ь",
		sol: "/",
		solb: "⧄",
		solbar: "⌿",
		Sopf: "𝕊",
		sopf: "𝕤",
		spades: "♠",
		spadesuit: "♠",
		spar: "∥",
		sqcap: "⊓",
		sqcaps: "⊓︀",
		sqcup: "⊔",
		sqcups: "⊔︀",
		Sqrt: "√",
		sqsub: "⊏",
		sqsube: "⊑",
		sqsubset: "⊏",
		sqsubseteq: "⊑",
		sqsup: "⊐",
		sqsupe: "⊒",
		sqsupset: "⊐",
		sqsupseteq: "⊒",
		squ: "□",
		Square: "□",
		square: "□",
		SquareIntersection: "⊓",
		SquareSubset: "⊏",
		SquareSubsetEqual: "⊑",
		SquareSuperset: "⊐",
		SquareSupersetEqual: "⊒",
		SquareUnion: "⊔",
		squarf: "▪",
		squf: "▪",
		srarr: "→",
		Sscr: "𝒮",
		sscr: "𝓈",
		ssetmn: "∖",
		ssmile: "⌣",
		sstarf: "⋆",
		Star: "⋆",
		star: "☆",
		starf: "★",
		straightepsilon: "ϵ",
		straightphi: "ϕ",
		strns: "¯",
		Sub: "⋐",
		sub: "⊂",
		subdot: "⪽",
		subE: "⫅",
		sube: "⊆",
		subedot: "⫃",
		submult: "⫁",
		subnE: "⫋",
		subne: "⊊",
		subplus: "⪿",
		subrarr: "⥹",
		Subset: "⋐",
		subset: "⊂",
		subseteq: "⊆",
		subseteqq: "⫅",
		SubsetEqual: "⊆",
		subsetneq: "⊊",
		subsetneqq: "⫋",
		subsim: "⫇",
		subsub: "⫕",
		subsup: "⫓",
		succ: "≻",
		succapprox: "⪸",
		succcurlyeq: "≽",
		Succeeds: "≻",
		SucceedsEqual: "⪰",
		SucceedsSlantEqual: "≽",
		SucceedsTilde: "≿",
		succeq: "⪰",
		succnapprox: "⪺",
		succneqq: "⪶",
		succnsim: "⋩",
		succsim: "≿",
		SuchThat: "∋",
		Sum: "∑",
		sum: "∑",
		sung: "♪",
		Sup: "⋑",
		sup: "⊃",
		sup1: "¹",
		sup2: "²",
		sup3: "³",
		supdot: "⪾",
		supdsub: "⫘",
		supE: "⫆",
		supe: "⊇",
		supedot: "⫄",
		Superset: "⊃",
		SupersetEqual: "⊇",
		suphsol: "⟉",
		suphsub: "⫗",
		suplarr: "⥻",
		supmult: "⫂",
		supnE: "⫌",
		supne: "⊋",
		supplus: "⫀",
		Supset: "⋑",
		supset: "⊃",
		supseteq: "⊇",
		supseteqq: "⫆",
		supsetneq: "⊋",
		supsetneqq: "⫌",
		supsim: "⫈",
		supsub: "⫔",
		supsup: "⫖",
		swarhk: "⤦",
		swArr: "⇙",
		swarr: "↙",
		swarrow: "↙",
		swnwar: "⤪",
		szlig: "ß",
		Tab: "	",
		target: "⌖",
		Tau: "Τ",
		tau: "τ",
		tbrk: "⎴",
		Tcaron: "Ť",
		tcaron: "ť",
		Tcedil: "Ţ",
		tcedil: "ţ",
		Tcy: "Т",
		tcy: "т",
		tdot: "⃛",
		telrec: "⌕",
		Tfr: "𝔗",
		tfr: "𝔱",
		there4: "∴",
		Therefore: "∴",
		therefore: "∴",
		Theta: "Θ",
		theta: "θ",
		thetasym: "ϑ",
		thetav: "ϑ",
		thickapprox: "≈",
		thicksim: "∼",
		ThickSpace: "  ",
		thinsp: " ",
		ThinSpace: " ",
		thkap: "≈",
		thksim: "∼",
		THORN: "Þ",
		thorn: "þ",
		Tilde: "∼",
		tilde: "˜",
		TildeEqual: "≃",
		TildeFullEqual: "≅",
		TildeTilde: "≈",
		times: "×",
		timesb: "⊠",
		timesbar: "⨱",
		timesd: "⨰",
		tint: "∭",
		toea: "⤨",
		top: "⊤",
		topbot: "⌶",
		topcir: "⫱",
		Topf: "𝕋",
		topf: "𝕥",
		topfork: "⫚",
		tosa: "⤩",
		tprime: "‴",
		TRADE: "™",
		trade: "™",
		triangle: "▵",
		triangledown: "▿",
		triangleleft: "◃",
		trianglelefteq: "⊴",
		triangleq: "≜",
		triangleright: "▹",
		trianglerighteq: "⊵",
		tridot: "◬",
		trie: "≜",
		triminus: "⨺",
		TripleDot: "⃛",
		triplus: "⨹",
		trisb: "⧍",
		tritime: "⨻",
		trpezium: "⏢",
		Tscr: "𝒯",
		tscr: "𝓉",
		TScy: "Ц",
		tscy: "ц",
		TSHcy: "Ћ",
		tshcy: "ћ",
		Tstrok: "Ŧ",
		tstrok: "ŧ",
		twixt: "≬",
		twoheadleftarrow: "↞",
		twoheadrightarrow: "↠",
		Uacute: "Ú",
		uacute: "ú",
		Uarr: "↟",
		uArr: "⇑",
		uarr: "↑",
		Uarrocir: "⥉",
		Ubrcy: "Ў",
		ubrcy: "ў",
		Ubreve: "Ŭ",
		ubreve: "ŭ",
		Ucirc: "Û",
		ucirc: "û",
		Ucy: "У",
		ucy: "у",
		udarr: "⇅",
		Udblac: "Ű",
		udblac: "ű",
		udhar: "⥮",
		ufisht: "⥾",
		Ufr: "𝔘",
		ufr: "𝔲",
		Ugrave: "Ù",
		ugrave: "ù",
		uHar: "⥣",
		uharl: "↿",
		uharr: "↾",
		uhblk: "▀",
		ulcorn: "⌜",
		ulcorner: "⌜",
		ulcrop: "⌏",
		ultri: "◸",
		Umacr: "Ū",
		umacr: "ū",
		uml: "¨",
		UnderBar: "_",
		UnderBrace: "⏟",
		UnderBracket: "⎵",
		UnderParenthesis: "⏝",
		Union: "⋃",
		UnionPlus: "⊎",
		Uogon: "Ų",
		uogon: "ų",
		Uopf: "𝕌",
		uopf: "𝕦",
		UpArrow: "↑",
		Uparrow: "⇑",
		uparrow: "↑",
		UpArrowBar: "⤒",
		UpArrowDownArrow: "⇅",
		UpDownArrow: "↕",
		Updownarrow: "⇕",
		updownarrow: "↕",
		UpEquilibrium: "⥮",
		upharpoonleft: "↿",
		upharpoonright: "↾",
		uplus: "⊎",
		UpperLeftArrow: "↖",
		UpperRightArrow: "↗",
		Upsi: "ϒ",
		upsi: "υ",
		upsih: "ϒ",
		Upsilon: "Υ",
		upsilon: "υ",
		UpTee: "⊥",
		UpTeeArrow: "↥",
		upuparrows: "⇈",
		urcorn: "⌝",
		urcorner: "⌝",
		urcrop: "⌎",
		Uring: "Ů",
		uring: "ů",
		urtri: "◹",
		Uscr: "𝒰",
		uscr: "𝓊",
		utdot: "⋰",
		Utilde: "Ũ",
		utilde: "ũ",
		utri: "▵",
		utrif: "▴",
		uuarr: "⇈",
		Uuml: "Ü",
		uuml: "ü",
		uwangle: "⦧",
		vangrt: "⦜",
		varepsilon: "ϵ",
		varkappa: "ϰ",
		varnothing: "∅",
		varphi: "ϕ",
		varpi: "ϖ",
		varpropto: "∝",
		vArr: "⇕",
		varr: "↕",
		varrho: "ϱ",
		varsigma: "ς",
		varsubsetneq: "⊊︀",
		varsubsetneqq: "⫋︀",
		varsupsetneq: "⊋︀",
		varsupsetneqq: "⫌︀",
		vartheta: "ϑ",
		vartriangleleft: "⊲",
		vartriangleright: "⊳",
		Vbar: "⫫",
		vBar: "⫨",
		vBarv: "⫩",
		Vcy: "В",
		vcy: "в",
		VDash: "⊫",
		Vdash: "⊩",
		vDash: "⊨",
		vdash: "⊢",
		Vdashl: "⫦",
		Vee: "⋁",
		vee: "∨",
		veebar: "⊻",
		veeeq: "≚",
		vellip: "⋮",
		Verbar: "‖",
		verbar: "|",
		Vert: "‖",
		vert: "|",
		VerticalBar: "∣",
		VerticalLine: "|",
		VerticalSeparator: "❘",
		VerticalTilde: "≀",
		VeryThinSpace: " ",
		Vfr: "𝔙",
		vfr: "𝔳",
		vltri: "⊲",
		vnsub: "⊂⃒",
		vnsup: "⊃⃒",
		Vopf: "𝕍",
		vopf: "𝕧",
		vprop: "∝",
		vrtri: "⊳",
		Vscr: "𝒱",
		vscr: "𝓋",
		vsubnE: "⫋︀",
		vsubne: "⊊︀",
		vsupnE: "⫌︀",
		vsupne: "⊋︀",
		Vvdash: "⊪",
		vzigzag: "⦚",
		Wcirc: "Ŵ",
		wcirc: "ŵ",
		wedbar: "⩟",
		Wedge: "⋀",
		wedge: "∧",
		wedgeq: "≙",
		weierp: "℘",
		Wfr: "𝔚",
		wfr: "𝔴",
		Wopf: "𝕎",
		wopf: "𝕨",
		wp: "℘",
		wr: "≀",
		wreath: "≀",
		Wscr: "𝒲",
		wscr: "𝓌",
		xcap: "⋂",
		xcirc: "◯",
		xcup: "⋃",
		xdtri: "▽",
		Xfr: "𝔛",
		xfr: "𝔵",
		xhArr: "⟺",
		xharr: "⟷",
		Xi: "Ξ",
		xi: "ξ",
		xlArr: "⟸",
		xlarr: "⟵",
		xmap: "⟼",
		xnis: "⋻",
		xodot: "⨀",
		Xopf: "𝕏",
		xopf: "𝕩",
		xoplus: "⨁",
		xotime: "⨂",
		xrArr: "⟹",
		xrarr: "⟶",
		Xscr: "𝒳",
		xscr: "𝓍",
		xsqcup: "⨆",
		xuplus: "⨄",
		xutri: "△",
		xvee: "⋁",
		xwedge: "⋀",
		Yacute: "Ý",
		yacute: "ý",
		YAcy: "Я",
		yacy: "я",
		Ycirc: "Ŷ",
		ycirc: "ŷ",
		Ycy: "Ы",
		ycy: "ы",
		yen: "¥",
		Yfr: "𝔜",
		yfr: "𝔶",
		YIcy: "Ї",
		yicy: "ї",
		Yopf: "𝕐",
		yopf: "𝕪",
		Yscr: "𝒴",
		yscr: "𝓎",
		YUcy: "Ю",
		yucy: "ю",
		Yuml: "Ÿ",
		yuml: "ÿ",
		Zacute: "Ź",
		zacute: "ź",
		Zcaron: "Ž",
		zcaron: "ž",
		Zcy: "З",
		zcy: "з",
		Zdot: "Ż",
		zdot: "ż",
		zeetrf: "ℨ",
		ZeroWidthSpace: "​",
		Zeta: "Ζ",
		zeta: "ζ",
		Zfr: "ℨ",
		zfr: "𝔷",
		ZHcy: "Ж",
		zhcy: "ж",
		zigrarr: "⇝",
		Zopf: "ℤ",
		zopf: "𝕫",
		Zscr: "𝒵",
		zscr: "𝓏",
		zwj: "‍",
		zwnj: "‌"
	});
	/**
	* @deprecated use `HTML_ENTITIES` instead
	* @see HTML_ENTITIES
	*/
	exports.entityMap = exports.HTML_ENTITIES;
}) });

//#endregion
//#region node_modules/@xmldom/xmldom/lib/sax.js
var require_sax = /* @__PURE__ */ __commonJS({ "node_modules/@xmldom/xmldom/lib/sax.js": ((exports) => {
	var NAMESPACE$1 = require_conventions().NAMESPACE;
	var nameStartChar = /[A-Z_a-z\xC0-\xD6\xD8-\xF6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/;
	var nameChar = /* @__PURE__ */ new RegExp("[\\-\\.0-9" + nameStartChar.source.slice(1, -1) + "\\u00B7\\u0300-\\u036F\\u203F-\\u2040]");
	var tagNamePattern = /* @__PURE__ */ new RegExp("^" + nameStartChar.source + nameChar.source + "*(?::" + nameStartChar.source + nameChar.source + "*)?$");
	var S_TAG = 0;
	var S_ATTR = 1;
	var S_ATTR_SPACE = 2;
	var S_EQ = 3;
	var S_ATTR_NOQUOT_VALUE = 4;
	var S_ATTR_END = 5;
	var S_TAG_SPACE = 6;
	var S_TAG_CLOSE = 7;
	/**
	* Creates an error that will not be caught by XMLReader aka the SAX parser.
	*
	* @param {string} message
	* @param {any?} locator Optional, can provide details about the location in the source
	* @constructor
	*/
	function ParseError$1(message, locator) {
		this.message = message;
		this.locator = locator;
		if (Error.captureStackTrace) Error.captureStackTrace(this, ParseError$1);
	}
	ParseError$1.prototype = /* @__PURE__ */ new Error();
	ParseError$1.prototype.name = ParseError$1.name;
	function XMLReader$1() {}
	XMLReader$1.prototype = { parse: function(source, defaultNSMap, entityMap) {
		var domBuilder = this.domBuilder;
		domBuilder.startDocument();
		_copy(defaultNSMap, defaultNSMap = {});
		parse(source, defaultNSMap, entityMap, domBuilder, this.errorHandler);
		domBuilder.endDocument();
	} };
	function parse(source, defaultNSMapCopy, entityMap, domBuilder, errorHandler) {
		function fixedFromCharCode(code$1) {
			if (code$1 > 65535) {
				code$1 -= 65536;
				var surrogate1 = 55296 + (code$1 >> 10), surrogate2 = 56320 + (code$1 & 1023);
				return String.fromCharCode(surrogate1, surrogate2);
			} else return String.fromCharCode(code$1);
		}
		function entityReplacer(a$1) {
			var k = a$1.slice(1, -1);
			if (Object.hasOwnProperty.call(entityMap, k)) return entityMap[k];
			else if (k.charAt(0) === "#") return fixedFromCharCode(parseInt(k.substr(1).replace("x", "0x")));
			else {
				errorHandler.error("entity not found:" + a$1);
				return a$1;
			}
		}
		function appendText(end$1) {
			if (end$1 > start) {
				var xt = source.substring(start, end$1).replace(/&#?\w+;/g, entityReplacer);
				locator && position$1(start);
				domBuilder.characters(xt, 0, end$1 - start);
				start = end$1;
			}
		}
		function position$1(p, m) {
			while (p >= lineEnd && (m = linePattern.exec(source))) {
				lineStart = m.index;
				lineEnd = lineStart + m[0].length;
				locator.lineNumber++;
			}
			locator.columnNumber = p - lineStart + 1;
		}
		var lineStart = 0;
		var lineEnd = 0;
		var linePattern = /.*(?:\r\n?|\n)|.*$/g;
		var locator = domBuilder.locator;
		var parseStack = [{ currentNSMap: defaultNSMapCopy }];
		var closeMap = {};
		var start = 0;
		while (true) {
			try {
				var tagStart = source.indexOf("<", start);
				if (tagStart < 0) {
					if (!source.substr(start).match(/^\s*$/)) {
						var doc = domBuilder.doc;
						var text$1 = doc.createTextNode(source.substr(start));
						doc.appendChild(text$1);
						domBuilder.currentElement = text$1;
					}
					return;
				}
				if (tagStart > start) appendText(tagStart);
				switch (source.charAt(tagStart + 1)) {
					case "/":
						var end = source.indexOf(">", tagStart + 3);
						var tagName = source.substring(tagStart + 2, end).replace(/[ \t\n\r]+$/g, "");
						var config = parseStack.pop();
						if (end < 0) {
							tagName = source.substring(tagStart + 2).replace(/[\s<].*/, "");
							errorHandler.error("end tag name: " + tagName + " is not complete:" + config.tagName);
							end = tagStart + 1 + tagName.length;
						} else if (tagName.match(/\s</)) {
							tagName = tagName.replace(/[\s<].*/, "");
							errorHandler.error("end tag name: " + tagName + " maybe not complete");
							end = tagStart + 1 + tagName.length;
						}
						var localNSMap = config.localNSMap;
						var endMatch = config.tagName == tagName;
						if (endMatch || config.tagName && config.tagName.toLowerCase() == tagName.toLowerCase()) {
							domBuilder.endElement(config.uri, config.localName, tagName);
							if (localNSMap) {
								for (var prefix in localNSMap) if (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) domBuilder.endPrefixMapping(prefix);
							}
							if (!endMatch) errorHandler.fatalError("end tag name: " + tagName + " is not match the current start tagName:" + config.tagName);
						} else parseStack.push(config);
						end++;
						break;
					case "?":
						locator && position$1(tagStart);
						end = parseInstruction(source, tagStart, domBuilder);
						break;
					case "!":
						locator && position$1(tagStart);
						end = parseDCC(source, tagStart, domBuilder, errorHandler);
						break;
					default:
						locator && position$1(tagStart);
						var el = new ElementAttributes();
						var currentNSMap = parseStack[parseStack.length - 1].currentNSMap;
						var end = parseElementStartPart(source, tagStart, el, currentNSMap, entityReplacer, errorHandler);
						var len$1 = el.length;
						if (!el.closed && fixSelfClosed(source, end, el.tagName, closeMap)) {
							el.closed = true;
							if (!entityMap.nbsp) errorHandler.warning("unclosed xml attribute");
						}
						if (locator && len$1) {
							var locator2 = copyLocator(locator, {});
							for (var i$2 = 0; i$2 < len$1; i$2++) {
								var a = el[i$2];
								position$1(a.offset);
								a.locator = copyLocator(locator, {});
							}
							domBuilder.locator = locator2;
							if (appendElement$1(el, domBuilder, currentNSMap)) parseStack.push(el);
							domBuilder.locator = locator;
						} else if (appendElement$1(el, domBuilder, currentNSMap)) parseStack.push(el);
						if (NAMESPACE$1.isHTML(el.uri) && !el.closed) end = parseHtmlSpecialContent(source, end, el.tagName, entityReplacer, domBuilder);
						else end++;
				}
			} catch (e) {
				if (e instanceof ParseError$1) throw e;
				errorHandler.error("element parse error: " + e);
				end = -1;
			}
			if (end > start) start = end;
			else appendText(Math.max(tagStart, start) + 1);
		}
	}
	function copyLocator(f, t) {
		t.lineNumber = f.lineNumber;
		t.columnNumber = f.columnNumber;
		return t;
	}
	/**
	* @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);
	* @return end of the elementStartPart(end of elementEndPart for selfClosed el)
	*/
	function parseElementStartPart(source, start, el, currentNSMap, entityReplacer, errorHandler) {
		/**
		* @param {string} qname
		* @param {string} value
		* @param {number} startIndex
		*/
		function addAttribute(qname, value$1, startIndex) {
			if (el.attributeNames.hasOwnProperty(qname)) errorHandler.fatalError("Attribute " + qname + " redefined");
			el.addValue(qname, value$1.replace(/[\t\n\r]/g, " ").replace(/&#?\w+;/g, entityReplacer), startIndex);
		}
		var attrName;
		var value;
		var p = ++start;
		var s = S_TAG;
		while (true) {
			var c = source.charAt(p);
			switch (c) {
				case "=":
					if (s === S_ATTR) {
						attrName = source.slice(start, p);
						s = S_EQ;
					} else if (s === S_ATTR_SPACE) s = S_EQ;
					else throw new Error("attribute equal must after attrName");
					break;
				case "'":
				case "\"":
					if (s === S_EQ || s === S_ATTR) {
						if (s === S_ATTR) {
							errorHandler.warning("attribute value must after \"=\"");
							attrName = source.slice(start, p);
						}
						start = p + 1;
						p = source.indexOf(c, start);
						if (p > 0) {
							value = source.slice(start, p);
							addAttribute(attrName, value, start - 1);
							s = S_ATTR_END;
						} else throw new Error("attribute value no end '" + c + "' match");
					} else if (s == S_ATTR_NOQUOT_VALUE) {
						value = source.slice(start, p);
						addAttribute(attrName, value, start);
						errorHandler.warning("attribute \"" + attrName + "\" missed start quot(" + c + ")!!");
						start = p + 1;
						s = S_ATTR_END;
					} else throw new Error("attribute value must after \"=\"");
					break;
				case "/":
					switch (s) {
						case S_TAG: el.setTagName(source.slice(start, p));
						case S_ATTR_END:
						case S_TAG_SPACE:
						case S_TAG_CLOSE:
							s = S_TAG_CLOSE;
							el.closed = true;
						case S_ATTR_NOQUOT_VALUE:
						case S_ATTR: break;
						case S_ATTR_SPACE:
							el.closed = true;
							break;
						default: throw new Error("attribute invalid close char('/')");
					}
					break;
				case "":
					errorHandler.error("unexpected end of input");
					if (s == S_TAG) el.setTagName(source.slice(start, p));
					return p;
				case ">":
					switch (s) {
						case S_TAG: el.setTagName(source.slice(start, p));
						case S_ATTR_END:
						case S_TAG_SPACE:
						case S_TAG_CLOSE: break;
						case S_ATTR_NOQUOT_VALUE:
						case S_ATTR:
							value = source.slice(start, p);
							if (value.slice(-1) === "/") {
								el.closed = true;
								value = value.slice(0, -1);
							}
						case S_ATTR_SPACE:
							if (s === S_ATTR_SPACE) value = attrName;
							if (s == S_ATTR_NOQUOT_VALUE) {
								errorHandler.warning("attribute \"" + value + "\" missed quot(\")!");
								addAttribute(attrName, value, start);
							} else {
								if (!NAMESPACE$1.isHTML(currentNSMap[""]) || !value.match(/^(?:disabled|checked|selected)$/i)) errorHandler.warning("attribute \"" + value + "\" missed value!! \"" + value + "\" instead!!");
								addAttribute(value, value, start);
							}
							break;
						case S_EQ: throw new Error("attribute value missed!!");
					}
					return p;
				case "": c = " ";
				default: if (c <= " ") switch (s) {
					case S_TAG:
						el.setTagName(source.slice(start, p));
						s = S_TAG_SPACE;
						break;
					case S_ATTR:
						attrName = source.slice(start, p);
						s = S_ATTR_SPACE;
						break;
					case S_ATTR_NOQUOT_VALUE:
						var value = source.slice(start, p);
						errorHandler.warning("attribute \"" + value + "\" missed quot(\")!!");
						addAttribute(attrName, value, start);
					case S_ATTR_END:
						s = S_TAG_SPACE;
						break;
				}
				else switch (s) {
					case S_ATTR_SPACE:
						el.tagName;
						if (!NAMESPACE$1.isHTML(currentNSMap[""]) || !attrName.match(/^(?:disabled|checked|selected)$/i)) errorHandler.warning("attribute \"" + attrName + "\" missed value!! \"" + attrName + "\" instead2!!");
						addAttribute(attrName, attrName, start);
						start = p;
						s = S_ATTR;
						break;
					case S_ATTR_END: errorHandler.warning("attribute space is required\"" + attrName + "\"!!");
					case S_TAG_SPACE:
						s = S_ATTR;
						start = p;
						break;
					case S_EQ:
						s = S_ATTR_NOQUOT_VALUE;
						start = p;
						break;
					case S_TAG_CLOSE: throw new Error("elements closed character '/' and '>' must be connected to");
				}
			}
			p++;
		}
	}
	/**
	* @return true if has new namespace define
	*/
	function appendElement$1(el, domBuilder, currentNSMap) {
		var tagName = el.tagName;
		var localNSMap = null;
		var i$2 = el.length;
		while (i$2--) {
			var a = el[i$2];
			var qName = a.qName;
			var value = a.value;
			var nsp = qName.indexOf(":");
			if (nsp > 0) {
				var prefix = a.prefix = qName.slice(0, nsp);
				var localName = qName.slice(nsp + 1);
				var nsPrefix = prefix === "xmlns" && localName;
			} else {
				localName = qName;
				prefix = null;
				nsPrefix = qName === "xmlns" && "";
			}
			a.localName = localName;
			if (nsPrefix !== false) {
				if (localNSMap == null) {
					localNSMap = {};
					_copy(currentNSMap, currentNSMap = {});
				}
				currentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;
				a.uri = NAMESPACE$1.XMLNS;
				domBuilder.startPrefixMapping(nsPrefix, value);
			}
		}
		var i$2 = el.length;
		while (i$2--) {
			a = el[i$2];
			var prefix = a.prefix;
			if (prefix) {
				if (prefix === "xml") a.uri = NAMESPACE$1.XML;
				if (prefix !== "xmlns") a.uri = currentNSMap[prefix || ""];
			}
		}
		var nsp = tagName.indexOf(":");
		if (nsp > 0) {
			prefix = el.prefix = tagName.slice(0, nsp);
			localName = el.localName = tagName.slice(nsp + 1);
		} else {
			prefix = null;
			localName = el.localName = tagName;
		}
		var ns = el.uri = currentNSMap[prefix || ""];
		domBuilder.startElement(ns, localName, tagName, el);
		if (el.closed) {
			domBuilder.endElement(ns, localName, tagName);
			if (localNSMap) {
				for (prefix in localNSMap) if (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) domBuilder.endPrefixMapping(prefix);
			}
		} else {
			el.currentNSMap = currentNSMap;
			el.localNSMap = localNSMap;
			return true;
		}
	}
	function parseHtmlSpecialContent(source, elStartEnd, tagName, entityReplacer, domBuilder) {
		if (/^(?:script|textarea)$/i.test(tagName)) {
			var elEndStart = source.indexOf("</" + tagName + ">", elStartEnd);
			var text$1 = source.substring(elStartEnd + 1, elEndStart);
			if (/[&<]/.test(text$1)) {
				if (/^script$/i.test(tagName)) {
					domBuilder.characters(text$1, 0, text$1.length);
					return elEndStart;
				}
				text$1 = text$1.replace(/&#?\w+;/g, entityReplacer);
				domBuilder.characters(text$1, 0, text$1.length);
				return elEndStart;
			}
		}
		return elStartEnd + 1;
	}
	function fixSelfClosed(source, elStartEnd, tagName, closeMap) {
		var pos = closeMap[tagName];
		if (pos == null) {
			pos = source.lastIndexOf("</" + tagName + ">");
			if (pos < elStartEnd) pos = source.lastIndexOf("</" + tagName);
			closeMap[tagName] = pos;
		}
		return pos < elStartEnd;
	}
	function _copy(source, target) {
		for (var n in source) if (Object.prototype.hasOwnProperty.call(source, n)) target[n] = source[n];
	}
	function parseDCC(source, start, domBuilder, errorHandler) {
		switch (source.charAt(start + 2)) {
			case "-": if (source.charAt(start + 3) === "-") {
				var end = source.indexOf("-->", start + 4);
				if (end > start) {
					domBuilder.comment(source, start + 4, end - start - 4);
					return end + 3;
				} else {
					errorHandler.error("Unclosed comment");
					return -1;
				}
			} else return -1;
			default:
				if (source.substr(start + 3, 6) == "CDATA[") {
					var end = source.indexOf("]]>", start + 9);
					domBuilder.startCDATA();
					domBuilder.characters(source, start + 9, end - start - 9);
					domBuilder.endCDATA();
					return end + 3;
				}
				var matchs = split(source, start);
				var len$1 = matchs.length;
				if (len$1 > 1 && /!doctype/i.test(matchs[0][0])) {
					var name = matchs[1][0];
					var pubid = false;
					var sysid = false;
					if (len$1 > 3) {
						if (/^public$/i.test(matchs[2][0])) {
							pubid = matchs[3][0];
							sysid = len$1 > 4 && matchs[4][0];
						} else if (/^system$/i.test(matchs[2][0])) sysid = matchs[3][0];
					}
					var lastMatch = matchs[len$1 - 1];
					domBuilder.startDTD(name, pubid, sysid);
					domBuilder.endDTD();
					return lastMatch.index + lastMatch[0].length;
				}
		}
		return -1;
	}
	function parseInstruction(source, start, domBuilder) {
		var end = source.indexOf("?>", start);
		if (end) {
			var match = source.substring(start, end).match(/^<\?(\S*)\s*([\s\S]*?)\s*$/);
			if (match) {
				match[0].length;
				domBuilder.processingInstruction(match[1], match[2]);
				return end + 2;
			} else return -1;
		}
		return -1;
	}
	function ElementAttributes() {
		this.attributeNames = {};
	}
	ElementAttributes.prototype = {
		setTagName: function(tagName) {
			if (!tagNamePattern.test(tagName)) throw new Error("invalid tagName:" + tagName);
			this.tagName = tagName;
		},
		addValue: function(qName, value, offset) {
			if (!tagNamePattern.test(qName)) throw new Error("invalid attribute:" + qName);
			this.attributeNames[qName] = this.length;
			this[this.length++] = {
				qName,
				value,
				offset
			};
		},
		length: 0,
		getLocalName: function(i$2) {
			return this[i$2].localName;
		},
		getLocator: function(i$2) {
			return this[i$2].locator;
		},
		getQName: function(i$2) {
			return this[i$2].qName;
		},
		getURI: function(i$2) {
			return this[i$2].uri;
		},
		getValue: function(i$2) {
			return this[i$2].value;
		}
	};
	function split(source, start) {
		var match;
		var buf = [];
		var reg = /'[^']+'|"[^"]+"|[^\s<>\/=]+=?|(\/?\s*>|<)/g;
		reg.lastIndex = start;
		reg.exec(source);
		while (match = reg.exec(source)) {
			buf.push(match);
			if (match[1]) return buf;
		}
	}
	exports.XMLReader = XMLReader$1;
	exports.ParseError = ParseError$1;
}) });

//#endregion
//#region node_modules/@xmldom/xmldom/lib/dom-parser.js
var require_dom_parser = /* @__PURE__ */ __commonJS({ "node_modules/@xmldom/xmldom/lib/dom-parser.js": ((exports) => {
	var conventions = require_conventions();
	var dom$2 = require_dom();
	var entities = require_entities();
	var sax = require_sax();
	var DOMImplementation = dom$2.DOMImplementation;
	var NAMESPACE = conventions.NAMESPACE;
	var ParseError = sax.ParseError;
	var XMLReader = sax.XMLReader;
	/**
	* Normalizes line ending according to https://www.w3.org/TR/xml11/#sec-line-ends:
	*
	* > XML parsed entities are often stored in computer files which,
	* > for editing convenience, are organized into lines.
	* > These lines are typically separated by some combination
	* > of the characters CARRIAGE RETURN (#xD) and LINE FEED (#xA).
	* >
	* > To simplify the tasks of applications, the XML processor must behave
	* > as if it normalized all line breaks in external parsed entities (including the document entity)
	* > on input, before parsing, by translating all of the following to a single #xA character:
	* >
	* > 1. the two-character sequence #xD #xA
	* > 2. the two-character sequence #xD #x85
	* > 3. the single character #x85
	* > 4. the single character #x2028
	* > 5. any #xD character that is not immediately followed by #xA or #x85.
	*
	* @param {string} input
	* @returns {string}
	*/
	function normalizeLineEndings(input) {
		return input.replace(/\r[\n\u0085]/g, "\n").replace(/[\r\u0085\u2028]/g, "\n");
	}
	/**
	* @typedef Locator
	* @property {number} [columnNumber]
	* @property {number} [lineNumber]
	*/
	/**
	* @typedef DOMParserOptions
	* @property {DOMHandler} [domBuilder]
	* @property {Function} [errorHandler]
	* @property {(string) => string} [normalizeLineEndings] used to replace line endings before parsing
	* 						defaults to `normalizeLineEndings`
	* @property {Locator} [locator]
	* @property {Record<string, string>} [xmlns]
	*
	* @see normalizeLineEndings
	*/
	/**
	* The DOMParser interface provides the ability to parse XML or HTML source code
	* from a string into a DOM `Document`.
	*
	* _xmldom is different from the spec in that it allows an `options` parameter,
	* to override the default behavior._
	*
	* @param {DOMParserOptions} [options]
	* @constructor
	*
	* @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser
	* @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-parsing-and-serialization
	*/
	function DOMParser(options$1) {
		this.options = options$1 || { locator: {} };
	}
	DOMParser.prototype.parseFromString = function(source, mimeType) {
		var options$1 = this.options;
		var sax$1 = new XMLReader();
		var domBuilder = options$1.domBuilder || new DOMHandler();
		var errorHandler = options$1.errorHandler;
		var locator = options$1.locator;
		var defaultNSMap = options$1.xmlns || {};
		var isHTML = /\/x?html?$/.test(mimeType);
		var entityMap = isHTML ? entities.HTML_ENTITIES : entities.XML_ENTITIES;
		if (locator) domBuilder.setDocumentLocator(locator);
		sax$1.errorHandler = buildErrorHandler(errorHandler, domBuilder, locator);
		sax$1.domBuilder = options$1.domBuilder || domBuilder;
		if (isHTML) defaultNSMap[""] = NAMESPACE.HTML;
		defaultNSMap.xml = defaultNSMap.xml || NAMESPACE.XML;
		var normalize = options$1.normalizeLineEndings || normalizeLineEndings;
		if (source && typeof source === "string") sax$1.parse(normalize(source), defaultNSMap, entityMap);
		else sax$1.errorHandler.error("invalid doc source");
		return domBuilder.doc;
	};
	function buildErrorHandler(errorImpl, domBuilder, locator) {
		if (!errorImpl) {
			if (domBuilder instanceof DOMHandler) return domBuilder;
			errorImpl = domBuilder;
		}
		var errorHandler = {};
		var isCallback = errorImpl instanceof Function;
		locator = locator || {};
		function build(key) {
			var fn = errorImpl[key];
			if (!fn && isCallback) fn = errorImpl.length == 2 ? function(msg) {
				errorImpl(key, msg);
			} : errorImpl;
			errorHandler[key] = fn && function(msg) {
				fn("[xmldom " + key + "]	" + msg + _locator(locator));
			} || function() {};
		}
		build("warning");
		build("error");
		build("fatalError");
		return errorHandler;
	}
	/**
	* +ContentHandler+ErrorHandler
	* +LexicalHandler+EntityResolver2
	* -DeclHandler-DTDHandler
	*
	* DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler
	* DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2
	* @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html
	*/
	function DOMHandler() {
		this.cdata = false;
	}
	function position(locator, node) {
		node.lineNumber = locator.lineNumber;
		node.columnNumber = locator.columnNumber;
	}
	/**
	* @see org.xml.sax.ContentHandler#startDocument
	* @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html
	*/
	DOMHandler.prototype = {
		startDocument: function() {
			this.doc = new DOMImplementation().createDocument(null, null, null);
			if (this.locator) this.doc.documentURI = this.locator.systemId;
		},
		startElement: function(namespaceURI, localName, qName, attrs) {
			var doc = this.doc;
			var el = doc.createElementNS(namespaceURI, qName || localName);
			var len$1 = attrs.length;
			appendElement(this, el);
			this.currentElement = el;
			this.locator && position(this.locator, el);
			for (var i$2 = 0; i$2 < len$1; i$2++) {
				var namespaceURI = attrs.getURI(i$2);
				var value = attrs.getValue(i$2);
				var qName = attrs.getQName(i$2);
				var attr = doc.createAttributeNS(namespaceURI, qName);
				this.locator && position(attrs.getLocator(i$2), attr);
				attr.value = attr.nodeValue = value;
				el.setAttributeNode(attr);
			}
		},
		endElement: function(namespaceURI, localName, qName) {
			var current = this.currentElement;
			current.tagName;
			this.currentElement = current.parentNode;
		},
		startPrefixMapping: function(prefix, uri) {},
		endPrefixMapping: function(prefix) {},
		processingInstruction: function(target, data) {
			var ins = this.doc.createProcessingInstruction(target, data);
			this.locator && position(this.locator, ins);
			appendElement(this, ins);
		},
		ignorableWhitespace: function(ch, start, length) {},
		characters: function(chars, start, length) {
			chars = _toString.apply(this, arguments);
			if (chars) {
				if (this.cdata) var charNode = this.doc.createCDATASection(chars);
				else var charNode = this.doc.createTextNode(chars);
				if (this.currentElement) this.currentElement.appendChild(charNode);
				else if (/^\s*$/.test(chars)) this.doc.appendChild(charNode);
				this.locator && position(this.locator, charNode);
			}
		},
		skippedEntity: function(name) {},
		endDocument: function() {
			this.doc.normalize();
		},
		setDocumentLocator: function(locator) {
			if (this.locator = locator) locator.lineNumber = 0;
		},
		comment: function(chars, start, length) {
			chars = _toString.apply(this, arguments);
			var comm = this.doc.createComment(chars);
			this.locator && position(this.locator, comm);
			appendElement(this, comm);
		},
		startCDATA: function() {
			this.cdata = true;
		},
		endCDATA: function() {
			this.cdata = false;
		},
		startDTD: function(name, publicId, systemId) {
			var impl = this.doc.implementation;
			if (impl && impl.createDocumentType) {
				var dt = impl.createDocumentType(name, publicId, systemId);
				this.locator && position(this.locator, dt);
				appendElement(this, dt);
				this.doc.doctype = dt;
			}
		},
		warning: function(error$1) {
			console.warn("[xmldom warning]	" + error$1, _locator(this.locator));
		},
		error: function(error$1) {
			console.error("[xmldom error]	" + error$1, _locator(this.locator));
		},
		fatalError: function(error$1) {
			throw new ParseError(error$1, this.locator);
		}
	};
	function _locator(l) {
		if (l) return "\n@" + (l.systemId || "") + "#[line:" + l.lineNumber + ",col:" + l.columnNumber + "]";
	}
	function _toString(chars, start, length) {
		if (typeof chars == "string") return chars.substr(start, length);
		else {
			if (chars.length >= start + length || start) return new java.lang.String(chars, start, length) + "";
			return chars;
		}
	}
	"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl".replace(/\w+/g, function(key) {
		DOMHandler.prototype[key] = function() {
			return null;
		};
	});
	function appendElement(hander, node) {
		if (!hander.currentElement) hander.doc.appendChild(node);
		else hander.currentElement.appendChild(node);
	}
	exports.__DOMHandler = DOMHandler;
	exports.normalizeLineEndings = normalizeLineEndings;
	exports.DOMParser = DOMParser;
}) });

//#endregion
//#region node_modules/@xmldom/xmldom/lib/index.js
var require_lib$2 = /* @__PURE__ */ __commonJS({ "node_modules/@xmldom/xmldom/lib/index.js": ((exports) => {
	var dom$1 = require_dom();
	exports.DOMImplementation = dom$1.DOMImplementation;
	exports.XMLSerializer = dom$1.XMLSerializer;
	exports.DOMParser = require_dom_parser().DOMParser;
}) });

//#endregion
//#region node_modules/mammoth/lib/xml/xmldom.js
var require_xmldom = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/lib/xml/xmldom.js": ((exports) => {
	var xmldom$1 = require_lib$2();
	var dom = require_dom();
	function parseFromString(string) {
		var error$1 = null;
		var document$1 = new xmldom$1.DOMParser({ errorHandler: function(level$1, message) {
			error$1 = {
				level: level$1,
				message
			};
		} }).parseFromString(string);
		if (error$1 === null) return document$1;
		else throw new Error(error$1.level + ": " + error$1.message);
	}
	exports.parseFromString = parseFromString;
	exports.Node = dom.Node;
}) });

//#endregion
//#region node_modules/mammoth/lib/xml/reader.js
var require_reader = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/lib/xml/reader.js": ((exports) => {
	var promises$7 = require_promises();
	var _$16 = (init_index_all(), __toCommonJS(index_all_exports));
	var xmldom = require_xmldom();
	var nodes$1 = require_nodes();
	var Element$1 = nodes$1.Element;
	exports.readString = readString;
	var Node = xmldom.Node;
	function readString(xmlString, namespaceMap) {
		namespaceMap = namespaceMap || {};
		try {
			var document$1 = xmldom.parseFromString(xmlString, "text/xml");
		} catch (error$1) {
			return promises$7.reject(error$1);
		}
		if (document$1.documentElement.tagName === "parsererror") return promises$7.resolve(new Error(document$1.documentElement.textContent));
		function convertNode(node) {
			switch (node.nodeType) {
				case Node.ELEMENT_NODE: return convertElement(node);
				case Node.TEXT_NODE: return nodes$1.text(node.nodeValue);
			}
		}
		function convertElement(element$2) {
			var convertedName = convertName(element$2);
			var convertedChildren = [];
			_$16.forEach(element$2.childNodes, function(childNode) {
				var convertedNode = convertNode(childNode);
				if (convertedNode) convertedChildren.push(convertedNode);
			});
			var convertedAttributes = {};
			_$16.forEach(element$2.attributes, function(attribute) {
				convertedAttributes[convertName(attribute)] = attribute.value;
			});
			return new Element$1(convertedName, convertedAttributes, convertedChildren);
		}
		function convertName(node) {
			if (node.namespaceURI) {
				var mappedPrefix = namespaceMap[node.namespaceURI];
				var prefix;
				if (mappedPrefix) prefix = mappedPrefix + ":";
				else prefix = "{" + node.namespaceURI + "}";
				return prefix + node.localName;
			} else return node.localName;
		}
		return promises$7.resolve(convertNode(document$1.documentElement));
	}
}) });

//#endregion
//#region node_modules/xmlbuilder/lib/Utility.js
var require_Utility = /* @__PURE__ */ __commonJS({ "node_modules/xmlbuilder/lib/Utility.js": ((exports, module) => {
	(function() {
		var assign$1, getValue, isArray, isEmpty$1, isFunction$1, isObject$2, isPlainObject, slice$1 = [].slice, hasProp = {}.hasOwnProperty;
		assign$1 = function() {
			var i$2, key, len$1, source, sources, target = arguments[0];
			sources = 2 <= arguments.length ? slice$1.call(arguments, 1) : [];
			if (isFunction$1(Object.assign)) Object.assign.apply(null, arguments);
			else for (i$2 = 0, len$1 = sources.length; i$2 < len$1; i$2++) {
				source = sources[i$2];
				if (source != null) for (key in source) {
					if (!hasProp.call(source, key)) continue;
					target[key] = source[key];
				}
			}
			return target;
		};
		isFunction$1 = function(val) {
			return !!val && Object.prototype.toString.call(val) === "[object Function]";
		};
		isObject$2 = function(val) {
			var ref;
			return !!val && ((ref = typeof val) === "function" || ref === "object");
		};
		isArray = function(val) {
			if (isFunction$1(Array.isArray)) return Array.isArray(val);
			else return Object.prototype.toString.call(val) === "[object Array]";
		};
		isEmpty$1 = function(val) {
			var key;
			if (isArray(val)) return !val.length;
			else {
				for (key in val) {
					if (!hasProp.call(val, key)) continue;
					return false;
				}
				return true;
			}
		};
		isPlainObject = function(val) {
			var ctor$1, proto$1;
			return isObject$2(val) && (proto$1 = Object.getPrototypeOf(val)) && (ctor$1 = proto$1.constructor) && typeof ctor$1 === "function" && ctor$1 instanceof ctor$1 && Function.prototype.toString.call(ctor$1) === Function.prototype.toString.call(Object);
		};
		getValue = function(obj) {
			if (isFunction$1(obj.valueOf)) return obj.valueOf();
			else return obj;
		};
		module.exports.assign = assign$1;
		module.exports.isFunction = isFunction$1;
		module.exports.isObject = isObject$2;
		module.exports.isArray = isArray;
		module.exports.isEmpty = isEmpty$1;
		module.exports.isPlainObject = isPlainObject;
		module.exports.getValue = getValue;
	}).call(exports);
}) });

//#endregion
//#region node_modules/xmlbuilder/lib/XMLAttribute.js
var require_XMLAttribute = /* @__PURE__ */ __commonJS({ "node_modules/xmlbuilder/lib/XMLAttribute.js": ((exports, module) => {
	(function() {
		module.exports = (function() {
			function XMLAttribute(parent, name, value) {
				this.options = parent.options;
				this.stringify = parent.stringify;
				this.parent = parent;
				if (name == null) throw new Error("Missing attribute name. " + this.debugInfo(name));
				if (value == null) throw new Error("Missing attribute value. " + this.debugInfo(name));
				this.name = this.stringify.attName(name);
				this.value = this.stringify.attValue(value);
			}
			XMLAttribute.prototype.clone = function() {
				return Object.create(this);
			};
			XMLAttribute.prototype.toString = function(options$1) {
				return this.options.writer.set(options$1).attribute(this);
			};
			XMLAttribute.prototype.debugInfo = function(name) {
				name = name || this.name;
				if (name == null) return "parent: <" + this.parent.name + ">";
				else return "attribute: {" + name + "}, parent: <" + this.parent.name + ">";
			};
			return XMLAttribute;
		})();
	}).call(exports);
}) });

//#endregion
//#region node_modules/xmlbuilder/lib/XMLElement.js
var require_XMLElement = /* @__PURE__ */ __commonJS({ "node_modules/xmlbuilder/lib/XMLElement.js": ((exports, module) => {
	(function() {
		var XMLAttribute, XMLNode, getValue, isFunction$1, isObject$2, ref, extend = function(child, parent) {
			for (var key in parent) if (hasProp.call(parent, key)) child[key] = parent[key];
			function ctor$1() {
				this.constructor = child;
			}
			ctor$1.prototype = parent.prototype;
			child.prototype = new ctor$1();
			child.__super__ = parent.prototype;
			return child;
		}, hasProp = {}.hasOwnProperty;
		ref = require_Utility(), isObject$2 = ref.isObject, isFunction$1 = ref.isFunction, getValue = ref.getValue;
		XMLNode = require_XMLNode();
		XMLAttribute = require_XMLAttribute();
		module.exports = (function(superClass) {
			extend(XMLElement, superClass);
			function XMLElement(parent, name, attributes) {
				XMLElement.__super__.constructor.call(this, parent);
				if (name == null) throw new Error("Missing element name. " + this.debugInfo());
				this.name = this.stringify.eleName(name);
				this.attributes = {};
				if (attributes != null) this.attribute(attributes);
				if (parent.isDocument) {
					this.isRoot = true;
					this.documentObject = parent;
					parent.rootObject = this;
				}
			}
			XMLElement.prototype.clone = function() {
				var att, attName, clonedSelf = Object.create(this), ref1;
				if (clonedSelf.isRoot) clonedSelf.documentObject = null;
				clonedSelf.attributes = {};
				ref1 = this.attributes;
				for (attName in ref1) {
					if (!hasProp.call(ref1, attName)) continue;
					att = ref1[attName];
					clonedSelf.attributes[attName] = att.clone();
				}
				clonedSelf.children = [];
				this.children.forEach(function(child) {
					var clonedChild = child.clone();
					clonedChild.parent = clonedSelf;
					return clonedSelf.children.push(clonedChild);
				});
				return clonedSelf;
			};
			XMLElement.prototype.attribute = function(name, value) {
				var attName, attValue;
				if (name != null) name = getValue(name);
				if (isObject$2(name)) for (attName in name) {
					if (!hasProp.call(name, attName)) continue;
					attValue = name[attName];
					this.attribute(attName, attValue);
				}
				else {
					if (isFunction$1(value)) value = value.apply();
					if (!this.options.skipNullAttributes || value != null) this.attributes[name] = new XMLAttribute(this, name, value);
				}
				return this;
			};
			XMLElement.prototype.removeAttribute = function(name) {
				var attName, i$2, len$1;
				if (name == null) throw new Error("Missing attribute name. " + this.debugInfo());
				name = getValue(name);
				if (Array.isArray(name)) for (i$2 = 0, len$1 = name.length; i$2 < len$1; i$2++) {
					attName = name[i$2];
					delete this.attributes[attName];
				}
				else delete this.attributes[name];
				return this;
			};
			XMLElement.prototype.toString = function(options$1) {
				return this.options.writer.set(options$1).element(this);
			};
			XMLElement.prototype.att = function(name, value) {
				return this.attribute(name, value);
			};
			XMLElement.prototype.a = function(name, value) {
				return this.attribute(name, value);
			};
			return XMLElement;
		})(XMLNode);
	}).call(exports);
}) });

//#endregion
//#region node_modules/xmlbuilder/lib/XMLCData.js
var require_XMLCData = /* @__PURE__ */ __commonJS({ "node_modules/xmlbuilder/lib/XMLCData.js": ((exports, module) => {
	(function() {
		var XMLNode, extend = function(child, parent) {
			for (var key in parent) if (hasProp.call(parent, key)) child[key] = parent[key];
			function ctor$1() {
				this.constructor = child;
			}
			ctor$1.prototype = parent.prototype;
			child.prototype = new ctor$1();
			child.__super__ = parent.prototype;
			return child;
		}, hasProp = {}.hasOwnProperty;
		XMLNode = require_XMLNode();
		module.exports = (function(superClass) {
			extend(XMLCData, superClass);
			function XMLCData(parent, text$1) {
				XMLCData.__super__.constructor.call(this, parent);
				if (text$1 == null) throw new Error("Missing CDATA text. " + this.debugInfo());
				this.text = this.stringify.cdata(text$1);
			}
			XMLCData.prototype.clone = function() {
				return Object.create(this);
			};
			XMLCData.prototype.toString = function(options$1) {
				return this.options.writer.set(options$1).cdata(this);
			};
			return XMLCData;
		})(XMLNode);
	}).call(exports);
}) });

//#endregion
//#region node_modules/xmlbuilder/lib/XMLComment.js
var require_XMLComment = /* @__PURE__ */ __commonJS({ "node_modules/xmlbuilder/lib/XMLComment.js": ((exports, module) => {
	(function() {
		var XMLNode, extend = function(child, parent) {
			for (var key in parent) if (hasProp.call(parent, key)) child[key] = parent[key];
			function ctor$1() {
				this.constructor = child;
			}
			ctor$1.prototype = parent.prototype;
			child.prototype = new ctor$1();
			child.__super__ = parent.prototype;
			return child;
		}, hasProp = {}.hasOwnProperty;
		XMLNode = require_XMLNode();
		module.exports = (function(superClass) {
			extend(XMLComment, superClass);
			function XMLComment(parent, text$1) {
				XMLComment.__super__.constructor.call(this, parent);
				if (text$1 == null) throw new Error("Missing comment text. " + this.debugInfo());
				this.text = this.stringify.comment(text$1);
			}
			XMLComment.prototype.clone = function() {
				return Object.create(this);
			};
			XMLComment.prototype.toString = function(options$1) {
				return this.options.writer.set(options$1).comment(this);
			};
			return XMLComment;
		})(XMLNode);
	}).call(exports);
}) });

//#endregion
//#region node_modules/xmlbuilder/lib/XMLDeclaration.js
var require_XMLDeclaration = /* @__PURE__ */ __commonJS({ "node_modules/xmlbuilder/lib/XMLDeclaration.js": ((exports, module) => {
	(function() {
		var XMLNode, isObject$2, extend = function(child, parent) {
			for (var key in parent) if (hasProp.call(parent, key)) child[key] = parent[key];
			function ctor$1() {
				this.constructor = child;
			}
			ctor$1.prototype = parent.prototype;
			child.prototype = new ctor$1();
			child.__super__ = parent.prototype;
			return child;
		}, hasProp = {}.hasOwnProperty;
		isObject$2 = require_Utility().isObject;
		XMLNode = require_XMLNode();
		module.exports = (function(superClass) {
			extend(XMLDeclaration, superClass);
			function XMLDeclaration(parent, version, encoding, standalone) {
				var ref;
				XMLDeclaration.__super__.constructor.call(this, parent);
				if (isObject$2(version)) ref = version, version = ref.version, encoding = ref.encoding, standalone = ref.standalone;
				if (!version) version = "1.0";
				this.version = this.stringify.xmlVersion(version);
				if (encoding != null) this.encoding = this.stringify.xmlEncoding(encoding);
				if (standalone != null) this.standalone = this.stringify.xmlStandalone(standalone);
			}
			XMLDeclaration.prototype.toString = function(options$1) {
				return this.options.writer.set(options$1).declaration(this);
			};
			return XMLDeclaration;
		})(XMLNode);
	}).call(exports);
}) });

//#endregion
//#region node_modules/xmlbuilder/lib/XMLDTDAttList.js
var require_XMLDTDAttList = /* @__PURE__ */ __commonJS({ "node_modules/xmlbuilder/lib/XMLDTDAttList.js": ((exports, module) => {
	(function() {
		var XMLNode, extend = function(child, parent) {
			for (var key in parent) if (hasProp.call(parent, key)) child[key] = parent[key];
			function ctor$1() {
				this.constructor = child;
			}
			ctor$1.prototype = parent.prototype;
			child.prototype = new ctor$1();
			child.__super__ = parent.prototype;
			return child;
		}, hasProp = {}.hasOwnProperty;
		XMLNode = require_XMLNode();
		module.exports = (function(superClass) {
			extend(XMLDTDAttList, superClass);
			function XMLDTDAttList(parent, elementName, attributeName, attributeType, defaultValueType, defaultValue) {
				XMLDTDAttList.__super__.constructor.call(this, parent);
				if (elementName == null) throw new Error("Missing DTD element name. " + this.debugInfo());
				if (attributeName == null) throw new Error("Missing DTD attribute name. " + this.debugInfo(elementName));
				if (!attributeType) throw new Error("Missing DTD attribute type. " + this.debugInfo(elementName));
				if (!defaultValueType) throw new Error("Missing DTD attribute default. " + this.debugInfo(elementName));
				if (defaultValueType.indexOf("#") !== 0) defaultValueType = "#" + defaultValueType;
				if (!defaultValueType.match(/^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/)) throw new Error("Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT. " + this.debugInfo(elementName));
				if (defaultValue && !defaultValueType.match(/^(#FIXED|#DEFAULT)$/)) throw new Error("Default value only applies to #FIXED or #DEFAULT. " + this.debugInfo(elementName));
				this.elementName = this.stringify.eleName(elementName);
				this.attributeName = this.stringify.attName(attributeName);
				this.attributeType = this.stringify.dtdAttType(attributeType);
				this.defaultValue = this.stringify.dtdAttDefault(defaultValue);
				this.defaultValueType = defaultValueType;
			}
			XMLDTDAttList.prototype.toString = function(options$1) {
				return this.options.writer.set(options$1).dtdAttList(this);
			};
			return XMLDTDAttList;
		})(XMLNode);
	}).call(exports);
}) });

//#endregion
//#region node_modules/xmlbuilder/lib/XMLDTDEntity.js
var require_XMLDTDEntity = /* @__PURE__ */ __commonJS({ "node_modules/xmlbuilder/lib/XMLDTDEntity.js": ((exports, module) => {
	(function() {
		var XMLNode, isObject$2, extend = function(child, parent) {
			for (var key in parent) if (hasProp.call(parent, key)) child[key] = parent[key];
			function ctor$1() {
				this.constructor = child;
			}
			ctor$1.prototype = parent.prototype;
			child.prototype = new ctor$1();
			child.__super__ = parent.prototype;
			return child;
		}, hasProp = {}.hasOwnProperty;
		isObject$2 = require_Utility().isObject;
		XMLNode = require_XMLNode();
		module.exports = (function(superClass) {
			extend(XMLDTDEntity, superClass);
			function XMLDTDEntity(parent, pe, name, value) {
				XMLDTDEntity.__super__.constructor.call(this, parent);
				if (name == null) throw new Error("Missing DTD entity name. " + this.debugInfo(name));
				if (value == null) throw new Error("Missing DTD entity value. " + this.debugInfo(name));
				this.pe = !!pe;
				this.name = this.stringify.eleName(name);
				if (!isObject$2(value)) this.value = this.stringify.dtdEntityValue(value);
				else {
					if (!value.pubID && !value.sysID) throw new Error("Public and/or system identifiers are required for an external entity. " + this.debugInfo(name));
					if (value.pubID && !value.sysID) throw new Error("System identifier is required for a public external entity. " + this.debugInfo(name));
					if (value.pubID != null) this.pubID = this.stringify.dtdPubID(value.pubID);
					if (value.sysID != null) this.sysID = this.stringify.dtdSysID(value.sysID);
					if (value.nData != null) this.nData = this.stringify.dtdNData(value.nData);
					if (this.pe && this.nData) throw new Error("Notation declaration is not allowed in a parameter entity. " + this.debugInfo(name));
				}
			}
			XMLDTDEntity.prototype.toString = function(options$1) {
				return this.options.writer.set(options$1).dtdEntity(this);
			};
			return XMLDTDEntity;
		})(XMLNode);
	}).call(exports);
}) });

//#endregion
//#region node_modules/xmlbuilder/lib/XMLDTDElement.js
var require_XMLDTDElement = /* @__PURE__ */ __commonJS({ "node_modules/xmlbuilder/lib/XMLDTDElement.js": ((exports, module) => {
	(function() {
		var XMLNode, extend = function(child, parent) {
			for (var key in parent) if (hasProp.call(parent, key)) child[key] = parent[key];
			function ctor$1() {
				this.constructor = child;
			}
			ctor$1.prototype = parent.prototype;
			child.prototype = new ctor$1();
			child.__super__ = parent.prototype;
			return child;
		}, hasProp = {}.hasOwnProperty;
		XMLNode = require_XMLNode();
		module.exports = (function(superClass) {
			extend(XMLDTDElement, superClass);
			function XMLDTDElement(parent, name, value) {
				XMLDTDElement.__super__.constructor.call(this, parent);
				if (name == null) throw new Error("Missing DTD element name. " + this.debugInfo());
				if (!value) value = "(#PCDATA)";
				if (Array.isArray(value)) value = "(" + value.join(",") + ")";
				this.name = this.stringify.eleName(name);
				this.value = this.stringify.dtdElementValue(value);
			}
			XMLDTDElement.prototype.toString = function(options$1) {
				return this.options.writer.set(options$1).dtdElement(this);
			};
			return XMLDTDElement;
		})(XMLNode);
	}).call(exports);
}) });

//#endregion
//#region node_modules/xmlbuilder/lib/XMLDTDNotation.js
var require_XMLDTDNotation = /* @__PURE__ */ __commonJS({ "node_modules/xmlbuilder/lib/XMLDTDNotation.js": ((exports, module) => {
	(function() {
		var XMLNode, extend = function(child, parent) {
			for (var key in parent) if (hasProp.call(parent, key)) child[key] = parent[key];
			function ctor$1() {
				this.constructor = child;
			}
			ctor$1.prototype = parent.prototype;
			child.prototype = new ctor$1();
			child.__super__ = parent.prototype;
			return child;
		}, hasProp = {}.hasOwnProperty;
		XMLNode = require_XMLNode();
		module.exports = (function(superClass) {
			extend(XMLDTDNotation, superClass);
			function XMLDTDNotation(parent, name, value) {
				XMLDTDNotation.__super__.constructor.call(this, parent);
				if (name == null) throw new Error("Missing DTD notation name. " + this.debugInfo(name));
				if (!value.pubID && !value.sysID) throw new Error("Public or system identifiers are required for an external entity. " + this.debugInfo(name));
				this.name = this.stringify.eleName(name);
				if (value.pubID != null) this.pubID = this.stringify.dtdPubID(value.pubID);
				if (value.sysID != null) this.sysID = this.stringify.dtdSysID(value.sysID);
			}
			XMLDTDNotation.prototype.toString = function(options$1) {
				return this.options.writer.set(options$1).dtdNotation(this);
			};
			return XMLDTDNotation;
		})(XMLNode);
	}).call(exports);
}) });

//#endregion
//#region node_modules/xmlbuilder/lib/XMLDocType.js
var require_XMLDocType = /* @__PURE__ */ __commonJS({ "node_modules/xmlbuilder/lib/XMLDocType.js": ((exports, module) => {
	(function() {
		var XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLNode, isObject$2, extend = function(child, parent) {
			for (var key in parent) if (hasProp.call(parent, key)) child[key] = parent[key];
			function ctor$1() {
				this.constructor = child;
			}
			ctor$1.prototype = parent.prototype;
			child.prototype = new ctor$1();
			child.__super__ = parent.prototype;
			return child;
		}, hasProp = {}.hasOwnProperty;
		isObject$2 = require_Utility().isObject;
		XMLNode = require_XMLNode();
		XMLDTDAttList = require_XMLDTDAttList();
		XMLDTDEntity = require_XMLDTDEntity();
		XMLDTDElement = require_XMLDTDElement();
		XMLDTDNotation = require_XMLDTDNotation();
		module.exports = (function(superClass) {
			extend(XMLDocType, superClass);
			function XMLDocType(parent, pubID, sysID) {
				var ref, ref1;
				XMLDocType.__super__.constructor.call(this, parent);
				this.name = "!DOCTYPE";
				this.documentObject = parent;
				if (isObject$2(pubID)) ref = pubID, pubID = ref.pubID, sysID = ref.sysID;
				if (sysID == null) ref1 = [pubID, sysID], sysID = ref1[0], pubID = ref1[1];
				if (pubID != null) this.pubID = this.stringify.dtdPubID(pubID);
				if (sysID != null) this.sysID = this.stringify.dtdSysID(sysID);
			}
			XMLDocType.prototype.element = function(name, value) {
				var child = new XMLDTDElement(this, name, value);
				this.children.push(child);
				return this;
			};
			XMLDocType.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {
				var child = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);
				this.children.push(child);
				return this;
			};
			XMLDocType.prototype.entity = function(name, value) {
				var child = new XMLDTDEntity(this, false, name, value);
				this.children.push(child);
				return this;
			};
			XMLDocType.prototype.pEntity = function(name, value) {
				var child = new XMLDTDEntity(this, true, name, value);
				this.children.push(child);
				return this;
			};
			XMLDocType.prototype.notation = function(name, value) {
				var child = new XMLDTDNotation(this, name, value);
				this.children.push(child);
				return this;
			};
			XMLDocType.prototype.toString = function(options$1) {
				return this.options.writer.set(options$1).docType(this);
			};
			XMLDocType.prototype.ele = function(name, value) {
				return this.element(name, value);
			};
			XMLDocType.prototype.att = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {
				return this.attList(elementName, attributeName, attributeType, defaultValueType, defaultValue);
			};
			XMLDocType.prototype.ent = function(name, value) {
				return this.entity(name, value);
			};
			XMLDocType.prototype.pent = function(name, value) {
				return this.pEntity(name, value);
			};
			XMLDocType.prototype.not = function(name, value) {
				return this.notation(name, value);
			};
			XMLDocType.prototype.up = function() {
				return this.root() || this.documentObject;
			};
			return XMLDocType;
		})(XMLNode);
	}).call(exports);
}) });

//#endregion
//#region node_modules/xmlbuilder/lib/XMLRaw.js
var require_XMLRaw = /* @__PURE__ */ __commonJS({ "node_modules/xmlbuilder/lib/XMLRaw.js": ((exports, module) => {
	(function() {
		var XMLNode, extend = function(child, parent) {
			for (var key in parent) if (hasProp.call(parent, key)) child[key] = parent[key];
			function ctor$1() {
				this.constructor = child;
			}
			ctor$1.prototype = parent.prototype;
			child.prototype = new ctor$1();
			child.__super__ = parent.prototype;
			return child;
		}, hasProp = {}.hasOwnProperty;
		XMLNode = require_XMLNode();
		module.exports = (function(superClass) {
			extend(XMLRaw, superClass);
			function XMLRaw(parent, text$1) {
				XMLRaw.__super__.constructor.call(this, parent);
				if (text$1 == null) throw new Error("Missing raw text. " + this.debugInfo());
				this.value = this.stringify.raw(text$1);
			}
			XMLRaw.prototype.clone = function() {
				return Object.create(this);
			};
			XMLRaw.prototype.toString = function(options$1) {
				return this.options.writer.set(options$1).raw(this);
			};
			return XMLRaw;
		})(XMLNode);
	}).call(exports);
}) });

//#endregion
//#region node_modules/xmlbuilder/lib/XMLText.js
var require_XMLText = /* @__PURE__ */ __commonJS({ "node_modules/xmlbuilder/lib/XMLText.js": ((exports, module) => {
	(function() {
		var XMLNode, extend = function(child, parent) {
			for (var key in parent) if (hasProp.call(parent, key)) child[key] = parent[key];
			function ctor$1() {
				this.constructor = child;
			}
			ctor$1.prototype = parent.prototype;
			child.prototype = new ctor$1();
			child.__super__ = parent.prototype;
			return child;
		}, hasProp = {}.hasOwnProperty;
		XMLNode = require_XMLNode();
		module.exports = (function(superClass) {
			extend(XMLText, superClass);
			function XMLText(parent, text$1) {
				XMLText.__super__.constructor.call(this, parent);
				if (text$1 == null) throw new Error("Missing element text. " + this.debugInfo());
				this.value = this.stringify.eleText(text$1);
			}
			XMLText.prototype.clone = function() {
				return Object.create(this);
			};
			XMLText.prototype.toString = function(options$1) {
				return this.options.writer.set(options$1).text(this);
			};
			return XMLText;
		})(XMLNode);
	}).call(exports);
}) });

//#endregion
//#region node_modules/xmlbuilder/lib/XMLProcessingInstruction.js
var require_XMLProcessingInstruction = /* @__PURE__ */ __commonJS({ "node_modules/xmlbuilder/lib/XMLProcessingInstruction.js": ((exports, module) => {
	(function() {
		var XMLNode, extend = function(child, parent) {
			for (var key in parent) if (hasProp.call(parent, key)) child[key] = parent[key];
			function ctor$1() {
				this.constructor = child;
			}
			ctor$1.prototype = parent.prototype;
			child.prototype = new ctor$1();
			child.__super__ = parent.prototype;
			return child;
		}, hasProp = {}.hasOwnProperty;
		XMLNode = require_XMLNode();
		module.exports = (function(superClass) {
			extend(XMLProcessingInstruction, superClass);
			function XMLProcessingInstruction(parent, target, value) {
				XMLProcessingInstruction.__super__.constructor.call(this, parent);
				if (target == null) throw new Error("Missing instruction target. " + this.debugInfo());
				this.target = this.stringify.insTarget(target);
				if (value) this.value = this.stringify.insValue(value);
			}
			XMLProcessingInstruction.prototype.clone = function() {
				return Object.create(this);
			};
			XMLProcessingInstruction.prototype.toString = function(options$1) {
				return this.options.writer.set(options$1).processingInstruction(this);
			};
			return XMLProcessingInstruction;
		})(XMLNode);
	}).call(exports);
}) });

//#endregion
//#region node_modules/xmlbuilder/lib/XMLDummy.js
var require_XMLDummy = /* @__PURE__ */ __commonJS({ "node_modules/xmlbuilder/lib/XMLDummy.js": ((exports, module) => {
	(function() {
		var XMLNode, extend = function(child, parent) {
			for (var key in parent) if (hasProp.call(parent, key)) child[key] = parent[key];
			function ctor$1() {
				this.constructor = child;
			}
			ctor$1.prototype = parent.prototype;
			child.prototype = new ctor$1();
			child.__super__ = parent.prototype;
			return child;
		}, hasProp = {}.hasOwnProperty;
		XMLNode = require_XMLNode();
		module.exports = (function(superClass) {
			extend(XMLDummy, superClass);
			function XMLDummy(parent) {
				XMLDummy.__super__.constructor.call(this, parent);
				this.isDummy = true;
			}
			XMLDummy.prototype.clone = function() {
				return Object.create(this);
			};
			XMLDummy.prototype.toString = function(options$1) {
				return "";
			};
			return XMLDummy;
		})(XMLNode);
	}).call(exports);
}) });

//#endregion
//#region node_modules/xmlbuilder/lib/XMLNode.js
var require_XMLNode = /* @__PURE__ */ __commonJS({ "node_modules/xmlbuilder/lib/XMLNode.js": ((exports, module) => {
	(function() {
		var XMLCData, XMLComment, XMLDeclaration, XMLDocType, XMLDummy, XMLElement, XMLProcessingInstruction, XMLRaw, XMLText, getValue, isEmpty$1, isFunction$1, isObject$2, ref, hasProp = {}.hasOwnProperty;
		ref = require_Utility(), isObject$2 = ref.isObject, isFunction$1 = ref.isFunction, isEmpty$1 = ref.isEmpty, getValue = ref.getValue;
		XMLElement = null;
		XMLCData = null;
		XMLComment = null;
		XMLDeclaration = null;
		XMLDocType = null;
		XMLRaw = null;
		XMLText = null;
		XMLProcessingInstruction = null;
		XMLDummy = null;
		module.exports = (function() {
			function XMLNode(parent) {
				this.parent = parent;
				if (this.parent) {
					this.options = this.parent.options;
					this.stringify = this.parent.stringify;
				}
				this.children = [];
				if (!XMLElement) {
					XMLElement = require_XMLElement();
					XMLCData = require_XMLCData();
					XMLComment = require_XMLComment();
					XMLDeclaration = require_XMLDeclaration();
					XMLDocType = require_XMLDocType();
					XMLRaw = require_XMLRaw();
					XMLText = require_XMLText();
					XMLProcessingInstruction = require_XMLProcessingInstruction();
					XMLDummy = require_XMLDummy();
				}
			}
			XMLNode.prototype.element = function(name, attributes, text$1) {
				var childNode, item, j, k, key, lastChild = null, len$1, len1, ref1, ref2, val;
				if (attributes === null && text$1 == null) ref1 = [{}, null], attributes = ref1[0], text$1 = ref1[1];
				if (attributes == null) attributes = {};
				attributes = getValue(attributes);
				if (!isObject$2(attributes)) ref2 = [attributes, text$1], text$1 = ref2[0], attributes = ref2[1];
				if (name != null) name = getValue(name);
				if (Array.isArray(name)) for (j = 0, len$1 = name.length; j < len$1; j++) {
					item = name[j];
					lastChild = this.element(item);
				}
				else if (isFunction$1(name)) lastChild = this.element(name.apply());
				else if (isObject$2(name)) for (key in name) {
					if (!hasProp.call(name, key)) continue;
					val = name[key];
					if (isFunction$1(val)) val = val.apply();
					if (isObject$2(val) && isEmpty$1(val)) val = null;
					if (!this.options.ignoreDecorators && this.stringify.convertAttKey && key.indexOf(this.stringify.convertAttKey) === 0) lastChild = this.attribute(key.substr(this.stringify.convertAttKey.length), val);
					else if (!this.options.separateArrayItems && Array.isArray(val)) for (k = 0, len1 = val.length; k < len1; k++) {
						item = val[k];
						childNode = {};
						childNode[key] = item;
						lastChild = this.element(childNode);
					}
					else if (isObject$2(val)) {
						lastChild = this.element(key);
						lastChild.element(val);
					} else lastChild = this.element(key, val);
				}
				else if (this.options.skipNullNodes && text$1 === null) lastChild = this.dummy();
				else if (!this.options.ignoreDecorators && this.stringify.convertTextKey && name.indexOf(this.stringify.convertTextKey) === 0) lastChild = this.text(text$1);
				else if (!this.options.ignoreDecorators && this.stringify.convertCDataKey && name.indexOf(this.stringify.convertCDataKey) === 0) lastChild = this.cdata(text$1);
				else if (!this.options.ignoreDecorators && this.stringify.convertCommentKey && name.indexOf(this.stringify.convertCommentKey) === 0) lastChild = this.comment(text$1);
				else if (!this.options.ignoreDecorators && this.stringify.convertRawKey && name.indexOf(this.stringify.convertRawKey) === 0) lastChild = this.raw(text$1);
				else if (!this.options.ignoreDecorators && this.stringify.convertPIKey && name.indexOf(this.stringify.convertPIKey) === 0) lastChild = this.instruction(name.substr(this.stringify.convertPIKey.length), text$1);
				else lastChild = this.node(name, attributes, text$1);
				if (lastChild == null) throw new Error("Could not create any elements with: " + name + ". " + this.debugInfo());
				return lastChild;
			};
			XMLNode.prototype.insertBefore = function(name, attributes, text$1) {
				var child, i$2, removed;
				if (this.isRoot) throw new Error("Cannot insert elements at root level. " + this.debugInfo(name));
				i$2 = this.parent.children.indexOf(this);
				removed = this.parent.children.splice(i$2);
				child = this.parent.element(name, attributes, text$1);
				Array.prototype.push.apply(this.parent.children, removed);
				return child;
			};
			XMLNode.prototype.insertAfter = function(name, attributes, text$1) {
				var child, i$2, removed;
				if (this.isRoot) throw new Error("Cannot insert elements at root level. " + this.debugInfo(name));
				i$2 = this.parent.children.indexOf(this);
				removed = this.parent.children.splice(i$2 + 1);
				child = this.parent.element(name, attributes, text$1);
				Array.prototype.push.apply(this.parent.children, removed);
				return child;
			};
			XMLNode.prototype.remove = function() {
				var i$2;
				if (this.isRoot) throw new Error("Cannot remove the root element. " + this.debugInfo());
				i$2 = this.parent.children.indexOf(this);
				[].splice.apply(this.parent.children, [i$2, i$2 - i$2 + 1].concat([]));
				return this.parent;
			};
			XMLNode.prototype.node = function(name, attributes, text$1) {
				var child, ref1;
				if (name != null) name = getValue(name);
				attributes || (attributes = {});
				attributes = getValue(attributes);
				if (!isObject$2(attributes)) ref1 = [attributes, text$1], text$1 = ref1[0], attributes = ref1[1];
				child = new XMLElement(this, name, attributes);
				if (text$1 != null) child.text(text$1);
				this.children.push(child);
				return child;
			};
			XMLNode.prototype.text = function(value) {
				var child = new XMLText(this, value);
				this.children.push(child);
				return this;
			};
			XMLNode.prototype.cdata = function(value) {
				var child = new XMLCData(this, value);
				this.children.push(child);
				return this;
			};
			XMLNode.prototype.comment = function(value) {
				var child = new XMLComment(this, value);
				this.children.push(child);
				return this;
			};
			XMLNode.prototype.commentBefore = function(value) {
				var i$2 = this.parent.children.indexOf(this), removed = this.parent.children.splice(i$2);
				this.parent.comment(value);
				Array.prototype.push.apply(this.parent.children, removed);
				return this;
			};
			XMLNode.prototype.commentAfter = function(value) {
				var i$2 = this.parent.children.indexOf(this), removed = this.parent.children.splice(i$2 + 1);
				this.parent.comment(value);
				Array.prototype.push.apply(this.parent.children, removed);
				return this;
			};
			XMLNode.prototype.raw = function(value) {
				var child = new XMLRaw(this, value);
				this.children.push(child);
				return this;
			};
			XMLNode.prototype.dummy = function() {
				var child = new XMLDummy(this);
				this.children.push(child);
				return child;
			};
			XMLNode.prototype.instruction = function(target, value) {
				var insTarget, insValue, instruction, j, len$1;
				if (target != null) target = getValue(target);
				if (value != null) value = getValue(value);
				if (Array.isArray(target)) for (j = 0, len$1 = target.length; j < len$1; j++) {
					insTarget = target[j];
					this.instruction(insTarget);
				}
				else if (isObject$2(target)) for (insTarget in target) {
					if (!hasProp.call(target, insTarget)) continue;
					insValue = target[insTarget];
					this.instruction(insTarget, insValue);
				}
				else {
					if (isFunction$1(value)) value = value.apply();
					instruction = new XMLProcessingInstruction(this, target, value);
					this.children.push(instruction);
				}
				return this;
			};
			XMLNode.prototype.instructionBefore = function(target, value) {
				var i$2 = this.parent.children.indexOf(this), removed = this.parent.children.splice(i$2);
				this.parent.instruction(target, value);
				Array.prototype.push.apply(this.parent.children, removed);
				return this;
			};
			XMLNode.prototype.instructionAfter = function(target, value) {
				var i$2 = this.parent.children.indexOf(this), removed = this.parent.children.splice(i$2 + 1);
				this.parent.instruction(target, value);
				Array.prototype.push.apply(this.parent.children, removed);
				return this;
			};
			XMLNode.prototype.declaration = function(version, encoding, standalone) {
				var doc = this.document(), xmldec = new XMLDeclaration(doc, version, encoding, standalone);
				if (doc.children[0] instanceof XMLDeclaration) doc.children[0] = xmldec;
				else doc.children.unshift(xmldec);
				return doc.root() || doc;
			};
			XMLNode.prototype.doctype = function(pubID, sysID) {
				var child, doc = this.document(), doctype = new XMLDocType(doc, pubID, sysID), i$2, j, k, len$1, len1, ref1 = doc.children, ref2;
				for (i$2 = j = 0, len$1 = ref1.length; j < len$1; i$2 = ++j) {
					child = ref1[i$2];
					if (child instanceof XMLDocType) {
						doc.children[i$2] = doctype;
						return doctype;
					}
				}
				ref2 = doc.children;
				for (i$2 = k = 0, len1 = ref2.length; k < len1; i$2 = ++k) {
					child = ref2[i$2];
					if (child.isRoot) {
						doc.children.splice(i$2, 0, doctype);
						return doctype;
					}
				}
				doc.children.push(doctype);
				return doctype;
			};
			XMLNode.prototype.up = function() {
				if (this.isRoot) throw new Error("The root node has no parent. Use doc() if you need to get the document object.");
				return this.parent;
			};
			XMLNode.prototype.root = function() {
				var node = this;
				while (node) if (node.isDocument) return node.rootObject;
				else if (node.isRoot) return node;
				else node = node.parent;
			};
			XMLNode.prototype.document = function() {
				var node = this;
				while (node) if (node.isDocument) return node;
				else node = node.parent;
			};
			XMLNode.prototype.end = function(options$1) {
				return this.document().end(options$1);
			};
			XMLNode.prototype.prev = function() {
				var i$2 = this.parent.children.indexOf(this);
				while (i$2 > 0 && this.parent.children[i$2 - 1].isDummy) i$2 = i$2 - 1;
				if (i$2 < 1) throw new Error("Already at the first node. " + this.debugInfo());
				return this.parent.children[i$2 - 1];
			};
			XMLNode.prototype.next = function() {
				var i$2 = this.parent.children.indexOf(this);
				while (i$2 < this.parent.children.length - 1 && this.parent.children[i$2 + 1].isDummy) i$2 = i$2 + 1;
				if (i$2 === -1 || i$2 === this.parent.children.length - 1) throw new Error("Already at the last node. " + this.debugInfo());
				return this.parent.children[i$2 + 1];
			};
			XMLNode.prototype.importDocument = function(doc) {
				var clonedRoot = doc.root().clone();
				clonedRoot.parent = this;
				clonedRoot.isRoot = false;
				this.children.push(clonedRoot);
				return this;
			};
			XMLNode.prototype.debugInfo = function(name) {
				var ref1, ref2;
				name = name || this.name;
				if (name == null && !((ref1 = this.parent) != null ? ref1.name : void 0)) return "";
				else if (name == null) return "parent: <" + this.parent.name + ">";
				else if (!((ref2 = this.parent) != null ? ref2.name : void 0)) return "node: <" + name + ">";
				else return "node: <" + name + ">, parent: <" + this.parent.name + ">";
			};
			XMLNode.prototype.ele = function(name, attributes, text$1) {
				return this.element(name, attributes, text$1);
			};
			XMLNode.prototype.nod = function(name, attributes, text$1) {
				return this.node(name, attributes, text$1);
			};
			XMLNode.prototype.txt = function(value) {
				return this.text(value);
			};
			XMLNode.prototype.dat = function(value) {
				return this.cdata(value);
			};
			XMLNode.prototype.com = function(value) {
				return this.comment(value);
			};
			XMLNode.prototype.ins = function(target, value) {
				return this.instruction(target, value);
			};
			XMLNode.prototype.doc = function() {
				return this.document();
			};
			XMLNode.prototype.dec = function(version, encoding, standalone) {
				return this.declaration(version, encoding, standalone);
			};
			XMLNode.prototype.dtd = function(pubID, sysID) {
				return this.doctype(pubID, sysID);
			};
			XMLNode.prototype.e = function(name, attributes, text$1) {
				return this.element(name, attributes, text$1);
			};
			XMLNode.prototype.n = function(name, attributes, text$1) {
				return this.node(name, attributes, text$1);
			};
			XMLNode.prototype.t = function(value) {
				return this.text(value);
			};
			XMLNode.prototype.d = function(value) {
				return this.cdata(value);
			};
			XMLNode.prototype.c = function(value) {
				return this.comment(value);
			};
			XMLNode.prototype.r = function(value) {
				return this.raw(value);
			};
			XMLNode.prototype.i = function(target, value) {
				return this.instruction(target, value);
			};
			XMLNode.prototype.u = function() {
				return this.up();
			};
			XMLNode.prototype.importXMLBuilder = function(doc) {
				return this.importDocument(doc);
			};
			return XMLNode;
		})();
	}).call(exports);
}) });

//#endregion
//#region node_modules/xmlbuilder/lib/XMLStringifier.js
var require_XMLStringifier = /* @__PURE__ */ __commonJS({ "node_modules/xmlbuilder/lib/XMLStringifier.js": ((exports, module) => {
	(function() {
		var bind = function(fn, me) {
			return function() {
				return fn.apply(me, arguments);
			};
		}, hasProp = {}.hasOwnProperty;
		module.exports = (function() {
			function XMLStringifier(options$1) {
				this.assertLegalChar = bind(this.assertLegalChar, this);
				var key, ref, value;
				options$1 || (options$1 = {});
				this.noDoubleEncoding = options$1.noDoubleEncoding;
				ref = options$1.stringify || {};
				for (key in ref) {
					if (!hasProp.call(ref, key)) continue;
					value = ref[key];
					this[key] = value;
				}
			}
			XMLStringifier.prototype.eleName = function(val) {
				val = "" + val || "";
				return this.assertLegalChar(val);
			};
			XMLStringifier.prototype.eleText = function(val) {
				val = "" + val || "";
				return this.assertLegalChar(this.elEscape(val));
			};
			XMLStringifier.prototype.cdata = function(val) {
				val = "" + val || "";
				val = val.replace("]]>", "]]]]><![CDATA[>");
				return this.assertLegalChar(val);
			};
			XMLStringifier.prototype.comment = function(val) {
				val = "" + val || "";
				if (val.match(/--/)) throw new Error("Comment text cannot contain double-hypen: " + val);
				return this.assertLegalChar(val);
			};
			XMLStringifier.prototype.raw = function(val) {
				return "" + val || "";
			};
			XMLStringifier.prototype.attName = function(val) {
				return val = "" + val || "";
			};
			XMLStringifier.prototype.attValue = function(val) {
				val = "" + val || "";
				return this.attEscape(val);
			};
			XMLStringifier.prototype.insTarget = function(val) {
				return "" + val || "";
			};
			XMLStringifier.prototype.insValue = function(val) {
				val = "" + val || "";
				if (val.match(/\?>/)) throw new Error("Invalid processing instruction value: " + val);
				return val;
			};
			XMLStringifier.prototype.xmlVersion = function(val) {
				val = "" + val || "";
				if (!val.match(/1\.[0-9]+/)) throw new Error("Invalid version number: " + val);
				return val;
			};
			XMLStringifier.prototype.xmlEncoding = function(val) {
				val = "" + val || "";
				if (!val.match(/^[A-Za-z](?:[A-Za-z0-9._-])*$/)) throw new Error("Invalid encoding: " + val);
				return val;
			};
			XMLStringifier.prototype.xmlStandalone = function(val) {
				if (val) return "yes";
				else return "no";
			};
			XMLStringifier.prototype.dtdPubID = function(val) {
				return "" + val || "";
			};
			XMLStringifier.prototype.dtdSysID = function(val) {
				return "" + val || "";
			};
			XMLStringifier.prototype.dtdElementValue = function(val) {
				return "" + val || "";
			};
			XMLStringifier.prototype.dtdAttType = function(val) {
				return "" + val || "";
			};
			XMLStringifier.prototype.dtdAttDefault = function(val) {
				if (val != null) return "" + val || "";
				else return val;
			};
			XMLStringifier.prototype.dtdEntityValue = function(val) {
				return "" + val || "";
			};
			XMLStringifier.prototype.dtdNData = function(val) {
				return "" + val || "";
			};
			XMLStringifier.prototype.convertAttKey = "@";
			XMLStringifier.prototype.convertPIKey = "?";
			XMLStringifier.prototype.convertTextKey = "#text";
			XMLStringifier.prototype.convertCDataKey = "#cdata";
			XMLStringifier.prototype.convertCommentKey = "#comment";
			XMLStringifier.prototype.convertRawKey = "#raw";
			XMLStringifier.prototype.assertLegalChar = function(str$1) {
				var res = str$1.match(/[\0\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/);
				if (res) throw new Error("Invalid character in string: " + str$1 + " at index " + res.index);
				return str$1;
			};
			XMLStringifier.prototype.elEscape = function(str$1) {
				var ampregex = this.noDoubleEncoding ? /(?!&\S+;)&/g : /&/g;
				return str$1.replace(ampregex, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/\r/g, "&#xD;");
			};
			XMLStringifier.prototype.attEscape = function(str$1) {
				var ampregex = this.noDoubleEncoding ? /(?!&\S+;)&/g : /&/g;
				return str$1.replace(ampregex, "&amp;").replace(/</g, "&lt;").replace(/"/g, "&quot;").replace(/\t/g, "&#x9;").replace(/\n/g, "&#xA;").replace(/\r/g, "&#xD;");
			};
			return XMLStringifier;
		})();
	}).call(exports);
}) });

//#endregion
//#region node_modules/xmlbuilder/lib/XMLWriterBase.js
var require_XMLWriterBase = /* @__PURE__ */ __commonJS({ "node_modules/xmlbuilder/lib/XMLWriterBase.js": ((exports, module) => {
	(function() {
		var hasProp = {}.hasOwnProperty;
		module.exports = (function() {
			function XMLWriterBase(options$1) {
				var key, ref, ref1, ref2, ref3, ref4, ref5, ref6, value;
				options$1 || (options$1 = {});
				this.pretty = options$1.pretty || false;
				this.allowEmpty = (ref = options$1.allowEmpty) != null ? ref : false;
				if (this.pretty) {
					this.indent = (ref1 = options$1.indent) != null ? ref1 : "  ";
					this.newline = (ref2 = options$1.newline) != null ? ref2 : "\n";
					this.offset = (ref3 = options$1.offset) != null ? ref3 : 0;
					this.dontprettytextnodes = (ref4 = options$1.dontprettytextnodes) != null ? ref4 : 0;
				} else {
					this.indent = "";
					this.newline = "";
					this.offset = 0;
					this.dontprettytextnodes = 0;
				}
				this.spacebeforeslash = (ref5 = options$1.spacebeforeslash) != null ? ref5 : "";
				if (this.spacebeforeslash === true) this.spacebeforeslash = " ";
				this.newlinedefault = this.newline;
				this.prettydefault = this.pretty;
				ref6 = options$1.writer || {};
				for (key in ref6) {
					if (!hasProp.call(ref6, key)) continue;
					value = ref6[key];
					this[key] = value;
				}
			}
			XMLWriterBase.prototype.set = function(options$1) {
				var key, ref, value;
				options$1 || (options$1 = {});
				if ("pretty" in options$1) this.pretty = options$1.pretty;
				if ("allowEmpty" in options$1) this.allowEmpty = options$1.allowEmpty;
				if (this.pretty) {
					this.indent = "indent" in options$1 ? options$1.indent : "  ";
					this.newline = "newline" in options$1 ? options$1.newline : "\n";
					this.offset = "offset" in options$1 ? options$1.offset : 0;
					this.dontprettytextnodes = "dontprettytextnodes" in options$1 ? options$1.dontprettytextnodes : 0;
				} else {
					this.indent = "";
					this.newline = "";
					this.offset = 0;
					this.dontprettytextnodes = 0;
				}
				this.spacebeforeslash = "spacebeforeslash" in options$1 ? options$1.spacebeforeslash : "";
				if (this.spacebeforeslash === true) this.spacebeforeslash = " ";
				this.newlinedefault = this.newline;
				this.prettydefault = this.pretty;
				ref = options$1.writer || {};
				for (key in ref) {
					if (!hasProp.call(ref, key)) continue;
					value = ref[key];
					this[key] = value;
				}
				return this;
			};
			XMLWriterBase.prototype.space = function(level$1) {
				var indent;
				if (this.pretty) {
					indent = (level$1 || 0) + this.offset + 1;
					if (indent > 0) return new Array(indent).join(this.indent);
					else return "";
				} else return "";
			};
			return XMLWriterBase;
		})();
	}).call(exports);
}) });

//#endregion
//#region node_modules/xmlbuilder/lib/XMLStringWriter.js
var require_XMLStringWriter = /* @__PURE__ */ __commonJS({ "node_modules/xmlbuilder/lib/XMLStringWriter.js": ((exports, module) => {
	(function() {
		var XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDummy, XMLElement, XMLProcessingInstruction, XMLRaw, XMLText, XMLWriterBase, extend = function(child, parent) {
			for (var key in parent) if (hasProp.call(parent, key)) child[key] = parent[key];
			function ctor$1() {
				this.constructor = child;
			}
			ctor$1.prototype = parent.prototype;
			child.prototype = new ctor$1();
			child.__super__ = parent.prototype;
			return child;
		}, hasProp = {}.hasOwnProperty;
		XMLDeclaration = require_XMLDeclaration();
		XMLDocType = require_XMLDocType();
		XMLCData = require_XMLCData();
		XMLComment = require_XMLComment();
		XMLElement = require_XMLElement();
		XMLRaw = require_XMLRaw();
		XMLText = require_XMLText();
		XMLProcessingInstruction = require_XMLProcessingInstruction();
		XMLDummy = require_XMLDummy();
		XMLDTDAttList = require_XMLDTDAttList();
		XMLDTDElement = require_XMLDTDElement();
		XMLDTDEntity = require_XMLDTDEntity();
		XMLDTDNotation = require_XMLDTDNotation();
		XMLWriterBase = require_XMLWriterBase();
		module.exports = (function(superClass) {
			extend(XMLStringWriter, superClass);
			function XMLStringWriter(options$1) {
				XMLStringWriter.__super__.constructor.call(this, options$1);
			}
			XMLStringWriter.prototype.document = function(doc) {
				var child, i$2, len$1, r, ref;
				this.textispresent = false;
				r = "";
				ref = doc.children;
				for (i$2 = 0, len$1 = ref.length; i$2 < len$1; i$2++) {
					child = ref[i$2];
					if (child instanceof XMLDummy) continue;
					r += (function() {
						switch (false) {
							case !(child instanceof XMLDeclaration): return this.declaration(child);
							case !(child instanceof XMLDocType): return this.docType(child);
							case !(child instanceof XMLComment): return this.comment(child);
							case !(child instanceof XMLProcessingInstruction): return this.processingInstruction(child);
							default: return this.element(child, 0);
						}
					}).call(this);
				}
				if (this.pretty && r.slice(-this.newline.length) === this.newline) r = r.slice(0, -this.newline.length);
				return r;
			};
			XMLStringWriter.prototype.attribute = function(att) {
				return " " + att.name + "=\"" + att.value + "\"";
			};
			XMLStringWriter.prototype.cdata = function(node, level$1) {
				return this.space(level$1) + "<![CDATA[" + node.text + "]]>" + this.newline;
			};
			XMLStringWriter.prototype.comment = function(node, level$1) {
				return this.space(level$1) + "<!-- " + node.text + " -->" + this.newline;
			};
			XMLStringWriter.prototype.declaration = function(node, level$1) {
				var r = this.space(level$1);
				r += "<?xml version=\"" + node.version + "\"";
				if (node.encoding != null) r += " encoding=\"" + node.encoding + "\"";
				if (node.standalone != null) r += " standalone=\"" + node.standalone + "\"";
				r += this.spacebeforeslash + "?>";
				r += this.newline;
				return r;
			};
			XMLStringWriter.prototype.docType = function(node, level$1) {
				var child, i$2, len$1, r, ref;
				level$1 || (level$1 = 0);
				r = this.space(level$1);
				r += "<!DOCTYPE " + node.root().name;
				if (node.pubID && node.sysID) r += " PUBLIC \"" + node.pubID + "\" \"" + node.sysID + "\"";
				else if (node.sysID) r += " SYSTEM \"" + node.sysID + "\"";
				if (node.children.length > 0) {
					r += " [";
					r += this.newline;
					ref = node.children;
					for (i$2 = 0, len$1 = ref.length; i$2 < len$1; i$2++) {
						child = ref[i$2];
						r += (function() {
							switch (false) {
								case !(child instanceof XMLDTDAttList): return this.dtdAttList(child, level$1 + 1);
								case !(child instanceof XMLDTDElement): return this.dtdElement(child, level$1 + 1);
								case !(child instanceof XMLDTDEntity): return this.dtdEntity(child, level$1 + 1);
								case !(child instanceof XMLDTDNotation): return this.dtdNotation(child, level$1 + 1);
								case !(child instanceof XMLCData): return this.cdata(child, level$1 + 1);
								case !(child instanceof XMLComment): return this.comment(child, level$1 + 1);
								case !(child instanceof XMLProcessingInstruction): return this.processingInstruction(child, level$1 + 1);
								default: throw new Error("Unknown DTD node type: " + child.constructor.name);
							}
						}).call(this);
					}
					r += "]";
				}
				r += this.spacebeforeslash + ">";
				r += this.newline;
				return r;
			};
			XMLStringWriter.prototype.element = function(node, level$1) {
				var att, child, i$2, j, len$1, len1, name, r, ref, ref1, ref2, space, textispresentwasset;
				level$1 || (level$1 = 0);
				textispresentwasset = false;
				if (this.textispresent) {
					this.newline = "";
					this.pretty = false;
				} else {
					this.newline = this.newlinedefault;
					this.pretty = this.prettydefault;
				}
				space = this.space(level$1);
				r = "";
				r += space + "<" + node.name;
				ref = node.attributes;
				for (name in ref) {
					if (!hasProp.call(ref, name)) continue;
					att = ref[name];
					r += this.attribute(att);
				}
				if (node.children.length === 0 || node.children.every(function(e) {
					return e.value === "";
				})) if (this.allowEmpty) r += "></" + node.name + ">" + this.newline;
				else r += this.spacebeforeslash + "/>" + this.newline;
				else if (this.pretty && node.children.length === 1 && node.children[0].value != null) {
					r += ">";
					r += node.children[0].value;
					r += "</" + node.name + ">" + this.newline;
				} else {
					if (this.dontprettytextnodes) {
						ref1 = node.children;
						for (i$2 = 0, len$1 = ref1.length; i$2 < len$1; i$2++) {
							child = ref1[i$2];
							if (child.value != null) {
								this.textispresent++;
								textispresentwasset = true;
								break;
							}
						}
					}
					if (this.textispresent) {
						this.newline = "";
						this.pretty = false;
						space = this.space(level$1);
					}
					r += ">" + this.newline;
					ref2 = node.children;
					for (j = 0, len1 = ref2.length; j < len1; j++) {
						child = ref2[j];
						r += (function() {
							switch (false) {
								case !(child instanceof XMLCData): return this.cdata(child, level$1 + 1);
								case !(child instanceof XMLComment): return this.comment(child, level$1 + 1);
								case !(child instanceof XMLElement): return this.element(child, level$1 + 1);
								case !(child instanceof XMLRaw): return this.raw(child, level$1 + 1);
								case !(child instanceof XMLText): return this.text(child, level$1 + 1);
								case !(child instanceof XMLProcessingInstruction): return this.processingInstruction(child, level$1 + 1);
								case !(child instanceof XMLDummy): return "";
								default: throw new Error("Unknown XML node type: " + child.constructor.name);
							}
						}).call(this);
					}
					if (textispresentwasset) this.textispresent--;
					if (!this.textispresent) {
						this.newline = this.newlinedefault;
						this.pretty = this.prettydefault;
					}
					r += space + "</" + node.name + ">" + this.newline;
				}
				return r;
			};
			XMLStringWriter.prototype.processingInstruction = function(node, level$1) {
				var r = this.space(level$1) + "<?" + node.target;
				if (node.value) r += " " + node.value;
				r += this.spacebeforeslash + "?>" + this.newline;
				return r;
			};
			XMLStringWriter.prototype.raw = function(node, level$1) {
				return this.space(level$1) + node.value + this.newline;
			};
			XMLStringWriter.prototype.text = function(node, level$1) {
				return this.space(level$1) + node.value + this.newline;
			};
			XMLStringWriter.prototype.dtdAttList = function(node, level$1) {
				var r = this.space(level$1) + "<!ATTLIST " + node.elementName + " " + node.attributeName + " " + node.attributeType;
				if (node.defaultValueType !== "#DEFAULT") r += " " + node.defaultValueType;
				if (node.defaultValue) r += " \"" + node.defaultValue + "\"";
				r += this.spacebeforeslash + ">" + this.newline;
				return r;
			};
			XMLStringWriter.prototype.dtdElement = function(node, level$1) {
				return this.space(level$1) + "<!ELEMENT " + node.name + " " + node.value + this.spacebeforeslash + ">" + this.newline;
			};
			XMLStringWriter.prototype.dtdEntity = function(node, level$1) {
				var r = this.space(level$1) + "<!ENTITY";
				if (node.pe) r += " %";
				r += " " + node.name;
				if (node.value) r += " \"" + node.value + "\"";
				else {
					if (node.pubID && node.sysID) r += " PUBLIC \"" + node.pubID + "\" \"" + node.sysID + "\"";
					else if (node.sysID) r += " SYSTEM \"" + node.sysID + "\"";
					if (node.nData) r += " NDATA " + node.nData;
				}
				r += this.spacebeforeslash + ">" + this.newline;
				return r;
			};
			XMLStringWriter.prototype.dtdNotation = function(node, level$1) {
				var r = this.space(level$1) + "<!NOTATION " + node.name;
				if (node.pubID && node.sysID) r += " PUBLIC \"" + node.pubID + "\" \"" + node.sysID + "\"";
				else if (node.pubID) r += " PUBLIC \"" + node.pubID + "\"";
				else if (node.sysID) r += " SYSTEM \"" + node.sysID + "\"";
				r += this.spacebeforeslash + ">" + this.newline;
				return r;
			};
			XMLStringWriter.prototype.openNode = function(node, level$1) {
				var att, name, r, ref;
				level$1 || (level$1 = 0);
				if (node instanceof XMLElement) {
					r = this.space(level$1) + "<" + node.name;
					ref = node.attributes;
					for (name in ref) {
						if (!hasProp.call(ref, name)) continue;
						att = ref[name];
						r += this.attribute(att);
					}
					r += (node.children ? ">" : "/>") + this.newline;
					return r;
				} else {
					r = this.space(level$1) + "<!DOCTYPE " + node.rootNodeName;
					if (node.pubID && node.sysID) r += " PUBLIC \"" + node.pubID + "\" \"" + node.sysID + "\"";
					else if (node.sysID) r += " SYSTEM \"" + node.sysID + "\"";
					r += (node.children ? " [" : ">") + this.newline;
					return r;
				}
			};
			XMLStringWriter.prototype.closeNode = function(node, level$1) {
				level$1 || (level$1 = 0);
				switch (false) {
					case !(node instanceof XMLElement): return this.space(level$1) + "</" + node.name + ">" + this.newline;
					case !(node instanceof XMLDocType): return this.space(level$1) + "]>" + this.newline;
				}
			};
			return XMLStringWriter;
		})(XMLWriterBase);
	}).call(exports);
}) });

//#endregion
//#region node_modules/xmlbuilder/lib/XMLDocument.js
var require_XMLDocument = /* @__PURE__ */ __commonJS({ "node_modules/xmlbuilder/lib/XMLDocument.js": ((exports, module) => {
	(function() {
		var XMLNode, XMLStringWriter, XMLStringifier, isPlainObject, extend = function(child, parent) {
			for (var key in parent) if (hasProp.call(parent, key)) child[key] = parent[key];
			function ctor$1() {
				this.constructor = child;
			}
			ctor$1.prototype = parent.prototype;
			child.prototype = new ctor$1();
			child.__super__ = parent.prototype;
			return child;
		}, hasProp = {}.hasOwnProperty;
		isPlainObject = require_Utility().isPlainObject;
		XMLNode = require_XMLNode();
		XMLStringifier = require_XMLStringifier();
		XMLStringWriter = require_XMLStringWriter();
		module.exports = (function(superClass) {
			extend(XMLDocument, superClass);
			function XMLDocument(options$1) {
				XMLDocument.__super__.constructor.call(this, null);
				this.name = "?xml";
				options$1 || (options$1 = {});
				if (!options$1.writer) options$1.writer = new XMLStringWriter();
				this.options = options$1;
				this.stringify = new XMLStringifier(options$1);
				this.isDocument = true;
			}
			XMLDocument.prototype.end = function(writer$2) {
				var writerOptions;
				if (!writer$2) writer$2 = this.options.writer;
				else if (isPlainObject(writer$2)) {
					writerOptions = writer$2;
					writer$2 = this.options.writer.set(writerOptions);
				}
				return writer$2.document(this);
			};
			XMLDocument.prototype.toString = function(options$1) {
				return this.options.writer.set(options$1).document(this);
			};
			return XMLDocument;
		})(XMLNode);
	}).call(exports);
}) });

//#endregion
//#region node_modules/xmlbuilder/lib/XMLDocumentCB.js
var require_XMLDocumentCB = /* @__PURE__ */ __commonJS({ "node_modules/xmlbuilder/lib/XMLDocumentCB.js": ((exports, module) => {
	(function() {
		var XMLAttribute, XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLStringifier, XMLText, getValue, isFunction$1, isObject$2, isPlainObject, ref, hasProp = {}.hasOwnProperty;
		ref = require_Utility(), isObject$2 = ref.isObject, isFunction$1 = ref.isFunction, isPlainObject = ref.isPlainObject, getValue = ref.getValue;
		XMLElement = require_XMLElement();
		XMLCData = require_XMLCData();
		XMLComment = require_XMLComment();
		XMLRaw = require_XMLRaw();
		XMLText = require_XMLText();
		XMLProcessingInstruction = require_XMLProcessingInstruction();
		XMLDeclaration = require_XMLDeclaration();
		XMLDocType = require_XMLDocType();
		XMLDTDAttList = require_XMLDTDAttList();
		XMLDTDEntity = require_XMLDTDEntity();
		XMLDTDElement = require_XMLDTDElement();
		XMLDTDNotation = require_XMLDTDNotation();
		XMLAttribute = require_XMLAttribute();
		XMLStringifier = require_XMLStringifier();
		XMLStringWriter = require_XMLStringWriter();
		module.exports = (function() {
			function XMLDocumentCB(options$1, onData, onEnd) {
				var writerOptions;
				this.name = "?xml";
				options$1 || (options$1 = {});
				if (!options$1.writer) options$1.writer = new XMLStringWriter(options$1);
				else if (isPlainObject(options$1.writer)) {
					writerOptions = options$1.writer;
					options$1.writer = new XMLStringWriter(writerOptions);
				}
				this.options = options$1;
				this.writer = options$1.writer;
				this.stringify = new XMLStringifier(options$1);
				this.onDataCallback = onData || function() {};
				this.onEndCallback = onEnd || function() {};
				this.currentNode = null;
				this.currentLevel = -1;
				this.openTags = {};
				this.documentStarted = false;
				this.documentCompleted = false;
				this.root = null;
			}
			XMLDocumentCB.prototype.node = function(name, attributes, text$1) {
				var ref1, ref2;
				if (name == null) throw new Error("Missing node name.");
				if (this.root && this.currentLevel === -1) throw new Error("Document can only have one root node. " + this.debugInfo(name));
				this.openCurrent();
				name = getValue(name);
				if (attributes === null && text$1 == null) ref1 = [{}, null], attributes = ref1[0], text$1 = ref1[1];
				if (attributes == null) attributes = {};
				attributes = getValue(attributes);
				if (!isObject$2(attributes)) ref2 = [attributes, text$1], text$1 = ref2[0], attributes = ref2[1];
				this.currentNode = new XMLElement(this, name, attributes);
				this.currentNode.children = false;
				this.currentLevel++;
				this.openTags[this.currentLevel] = this.currentNode;
				if (text$1 != null) this.text(text$1);
				return this;
			};
			XMLDocumentCB.prototype.element = function(name, attributes, text$1) {
				if (this.currentNode && this.currentNode instanceof XMLDocType) return this.dtdElement.apply(this, arguments);
				else return this.node(name, attributes, text$1);
			};
			XMLDocumentCB.prototype.attribute = function(name, value) {
				var attName, attValue;
				if (!this.currentNode || this.currentNode.children) throw new Error("att() can only be used immediately after an ele() call in callback mode. " + this.debugInfo(name));
				if (name != null) name = getValue(name);
				if (isObject$2(name)) for (attName in name) {
					if (!hasProp.call(name, attName)) continue;
					attValue = name[attName];
					this.attribute(attName, attValue);
				}
				else {
					if (isFunction$1(value)) value = value.apply();
					if (!this.options.skipNullAttributes || value != null) this.currentNode.attributes[name] = new XMLAttribute(this, name, value);
				}
				return this;
			};
			XMLDocumentCB.prototype.text = function(value) {
				var node;
				this.openCurrent();
				node = new XMLText(this, value);
				this.onData(this.writer.text(node, this.currentLevel + 1), this.currentLevel + 1);
				return this;
			};
			XMLDocumentCB.prototype.cdata = function(value) {
				var node;
				this.openCurrent();
				node = new XMLCData(this, value);
				this.onData(this.writer.cdata(node, this.currentLevel + 1), this.currentLevel + 1);
				return this;
			};
			XMLDocumentCB.prototype.comment = function(value) {
				var node;
				this.openCurrent();
				node = new XMLComment(this, value);
				this.onData(this.writer.comment(node, this.currentLevel + 1), this.currentLevel + 1);
				return this;
			};
			XMLDocumentCB.prototype.raw = function(value) {
				var node;
				this.openCurrent();
				node = new XMLRaw(this, value);
				this.onData(this.writer.raw(node, this.currentLevel + 1), this.currentLevel + 1);
				return this;
			};
			XMLDocumentCB.prototype.instruction = function(target, value) {
				var i$2, insTarget, insValue, len$1, node;
				this.openCurrent();
				if (target != null) target = getValue(target);
				if (value != null) value = getValue(value);
				if (Array.isArray(target)) for (i$2 = 0, len$1 = target.length; i$2 < len$1; i$2++) {
					insTarget = target[i$2];
					this.instruction(insTarget);
				}
				else if (isObject$2(target)) for (insTarget in target) {
					if (!hasProp.call(target, insTarget)) continue;
					insValue = target[insTarget];
					this.instruction(insTarget, insValue);
				}
				else {
					if (isFunction$1(value)) value = value.apply();
					node = new XMLProcessingInstruction(this, target, value);
					this.onData(this.writer.processingInstruction(node, this.currentLevel + 1), this.currentLevel + 1);
				}
				return this;
			};
			XMLDocumentCB.prototype.declaration = function(version, encoding, standalone) {
				var node;
				this.openCurrent();
				if (this.documentStarted) throw new Error("declaration() must be the first node.");
				node = new XMLDeclaration(this, version, encoding, standalone);
				this.onData(this.writer.declaration(node, this.currentLevel + 1), this.currentLevel + 1);
				return this;
			};
			XMLDocumentCB.prototype.doctype = function(root$1, pubID, sysID) {
				this.openCurrent();
				if (root$1 == null) throw new Error("Missing root node name.");
				if (this.root) throw new Error("dtd() must come before the root node.");
				this.currentNode = new XMLDocType(this, pubID, sysID);
				this.currentNode.rootNodeName = root$1;
				this.currentNode.children = false;
				this.currentLevel++;
				this.openTags[this.currentLevel] = this.currentNode;
				return this;
			};
			XMLDocumentCB.prototype.dtdElement = function(name, value) {
				var node;
				this.openCurrent();
				node = new XMLDTDElement(this, name, value);
				this.onData(this.writer.dtdElement(node, this.currentLevel + 1), this.currentLevel + 1);
				return this;
			};
			XMLDocumentCB.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {
				var node;
				this.openCurrent();
				node = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);
				this.onData(this.writer.dtdAttList(node, this.currentLevel + 1), this.currentLevel + 1);
				return this;
			};
			XMLDocumentCB.prototype.entity = function(name, value) {
				var node;
				this.openCurrent();
				node = new XMLDTDEntity(this, false, name, value);
				this.onData(this.writer.dtdEntity(node, this.currentLevel + 1), this.currentLevel + 1);
				return this;
			};
			XMLDocumentCB.prototype.pEntity = function(name, value) {
				var node;
				this.openCurrent();
				node = new XMLDTDEntity(this, true, name, value);
				this.onData(this.writer.dtdEntity(node, this.currentLevel + 1), this.currentLevel + 1);
				return this;
			};
			XMLDocumentCB.prototype.notation = function(name, value) {
				var node;
				this.openCurrent();
				node = new XMLDTDNotation(this, name, value);
				this.onData(this.writer.dtdNotation(node, this.currentLevel + 1), this.currentLevel + 1);
				return this;
			};
			XMLDocumentCB.prototype.up = function() {
				if (this.currentLevel < 0) throw new Error("The document node has no parent.");
				if (this.currentNode) {
					if (this.currentNode.children) this.closeNode(this.currentNode);
					else this.openNode(this.currentNode);
					this.currentNode = null;
				} else this.closeNode(this.openTags[this.currentLevel]);
				delete this.openTags[this.currentLevel];
				this.currentLevel--;
				return this;
			};
			XMLDocumentCB.prototype.end = function() {
				while (this.currentLevel >= 0) this.up();
				return this.onEnd();
			};
			XMLDocumentCB.prototype.openCurrent = function() {
				if (this.currentNode) {
					this.currentNode.children = true;
					return this.openNode(this.currentNode);
				}
			};
			XMLDocumentCB.prototype.openNode = function(node) {
				if (!node.isOpen) {
					if (!this.root && this.currentLevel === 0 && node instanceof XMLElement) this.root = node;
					this.onData(this.writer.openNode(node, this.currentLevel), this.currentLevel);
					return node.isOpen = true;
				}
			};
			XMLDocumentCB.prototype.closeNode = function(node) {
				if (!node.isClosed) {
					this.onData(this.writer.closeNode(node, this.currentLevel), this.currentLevel);
					return node.isClosed = true;
				}
			};
			XMLDocumentCB.prototype.onData = function(chunk$1, level$1) {
				this.documentStarted = true;
				return this.onDataCallback(chunk$1, level$1 + 1);
			};
			XMLDocumentCB.prototype.onEnd = function() {
				this.documentCompleted = true;
				return this.onEndCallback();
			};
			XMLDocumentCB.prototype.debugInfo = function(name) {
				if (name == null) return "";
				else return "node: <" + name + ">";
			};
			XMLDocumentCB.prototype.ele = function() {
				return this.element.apply(this, arguments);
			};
			XMLDocumentCB.prototype.nod = function(name, attributes, text$1) {
				return this.node(name, attributes, text$1);
			};
			XMLDocumentCB.prototype.txt = function(value) {
				return this.text(value);
			};
			XMLDocumentCB.prototype.dat = function(value) {
				return this.cdata(value);
			};
			XMLDocumentCB.prototype.com = function(value) {
				return this.comment(value);
			};
			XMLDocumentCB.prototype.ins = function(target, value) {
				return this.instruction(target, value);
			};
			XMLDocumentCB.prototype.dec = function(version, encoding, standalone) {
				return this.declaration(version, encoding, standalone);
			};
			XMLDocumentCB.prototype.dtd = function(root$1, pubID, sysID) {
				return this.doctype(root$1, pubID, sysID);
			};
			XMLDocumentCB.prototype.e = function(name, attributes, text$1) {
				return this.element(name, attributes, text$1);
			};
			XMLDocumentCB.prototype.n = function(name, attributes, text$1) {
				return this.node(name, attributes, text$1);
			};
			XMLDocumentCB.prototype.t = function(value) {
				return this.text(value);
			};
			XMLDocumentCB.prototype.d = function(value) {
				return this.cdata(value);
			};
			XMLDocumentCB.prototype.c = function(value) {
				return this.comment(value);
			};
			XMLDocumentCB.prototype.r = function(value) {
				return this.raw(value);
			};
			XMLDocumentCB.prototype.i = function(target, value) {
				return this.instruction(target, value);
			};
			XMLDocumentCB.prototype.att = function() {
				if (this.currentNode && this.currentNode instanceof XMLDocType) return this.attList.apply(this, arguments);
				else return this.attribute.apply(this, arguments);
			};
			XMLDocumentCB.prototype.a = function() {
				if (this.currentNode && this.currentNode instanceof XMLDocType) return this.attList.apply(this, arguments);
				else return this.attribute.apply(this, arguments);
			};
			XMLDocumentCB.prototype.ent = function(name, value) {
				return this.entity(name, value);
			};
			XMLDocumentCB.prototype.pent = function(name, value) {
				return this.pEntity(name, value);
			};
			XMLDocumentCB.prototype.not = function(name, value) {
				return this.notation(name, value);
			};
			return XMLDocumentCB;
		})();
	}).call(exports);
}) });

//#endregion
//#region node_modules/xmlbuilder/lib/XMLStreamWriter.js
var require_XMLStreamWriter = /* @__PURE__ */ __commonJS({ "node_modules/xmlbuilder/lib/XMLStreamWriter.js": ((exports, module) => {
	(function() {
		var XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDummy, XMLElement, XMLProcessingInstruction, XMLRaw, XMLText, XMLWriterBase, extend = function(child, parent) {
			for (var key in parent) if (hasProp.call(parent, key)) child[key] = parent[key];
			function ctor$1() {
				this.constructor = child;
			}
			ctor$1.prototype = parent.prototype;
			child.prototype = new ctor$1();
			child.__super__ = parent.prototype;
			return child;
		}, hasProp = {}.hasOwnProperty;
		XMLDeclaration = require_XMLDeclaration();
		XMLDocType = require_XMLDocType();
		XMLCData = require_XMLCData();
		XMLComment = require_XMLComment();
		XMLElement = require_XMLElement();
		XMLRaw = require_XMLRaw();
		XMLText = require_XMLText();
		XMLProcessingInstruction = require_XMLProcessingInstruction();
		XMLDummy = require_XMLDummy();
		XMLDTDAttList = require_XMLDTDAttList();
		XMLDTDElement = require_XMLDTDElement();
		XMLDTDEntity = require_XMLDTDEntity();
		XMLDTDNotation = require_XMLDTDNotation();
		XMLWriterBase = require_XMLWriterBase();
		module.exports = (function(superClass) {
			extend(XMLStreamWriter, superClass);
			function XMLStreamWriter(stream, options$1) {
				XMLStreamWriter.__super__.constructor.call(this, options$1);
				this.stream = stream;
			}
			XMLStreamWriter.prototype.document = function(doc) {
				var child, i$2, j, len$1, len1, ref = doc.children, ref1, results$4;
				for (i$2 = 0, len$1 = ref.length; i$2 < len$1; i$2++) {
					child = ref[i$2];
					child.isLastRootNode = false;
				}
				doc.children[doc.children.length - 1].isLastRootNode = true;
				ref1 = doc.children;
				results$4 = [];
				for (j = 0, len1 = ref1.length; j < len1; j++) {
					child = ref1[j];
					if (child instanceof XMLDummy) continue;
					switch (false) {
						case !(child instanceof XMLDeclaration):
							results$4.push(this.declaration(child));
							break;
						case !(child instanceof XMLDocType):
							results$4.push(this.docType(child));
							break;
						case !(child instanceof XMLComment):
							results$4.push(this.comment(child));
							break;
						case !(child instanceof XMLProcessingInstruction):
							results$4.push(this.processingInstruction(child));
							break;
						default: results$4.push(this.element(child));
					}
				}
				return results$4;
			};
			XMLStreamWriter.prototype.attribute = function(att) {
				return this.stream.write(" " + att.name + "=\"" + att.value + "\"");
			};
			XMLStreamWriter.prototype.cdata = function(node, level$1) {
				return this.stream.write(this.space(level$1) + "<![CDATA[" + node.text + "]]>" + this.endline(node));
			};
			XMLStreamWriter.prototype.comment = function(node, level$1) {
				return this.stream.write(this.space(level$1) + "<!-- " + node.text + " -->" + this.endline(node));
			};
			XMLStreamWriter.prototype.declaration = function(node, level$1) {
				this.stream.write(this.space(level$1));
				this.stream.write("<?xml version=\"" + node.version + "\"");
				if (node.encoding != null) this.stream.write(" encoding=\"" + node.encoding + "\"");
				if (node.standalone != null) this.stream.write(" standalone=\"" + node.standalone + "\"");
				this.stream.write(this.spacebeforeslash + "?>");
				return this.stream.write(this.endline(node));
			};
			XMLStreamWriter.prototype.docType = function(node, level$1) {
				var child, i$2, len$1, ref;
				level$1 || (level$1 = 0);
				this.stream.write(this.space(level$1));
				this.stream.write("<!DOCTYPE " + node.root().name);
				if (node.pubID && node.sysID) this.stream.write(" PUBLIC \"" + node.pubID + "\" \"" + node.sysID + "\"");
				else if (node.sysID) this.stream.write(" SYSTEM \"" + node.sysID + "\"");
				if (node.children.length > 0) {
					this.stream.write(" [");
					this.stream.write(this.endline(node));
					ref = node.children;
					for (i$2 = 0, len$1 = ref.length; i$2 < len$1; i$2++) {
						child = ref[i$2];
						switch (false) {
							case !(child instanceof XMLDTDAttList):
								this.dtdAttList(child, level$1 + 1);
								break;
							case !(child instanceof XMLDTDElement):
								this.dtdElement(child, level$1 + 1);
								break;
							case !(child instanceof XMLDTDEntity):
								this.dtdEntity(child, level$1 + 1);
								break;
							case !(child instanceof XMLDTDNotation):
								this.dtdNotation(child, level$1 + 1);
								break;
							case !(child instanceof XMLCData):
								this.cdata(child, level$1 + 1);
								break;
							case !(child instanceof XMLComment):
								this.comment(child, level$1 + 1);
								break;
							case !(child instanceof XMLProcessingInstruction):
								this.processingInstruction(child, level$1 + 1);
								break;
							default: throw new Error("Unknown DTD node type: " + child.constructor.name);
						}
					}
					this.stream.write("]");
				}
				this.stream.write(this.spacebeforeslash + ">");
				return this.stream.write(this.endline(node));
			};
			XMLStreamWriter.prototype.element = function(node, level$1) {
				var att, child, i$2, len$1, name, ref, ref1, space;
				level$1 || (level$1 = 0);
				space = this.space(level$1);
				this.stream.write(space + "<" + node.name);
				ref = node.attributes;
				for (name in ref) {
					if (!hasProp.call(ref, name)) continue;
					att = ref[name];
					this.attribute(att);
				}
				if (node.children.length === 0 || node.children.every(function(e) {
					return e.value === "";
				})) if (this.allowEmpty) this.stream.write("></" + node.name + ">");
				else this.stream.write(this.spacebeforeslash + "/>");
				else if (this.pretty && node.children.length === 1 && node.children[0].value != null) {
					this.stream.write(">");
					this.stream.write(node.children[0].value);
					this.stream.write("</" + node.name + ">");
				} else {
					this.stream.write(">" + this.newline);
					ref1 = node.children;
					for (i$2 = 0, len$1 = ref1.length; i$2 < len$1; i$2++) {
						child = ref1[i$2];
						switch (false) {
							case !(child instanceof XMLCData):
								this.cdata(child, level$1 + 1);
								break;
							case !(child instanceof XMLComment):
								this.comment(child, level$1 + 1);
								break;
							case !(child instanceof XMLElement):
								this.element(child, level$1 + 1);
								break;
							case !(child instanceof XMLRaw):
								this.raw(child, level$1 + 1);
								break;
							case !(child instanceof XMLText):
								this.text(child, level$1 + 1);
								break;
							case !(child instanceof XMLProcessingInstruction):
								this.processingInstruction(child, level$1 + 1);
								break;
							case !(child instanceof XMLDummy): break;
							default: throw new Error("Unknown XML node type: " + child.constructor.name);
						}
					}
					this.stream.write(space + "</" + node.name + ">");
				}
				return this.stream.write(this.endline(node));
			};
			XMLStreamWriter.prototype.processingInstruction = function(node, level$1) {
				this.stream.write(this.space(level$1) + "<?" + node.target);
				if (node.value) this.stream.write(" " + node.value);
				return this.stream.write(this.spacebeforeslash + "?>" + this.endline(node));
			};
			XMLStreamWriter.prototype.raw = function(node, level$1) {
				return this.stream.write(this.space(level$1) + node.value + this.endline(node));
			};
			XMLStreamWriter.prototype.text = function(node, level$1) {
				return this.stream.write(this.space(level$1) + node.value + this.endline(node));
			};
			XMLStreamWriter.prototype.dtdAttList = function(node, level$1) {
				this.stream.write(this.space(level$1) + "<!ATTLIST " + node.elementName + " " + node.attributeName + " " + node.attributeType);
				if (node.defaultValueType !== "#DEFAULT") this.stream.write(" " + node.defaultValueType);
				if (node.defaultValue) this.stream.write(" \"" + node.defaultValue + "\"");
				return this.stream.write(this.spacebeforeslash + ">" + this.endline(node));
			};
			XMLStreamWriter.prototype.dtdElement = function(node, level$1) {
				this.stream.write(this.space(level$1) + "<!ELEMENT " + node.name + " " + node.value);
				return this.stream.write(this.spacebeforeslash + ">" + this.endline(node));
			};
			XMLStreamWriter.prototype.dtdEntity = function(node, level$1) {
				this.stream.write(this.space(level$1) + "<!ENTITY");
				if (node.pe) this.stream.write(" %");
				this.stream.write(" " + node.name);
				if (node.value) this.stream.write(" \"" + node.value + "\"");
				else {
					if (node.pubID && node.sysID) this.stream.write(" PUBLIC \"" + node.pubID + "\" \"" + node.sysID + "\"");
					else if (node.sysID) this.stream.write(" SYSTEM \"" + node.sysID + "\"");
					if (node.nData) this.stream.write(" NDATA " + node.nData);
				}
				return this.stream.write(this.spacebeforeslash + ">" + this.endline(node));
			};
			XMLStreamWriter.prototype.dtdNotation = function(node, level$1) {
				this.stream.write(this.space(level$1) + "<!NOTATION " + node.name);
				if (node.pubID && node.sysID) this.stream.write(" PUBLIC \"" + node.pubID + "\" \"" + node.sysID + "\"");
				else if (node.pubID) this.stream.write(" PUBLIC \"" + node.pubID + "\"");
				else if (node.sysID) this.stream.write(" SYSTEM \"" + node.sysID + "\"");
				return this.stream.write(this.spacebeforeslash + ">" + this.endline(node));
			};
			XMLStreamWriter.prototype.endline = function(node) {
				if (!node.isLastRootNode) return this.newline;
				else return "";
			};
			return XMLStreamWriter;
		})(XMLWriterBase);
	}).call(exports);
}) });

//#endregion
//#region node_modules/xmlbuilder/lib/index.js
var require_lib$1 = /* @__PURE__ */ __commonJS({ "node_modules/xmlbuilder/lib/index.js": ((exports, module) => {
	(function() {
		var XMLDocument, XMLDocumentCB, XMLStreamWriter, XMLStringWriter, assign$1, isFunction$1, ref = require_Utility();
		assign$1 = ref.assign, isFunction$1 = ref.isFunction;
		XMLDocument = require_XMLDocument();
		XMLDocumentCB = require_XMLDocumentCB();
		XMLStringWriter = require_XMLStringWriter();
		XMLStreamWriter = require_XMLStreamWriter();
		module.exports.create = function(name, xmldec, doctype, options$1) {
			var doc, root$1;
			if (name == null) throw new Error("Root element needs a name.");
			options$1 = assign$1({}, xmldec, doctype, options$1);
			doc = new XMLDocument(options$1);
			root$1 = doc.element(name);
			if (!options$1.headless) {
				doc.declaration(options$1);
				if (options$1.pubID != null || options$1.sysID != null) doc.doctype(options$1);
			}
			return root$1;
		};
		module.exports.begin = function(options$1, onData, onEnd) {
			var ref1;
			if (isFunction$1(options$1)) {
				ref1 = [options$1, onData], onData = ref1[0], onEnd = ref1[1];
				options$1 = {};
			}
			if (onData) return new XMLDocumentCB(options$1, onData, onEnd);
			else return new XMLDocument(options$1);
		};
		module.exports.stringWriter = function(options$1) {
			return new XMLStringWriter(options$1);
		};
		module.exports.streamWriter = function(stream, options$1) {
			return new XMLStreamWriter(stream, options$1);
		};
	}).call(exports);
}) });

//#endregion
//#region node_modules/mammoth/lib/xml/writer.js
var require_writer = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/lib/xml/writer.js": ((exports) => {
	var _$15 = (init_index_all(), __toCommonJS(index_all_exports));
	var xmlbuilder = require_lib$1();
	exports.writeString = writeString;
	function writeString(root$1, namespaces) {
		var uriToPrefix = _$15.invert(namespaces);
		var nodeWriters = {
			element: writeElement,
			text: writeTextNode
		};
		function writeNode$1(builder, node) {
			return nodeWriters[node.type](builder, node);
		}
		function writeElement(builder, element$2) {
			var elementBuilder = builder.element(mapElementName(element$2.name), element$2.attributes);
			element$2.children.forEach(function(child) {
				writeNode$1(elementBuilder, child);
			});
		}
		function mapElementName(name) {
			var longFormMatch = /^\{(.*)\}(.*)$/.exec(name);
			if (longFormMatch) {
				var prefix = uriToPrefix[longFormMatch[1]];
				return prefix + (prefix === "" ? "" : ":") + longFormMatch[2];
			} else return name;
		}
		function writeDocument(root$2) {
			var builder = xmlbuilder.create(mapElementName(root$2.name), {
				version: "1.0",
				encoding: "UTF-8",
				standalone: true
			});
			_$15.forEach(namespaces, function(uri, prefix) {
				var key = "xmlns" + (prefix === "" ? "" : ":" + prefix);
				builder.attribute(key, uri);
			});
			root$2.children.forEach(function(child) {
				writeNode$1(builder, child);
			});
			return builder.end();
		}
		return writeDocument(root$1);
	}
	function writeTextNode(builder, node) {
		builder.text(node.value);
	}
}) });

//#endregion
//#region node_modules/mammoth/lib/xml/index.js
var require_xml = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/lib/xml/index.js": ((exports) => {
	var nodes = require_nodes();
	exports.Element = nodes.Element;
	exports.element = nodes.element;
	exports.emptyElement = nodes.emptyElement;
	exports.text = nodes.text;
	exports.readString = require_reader().readString;
	exports.writeString = require_writer().writeString;
}) });

//#endregion
//#region node_modules/mammoth/lib/docx/office-xml-reader.js
var require_office_xml_reader = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/lib/docx/office-xml-reader.js": ((exports) => {
	var _$14 = (init_index_all(), __toCommonJS(index_all_exports));
	var promises$6 = require_promises();
	var xml$2 = require_xml();
	exports.read = read$1;
	exports.readXmlFromZipFile = readXmlFromZipFile$1;
	var xmlNamespaceMap = {
		"http://schemas.openxmlformats.org/wordprocessingml/2006/main": "w",
		"http://schemas.openxmlformats.org/officeDocument/2006/relationships": "r",
		"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing": "wp",
		"http://schemas.openxmlformats.org/drawingml/2006/main": "a",
		"http://schemas.openxmlformats.org/drawingml/2006/picture": "pic",
		"http://purl.oclc.org/ooxml/wordprocessingml/main": "w",
		"http://purl.oclc.org/ooxml/officeDocument/relationships": "r",
		"http://purl.oclc.org/ooxml/drawingml/wordprocessingDrawing": "wp",
		"http://purl.oclc.org/ooxml/drawingml/main": "a",
		"http://purl.oclc.org/ooxml/drawingml/picture": "pic",
		"http://schemas.openxmlformats.org/package/2006/content-types": "content-types",
		"http://schemas.openxmlformats.org/package/2006/relationships": "relationships",
		"http://schemas.openxmlformats.org/markup-compatibility/2006": "mc",
		"urn:schemas-microsoft-com:vml": "v",
		"urn:schemas-microsoft-com:office:word": "office-word",
		"http://schemas.microsoft.com/office/word/2010/wordml": "wordml"
	};
	function read$1(xmlString) {
		return xml$2.readString(xmlString, xmlNamespaceMap).then(function(document$1) {
			return collapseAlternateContent(document$1)[0];
		});
	}
	function readXmlFromZipFile$1(docxFile, path) {
		if (docxFile.exists(path)) return docxFile.read(path, "utf-8").then(stripUtf8Bom).then(read$1);
		else return promises$6.resolve(null);
	}
	function stripUtf8Bom(xmlString) {
		return xmlString.replace(/^\uFEFF/g, "");
	}
	function collapseAlternateContent(node) {
		if (node.type === "element") if (node.name === "mc:AlternateContent") return node.firstOrEmpty("mc:Fallback").children;
		else {
			node.children = _$14.flatten(node.children.map(collapseAlternateContent, true));
			return [node];
		}
		else return [node];
	}
}) });

//#endregion
//#region node_modules/dingbat-to-unicode/dist/dingbats.js
var require_dingbats = /* @__PURE__ */ __commonJS({ "node_modules/dingbat-to-unicode/dist/dingbats.js": ((exports) => {
	Object.defineProperty(exports, "__esModule", { value: true });
	var dingbats = [
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "32",
			"Dingbat hex": "20",
			"Unicode dec": "32",
			"Unicode hex": "20"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "33",
			"Dingbat hex": "21",
			"Unicode dec": "33",
			"Unicode hex": "21"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "34",
			"Dingbat hex": "22",
			"Unicode dec": "8704",
			"Unicode hex": "2200"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "35",
			"Dingbat hex": "23",
			"Unicode dec": "35",
			"Unicode hex": "23"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "36",
			"Dingbat hex": "24",
			"Unicode dec": "8707",
			"Unicode hex": "2203"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "37",
			"Dingbat hex": "25",
			"Unicode dec": "37",
			"Unicode hex": "25"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "38",
			"Dingbat hex": "26",
			"Unicode dec": "38",
			"Unicode hex": "26"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "39",
			"Dingbat hex": "27",
			"Unicode dec": "8717",
			"Unicode hex": "220D"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "40",
			"Dingbat hex": "28",
			"Unicode dec": "40",
			"Unicode hex": "28"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "41",
			"Dingbat hex": "29",
			"Unicode dec": "41",
			"Unicode hex": "29"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "42",
			"Dingbat hex": "2A",
			"Unicode dec": "42",
			"Unicode hex": "2A"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "43",
			"Dingbat hex": "2B",
			"Unicode dec": "43",
			"Unicode hex": "2B"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "44",
			"Dingbat hex": "2C",
			"Unicode dec": "44",
			"Unicode hex": "2C"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "45",
			"Dingbat hex": "2D",
			"Unicode dec": "8722",
			"Unicode hex": "2212"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "46",
			"Dingbat hex": "2E",
			"Unicode dec": "46",
			"Unicode hex": "2E"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "47",
			"Dingbat hex": "2F",
			"Unicode dec": "47",
			"Unicode hex": "2F"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "48",
			"Dingbat hex": "30",
			"Unicode dec": "48",
			"Unicode hex": "30"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "49",
			"Dingbat hex": "31",
			"Unicode dec": "49",
			"Unicode hex": "31"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "50",
			"Dingbat hex": "32",
			"Unicode dec": "50",
			"Unicode hex": "32"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "51",
			"Dingbat hex": "33",
			"Unicode dec": "51",
			"Unicode hex": "33"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "52",
			"Dingbat hex": "34",
			"Unicode dec": "52",
			"Unicode hex": "34"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "53",
			"Dingbat hex": "35",
			"Unicode dec": "53",
			"Unicode hex": "35"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "54",
			"Dingbat hex": "36",
			"Unicode dec": "54",
			"Unicode hex": "36"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "55",
			"Dingbat hex": "37",
			"Unicode dec": "55",
			"Unicode hex": "37"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "56",
			"Dingbat hex": "38",
			"Unicode dec": "56",
			"Unicode hex": "38"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "57",
			"Dingbat hex": "39",
			"Unicode dec": "57",
			"Unicode hex": "39"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "58",
			"Dingbat hex": "3A",
			"Unicode dec": "58",
			"Unicode hex": "3A"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "59",
			"Dingbat hex": "3B",
			"Unicode dec": "59",
			"Unicode hex": "3B"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "60",
			"Dingbat hex": "3C",
			"Unicode dec": "60",
			"Unicode hex": "3C"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "61",
			"Dingbat hex": "3D",
			"Unicode dec": "61",
			"Unicode hex": "3D"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "62",
			"Dingbat hex": "3E",
			"Unicode dec": "62",
			"Unicode hex": "3E"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "63",
			"Dingbat hex": "3F",
			"Unicode dec": "63",
			"Unicode hex": "3F"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "64",
			"Dingbat hex": "40",
			"Unicode dec": "8773",
			"Unicode hex": "2245"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "65",
			"Dingbat hex": "41",
			"Unicode dec": "913",
			"Unicode hex": "391"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "66",
			"Dingbat hex": "42",
			"Unicode dec": "914",
			"Unicode hex": "392"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "67",
			"Dingbat hex": "43",
			"Unicode dec": "935",
			"Unicode hex": "3A7"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "68",
			"Dingbat hex": "44",
			"Unicode dec": "916",
			"Unicode hex": "394"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "69",
			"Dingbat hex": "45",
			"Unicode dec": "917",
			"Unicode hex": "395"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "70",
			"Dingbat hex": "46",
			"Unicode dec": "934",
			"Unicode hex": "3A6"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "71",
			"Dingbat hex": "47",
			"Unicode dec": "915",
			"Unicode hex": "393"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "72",
			"Dingbat hex": "48",
			"Unicode dec": "919",
			"Unicode hex": "397"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "73",
			"Dingbat hex": "49",
			"Unicode dec": "921",
			"Unicode hex": "399"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "74",
			"Dingbat hex": "4A",
			"Unicode dec": "977",
			"Unicode hex": "3D1"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "75",
			"Dingbat hex": "4B",
			"Unicode dec": "922",
			"Unicode hex": "39A"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "76",
			"Dingbat hex": "4C",
			"Unicode dec": "923",
			"Unicode hex": "39B"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "77",
			"Dingbat hex": "4D",
			"Unicode dec": "924",
			"Unicode hex": "39C"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "78",
			"Dingbat hex": "4E",
			"Unicode dec": "925",
			"Unicode hex": "39D"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "79",
			"Dingbat hex": "4F",
			"Unicode dec": "927",
			"Unicode hex": "39F"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "80",
			"Dingbat hex": "50",
			"Unicode dec": "928",
			"Unicode hex": "3A0"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "81",
			"Dingbat hex": "51",
			"Unicode dec": "920",
			"Unicode hex": "398"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "82",
			"Dingbat hex": "52",
			"Unicode dec": "929",
			"Unicode hex": "3A1"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "83",
			"Dingbat hex": "53",
			"Unicode dec": "931",
			"Unicode hex": "3A3"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "84",
			"Dingbat hex": "54",
			"Unicode dec": "932",
			"Unicode hex": "3A4"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "85",
			"Dingbat hex": "55",
			"Unicode dec": "933",
			"Unicode hex": "3A5"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "86",
			"Dingbat hex": "56",
			"Unicode dec": "962",
			"Unicode hex": "3C2"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "87",
			"Dingbat hex": "57",
			"Unicode dec": "937",
			"Unicode hex": "3A9"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "88",
			"Dingbat hex": "58",
			"Unicode dec": "926",
			"Unicode hex": "39E"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "89",
			"Dingbat hex": "59",
			"Unicode dec": "936",
			"Unicode hex": "3A8"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "90",
			"Dingbat hex": "5A",
			"Unicode dec": "918",
			"Unicode hex": "396"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "91",
			"Dingbat hex": "5B",
			"Unicode dec": "91",
			"Unicode hex": "5B"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "92",
			"Dingbat hex": "5C",
			"Unicode dec": "8756",
			"Unicode hex": "2234"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "93",
			"Dingbat hex": "5D",
			"Unicode dec": "93",
			"Unicode hex": "5D"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "94",
			"Dingbat hex": "5E",
			"Unicode dec": "8869",
			"Unicode hex": "22A5"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "95",
			"Dingbat hex": "5F",
			"Unicode dec": "95",
			"Unicode hex": "5F"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "96",
			"Dingbat hex": "60",
			"Unicode dec": "8254",
			"Unicode hex": "203E"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "97",
			"Dingbat hex": "61",
			"Unicode dec": "945",
			"Unicode hex": "3B1"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "98",
			"Dingbat hex": "62",
			"Unicode dec": "946",
			"Unicode hex": "3B2"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "99",
			"Dingbat hex": "63",
			"Unicode dec": "967",
			"Unicode hex": "3C7"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "100",
			"Dingbat hex": "64",
			"Unicode dec": "948",
			"Unicode hex": "3B4"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "101",
			"Dingbat hex": "65",
			"Unicode dec": "949",
			"Unicode hex": "3B5"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "102",
			"Dingbat hex": "66",
			"Unicode dec": "966",
			"Unicode hex": "3C6"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "103",
			"Dingbat hex": "67",
			"Unicode dec": "947",
			"Unicode hex": "3B3"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "104",
			"Dingbat hex": "68",
			"Unicode dec": "951",
			"Unicode hex": "3B7"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "105",
			"Dingbat hex": "69",
			"Unicode dec": "953",
			"Unicode hex": "3B9"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "106",
			"Dingbat hex": "6A",
			"Unicode dec": "981",
			"Unicode hex": "3D5"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "107",
			"Dingbat hex": "6B",
			"Unicode dec": "954",
			"Unicode hex": "3BA"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "108",
			"Dingbat hex": "6C",
			"Unicode dec": "955",
			"Unicode hex": "3BB"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "109",
			"Dingbat hex": "6D",
			"Unicode dec": "956",
			"Unicode hex": "3BC"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "110",
			"Dingbat hex": "6E",
			"Unicode dec": "957",
			"Unicode hex": "3BD"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "111",
			"Dingbat hex": "6F",
			"Unicode dec": "959",
			"Unicode hex": "3BF"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "112",
			"Dingbat hex": "70",
			"Unicode dec": "960",
			"Unicode hex": "3C0"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "113",
			"Dingbat hex": "71",
			"Unicode dec": "952",
			"Unicode hex": "3B8"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "114",
			"Dingbat hex": "72",
			"Unicode dec": "961",
			"Unicode hex": "3C1"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "115",
			"Dingbat hex": "73",
			"Unicode dec": "963",
			"Unicode hex": "3C3"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "116",
			"Dingbat hex": "74",
			"Unicode dec": "964",
			"Unicode hex": "3C4"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "117",
			"Dingbat hex": "75",
			"Unicode dec": "965",
			"Unicode hex": "3C5"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "118",
			"Dingbat hex": "76",
			"Unicode dec": "982",
			"Unicode hex": "3D6"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "119",
			"Dingbat hex": "77",
			"Unicode dec": "969",
			"Unicode hex": "3C9"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "120",
			"Dingbat hex": "78",
			"Unicode dec": "958",
			"Unicode hex": "3BE"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "121",
			"Dingbat hex": "79",
			"Unicode dec": "968",
			"Unicode hex": "3C8"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "122",
			"Dingbat hex": "7A",
			"Unicode dec": "950",
			"Unicode hex": "3B6"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "123",
			"Dingbat hex": "7B",
			"Unicode dec": "123",
			"Unicode hex": "7B"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "124",
			"Dingbat hex": "7C",
			"Unicode dec": "124",
			"Unicode hex": "7C"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "125",
			"Dingbat hex": "7D",
			"Unicode dec": "125",
			"Unicode hex": "7D"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "126",
			"Dingbat hex": "7E",
			"Unicode dec": "126",
			"Unicode hex": "7E"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "160",
			"Dingbat hex": "A0",
			"Unicode dec": "8364",
			"Unicode hex": "20AC"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "161",
			"Dingbat hex": "A1",
			"Unicode dec": "978",
			"Unicode hex": "3D2"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "162",
			"Dingbat hex": "A2",
			"Unicode dec": "8242",
			"Unicode hex": "2032"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "163",
			"Dingbat hex": "A3",
			"Unicode dec": "8804",
			"Unicode hex": "2264"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "164",
			"Dingbat hex": "A4",
			"Unicode dec": "8260",
			"Unicode hex": "2044"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "165",
			"Dingbat hex": "A5",
			"Unicode dec": "8734",
			"Unicode hex": "221E"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "166",
			"Dingbat hex": "A6",
			"Unicode dec": "402",
			"Unicode hex": "192"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "167",
			"Dingbat hex": "A7",
			"Unicode dec": "9827",
			"Unicode hex": "2663"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "168",
			"Dingbat hex": "A8",
			"Unicode dec": "9830",
			"Unicode hex": "2666"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "169",
			"Dingbat hex": "A9",
			"Unicode dec": "9829",
			"Unicode hex": "2665"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "170",
			"Dingbat hex": "AA",
			"Unicode dec": "9824",
			"Unicode hex": "2660"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "171",
			"Dingbat hex": "AB",
			"Unicode dec": "8596",
			"Unicode hex": "2194"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "172",
			"Dingbat hex": "AC",
			"Unicode dec": "8592",
			"Unicode hex": "2190"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "173",
			"Dingbat hex": "AD",
			"Unicode dec": "8593",
			"Unicode hex": "2191"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "174",
			"Dingbat hex": "AE",
			"Unicode dec": "8594",
			"Unicode hex": "2192"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "175",
			"Dingbat hex": "AF",
			"Unicode dec": "8595",
			"Unicode hex": "2193"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "176",
			"Dingbat hex": "B0",
			"Unicode dec": "176",
			"Unicode hex": "B0"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "177",
			"Dingbat hex": "B1",
			"Unicode dec": "177",
			"Unicode hex": "B1"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "178",
			"Dingbat hex": "B2",
			"Unicode dec": "8243",
			"Unicode hex": "2033"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "179",
			"Dingbat hex": "B3",
			"Unicode dec": "8805",
			"Unicode hex": "2265"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "180",
			"Dingbat hex": "B4",
			"Unicode dec": "215",
			"Unicode hex": "D7"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "181",
			"Dingbat hex": "B5",
			"Unicode dec": "8733",
			"Unicode hex": "221D"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "182",
			"Dingbat hex": "B6",
			"Unicode dec": "8706",
			"Unicode hex": "2202"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "183",
			"Dingbat hex": "B7",
			"Unicode dec": "8226",
			"Unicode hex": "2022"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "184",
			"Dingbat hex": "B8",
			"Unicode dec": "247",
			"Unicode hex": "F7"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "185",
			"Dingbat hex": "B9",
			"Unicode dec": "8800",
			"Unicode hex": "2260"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "186",
			"Dingbat hex": "BA",
			"Unicode dec": "8801",
			"Unicode hex": "2261"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "187",
			"Dingbat hex": "BB",
			"Unicode dec": "8776",
			"Unicode hex": "2248"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "188",
			"Dingbat hex": "BC",
			"Unicode dec": "8230",
			"Unicode hex": "2026"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "189",
			"Dingbat hex": "BD",
			"Unicode dec": "9168",
			"Unicode hex": "23D0"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "190",
			"Dingbat hex": "BE",
			"Unicode dec": "9135",
			"Unicode hex": "23AF"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "191",
			"Dingbat hex": "BF",
			"Unicode dec": "8629",
			"Unicode hex": "21B5"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "192",
			"Dingbat hex": "C0",
			"Unicode dec": "8501",
			"Unicode hex": "2135"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "193",
			"Dingbat hex": "C1",
			"Unicode dec": "8465",
			"Unicode hex": "2111"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "194",
			"Dingbat hex": "C2",
			"Unicode dec": "8476",
			"Unicode hex": "211C"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "195",
			"Dingbat hex": "C3",
			"Unicode dec": "8472",
			"Unicode hex": "2118"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "196",
			"Dingbat hex": "C4",
			"Unicode dec": "8855",
			"Unicode hex": "2297"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "197",
			"Dingbat hex": "C5",
			"Unicode dec": "8853",
			"Unicode hex": "2295"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "198",
			"Dingbat hex": "C6",
			"Unicode dec": "8709",
			"Unicode hex": "2205"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "199",
			"Dingbat hex": "C7",
			"Unicode dec": "8745",
			"Unicode hex": "2229"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "200",
			"Dingbat hex": "C8",
			"Unicode dec": "8746",
			"Unicode hex": "222A"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "201",
			"Dingbat hex": "C9",
			"Unicode dec": "8835",
			"Unicode hex": "2283"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "202",
			"Dingbat hex": "CA",
			"Unicode dec": "8839",
			"Unicode hex": "2287"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "203",
			"Dingbat hex": "CB",
			"Unicode dec": "8836",
			"Unicode hex": "2284"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "204",
			"Dingbat hex": "CC",
			"Unicode dec": "8834",
			"Unicode hex": "2282"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "205",
			"Dingbat hex": "CD",
			"Unicode dec": "8838",
			"Unicode hex": "2286"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "206",
			"Dingbat hex": "CE",
			"Unicode dec": "8712",
			"Unicode hex": "2208"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "207",
			"Dingbat hex": "CF",
			"Unicode dec": "8713",
			"Unicode hex": "2209"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "208",
			"Dingbat hex": "D0",
			"Unicode dec": "8736",
			"Unicode hex": "2220"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "209",
			"Dingbat hex": "D1",
			"Unicode dec": "8711",
			"Unicode hex": "2207"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "210",
			"Dingbat hex": "D2",
			"Unicode dec": "174",
			"Unicode hex": "AE"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "211",
			"Dingbat hex": "D3",
			"Unicode dec": "169",
			"Unicode hex": "A9"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "212",
			"Dingbat hex": "D4",
			"Unicode dec": "8482",
			"Unicode hex": "2122"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "213",
			"Dingbat hex": "D5",
			"Unicode dec": "8719",
			"Unicode hex": "220F"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "214",
			"Dingbat hex": "D6",
			"Unicode dec": "8730",
			"Unicode hex": "221A"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "215",
			"Dingbat hex": "D7",
			"Unicode dec": "8901",
			"Unicode hex": "22C5"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "216",
			"Dingbat hex": "D8",
			"Unicode dec": "172",
			"Unicode hex": "AC"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "217",
			"Dingbat hex": "D9",
			"Unicode dec": "8743",
			"Unicode hex": "2227"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "218",
			"Dingbat hex": "DA",
			"Unicode dec": "8744",
			"Unicode hex": "2228"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "219",
			"Dingbat hex": "DB",
			"Unicode dec": "8660",
			"Unicode hex": "21D4"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "220",
			"Dingbat hex": "DC",
			"Unicode dec": "8656",
			"Unicode hex": "21D0"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "221",
			"Dingbat hex": "DD",
			"Unicode dec": "8657",
			"Unicode hex": "21D1"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "222",
			"Dingbat hex": "DE",
			"Unicode dec": "8658",
			"Unicode hex": "21D2"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "223",
			"Dingbat hex": "DF",
			"Unicode dec": "8659",
			"Unicode hex": "21D3"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "224",
			"Dingbat hex": "E0",
			"Unicode dec": "9674",
			"Unicode hex": "25CA"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "225",
			"Dingbat hex": "E1",
			"Unicode dec": "12296",
			"Unicode hex": "3008"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "226",
			"Dingbat hex": "E2",
			"Unicode dec": "174",
			"Unicode hex": "AE"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "227",
			"Dingbat hex": "E3",
			"Unicode dec": "169",
			"Unicode hex": "A9"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "228",
			"Dingbat hex": "E4",
			"Unicode dec": "8482",
			"Unicode hex": "2122"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "229",
			"Dingbat hex": "E5",
			"Unicode dec": "8721",
			"Unicode hex": "2211"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "230",
			"Dingbat hex": "E6",
			"Unicode dec": "9115",
			"Unicode hex": "239B"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "231",
			"Dingbat hex": "E7",
			"Unicode dec": "9116",
			"Unicode hex": "239C"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "232",
			"Dingbat hex": "E8",
			"Unicode dec": "9117",
			"Unicode hex": "239D"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "233",
			"Dingbat hex": "E9",
			"Unicode dec": "9121",
			"Unicode hex": "23A1"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "234",
			"Dingbat hex": "EA",
			"Unicode dec": "9122",
			"Unicode hex": "23A2"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "235",
			"Dingbat hex": "EB",
			"Unicode dec": "9123",
			"Unicode hex": "23A3"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "236",
			"Dingbat hex": "EC",
			"Unicode dec": "9127",
			"Unicode hex": "23A7"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "237",
			"Dingbat hex": "ED",
			"Unicode dec": "9128",
			"Unicode hex": "23A8"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "238",
			"Dingbat hex": "EE",
			"Unicode dec": "9129",
			"Unicode hex": "23A9"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "239",
			"Dingbat hex": "EF",
			"Unicode dec": "9130",
			"Unicode hex": "23AA"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "240",
			"Dingbat hex": "F0",
			"Unicode dec": "63743",
			"Unicode hex": "F8FF"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "241",
			"Dingbat hex": "F1",
			"Unicode dec": "12297",
			"Unicode hex": "3009"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "242",
			"Dingbat hex": "F2",
			"Unicode dec": "8747",
			"Unicode hex": "222B"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "243",
			"Dingbat hex": "F3",
			"Unicode dec": "8992",
			"Unicode hex": "2320"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "244",
			"Dingbat hex": "F4",
			"Unicode dec": "9134",
			"Unicode hex": "23AE"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "245",
			"Dingbat hex": "F5",
			"Unicode dec": "8993",
			"Unicode hex": "2321"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "246",
			"Dingbat hex": "F6",
			"Unicode dec": "9118",
			"Unicode hex": "239E"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "247",
			"Dingbat hex": "F7",
			"Unicode dec": "9119",
			"Unicode hex": "239F"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "248",
			"Dingbat hex": "F8",
			"Unicode dec": "9120",
			"Unicode hex": "23A0"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "249",
			"Dingbat hex": "F9",
			"Unicode dec": "9124",
			"Unicode hex": "23A4"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "250",
			"Dingbat hex": "FA",
			"Unicode dec": "9125",
			"Unicode hex": "23A5"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "251",
			"Dingbat hex": "FB",
			"Unicode dec": "9126",
			"Unicode hex": "23A6"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "252",
			"Dingbat hex": "FC",
			"Unicode dec": "9131",
			"Unicode hex": "23AB"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "253",
			"Dingbat hex": "FD",
			"Unicode dec": "9132",
			"Unicode hex": "23AC"
		},
		{
			"Typeface name": "Symbol",
			"Dingbat dec": "254",
			"Dingbat hex": "FE",
			"Unicode dec": "9133",
			"Unicode hex": "23AD"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "32",
			"Dingbat hex": "20",
			"Unicode dec": "32",
			"Unicode hex": "20"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "33",
			"Dingbat hex": "21",
			"Unicode dec": "128375",
			"Unicode hex": "1F577"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "34",
			"Dingbat hex": "22",
			"Unicode dec": "128376",
			"Unicode hex": "1F578"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "35",
			"Dingbat hex": "23",
			"Unicode dec": "128370",
			"Unicode hex": "1F572"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "36",
			"Dingbat hex": "24",
			"Unicode dec": "128374",
			"Unicode hex": "1F576"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "37",
			"Dingbat hex": "25",
			"Unicode dec": "127942",
			"Unicode hex": "1F3C6"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "38",
			"Dingbat hex": "26",
			"Unicode dec": "127894",
			"Unicode hex": "1F396"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "39",
			"Dingbat hex": "27",
			"Unicode dec": "128391",
			"Unicode hex": "1F587"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "40",
			"Dingbat hex": "28",
			"Unicode dec": "128488",
			"Unicode hex": "1F5E8"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "41",
			"Dingbat hex": "29",
			"Unicode dec": "128489",
			"Unicode hex": "1F5E9"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "42",
			"Dingbat hex": "2A",
			"Unicode dec": "128496",
			"Unicode hex": "1F5F0"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "43",
			"Dingbat hex": "2B",
			"Unicode dec": "128497",
			"Unicode hex": "1F5F1"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "44",
			"Dingbat hex": "2C",
			"Unicode dec": "127798",
			"Unicode hex": "1F336"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "45",
			"Dingbat hex": "2D",
			"Unicode dec": "127895",
			"Unicode hex": "1F397"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "46",
			"Dingbat hex": "2E",
			"Unicode dec": "128638",
			"Unicode hex": "1F67E"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "47",
			"Dingbat hex": "2F",
			"Unicode dec": "128636",
			"Unicode hex": "1F67C"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "48",
			"Dingbat hex": "30",
			"Unicode dec": "128469",
			"Unicode hex": "1F5D5"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "49",
			"Dingbat hex": "31",
			"Unicode dec": "128470",
			"Unicode hex": "1F5D6"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "50",
			"Dingbat hex": "32",
			"Unicode dec": "128471",
			"Unicode hex": "1F5D7"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "51",
			"Dingbat hex": "33",
			"Unicode dec": "9204",
			"Unicode hex": "23F4"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "52",
			"Dingbat hex": "34",
			"Unicode dec": "9205",
			"Unicode hex": "23F5"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "53",
			"Dingbat hex": "35",
			"Unicode dec": "9206",
			"Unicode hex": "23F6"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "54",
			"Dingbat hex": "36",
			"Unicode dec": "9207",
			"Unicode hex": "23F7"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "55",
			"Dingbat hex": "37",
			"Unicode dec": "9194",
			"Unicode hex": "23EA"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "56",
			"Dingbat hex": "38",
			"Unicode dec": "9193",
			"Unicode hex": "23E9"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "57",
			"Dingbat hex": "39",
			"Unicode dec": "9198",
			"Unicode hex": "23EE"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "58",
			"Dingbat hex": "3A",
			"Unicode dec": "9197",
			"Unicode hex": "23ED"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "59",
			"Dingbat hex": "3B",
			"Unicode dec": "9208",
			"Unicode hex": "23F8"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "60",
			"Dingbat hex": "3C",
			"Unicode dec": "9209",
			"Unicode hex": "23F9"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "61",
			"Dingbat hex": "3D",
			"Unicode dec": "9210",
			"Unicode hex": "23FA"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "62",
			"Dingbat hex": "3E",
			"Unicode dec": "128474",
			"Unicode hex": "1F5DA"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "63",
			"Dingbat hex": "3F",
			"Unicode dec": "128499",
			"Unicode hex": "1F5F3"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "64",
			"Dingbat hex": "40",
			"Unicode dec": "128736",
			"Unicode hex": "1F6E0"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "65",
			"Dingbat hex": "41",
			"Unicode dec": "127959",
			"Unicode hex": "1F3D7"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "66",
			"Dingbat hex": "42",
			"Unicode dec": "127960",
			"Unicode hex": "1F3D8"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "67",
			"Dingbat hex": "43",
			"Unicode dec": "127961",
			"Unicode hex": "1F3D9"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "68",
			"Dingbat hex": "44",
			"Unicode dec": "127962",
			"Unicode hex": "1F3DA"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "69",
			"Dingbat hex": "45",
			"Unicode dec": "127964",
			"Unicode hex": "1F3DC"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "70",
			"Dingbat hex": "46",
			"Unicode dec": "127981",
			"Unicode hex": "1F3ED"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "71",
			"Dingbat hex": "47",
			"Unicode dec": "127963",
			"Unicode hex": "1F3DB"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "72",
			"Dingbat hex": "48",
			"Unicode dec": "127968",
			"Unicode hex": "1F3E0"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "73",
			"Dingbat hex": "49",
			"Unicode dec": "127958",
			"Unicode hex": "1F3D6"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "74",
			"Dingbat hex": "4A",
			"Unicode dec": "127965",
			"Unicode hex": "1F3DD"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "75",
			"Dingbat hex": "4B",
			"Unicode dec": "128739",
			"Unicode hex": "1F6E3"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "76",
			"Dingbat hex": "4C",
			"Unicode dec": "128269",
			"Unicode hex": "1F50D"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "77",
			"Dingbat hex": "4D",
			"Unicode dec": "127956",
			"Unicode hex": "1F3D4"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "78",
			"Dingbat hex": "4E",
			"Unicode dec": "128065",
			"Unicode hex": "1F441"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "79",
			"Dingbat hex": "4F",
			"Unicode dec": "128066",
			"Unicode hex": "1F442"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "80",
			"Dingbat hex": "50",
			"Unicode dec": "127966",
			"Unicode hex": "1F3DE"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "81",
			"Dingbat hex": "51",
			"Unicode dec": "127957",
			"Unicode hex": "1F3D5"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "82",
			"Dingbat hex": "52",
			"Unicode dec": "128740",
			"Unicode hex": "1F6E4"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "83",
			"Dingbat hex": "53",
			"Unicode dec": "127967",
			"Unicode hex": "1F3DF"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "84",
			"Dingbat hex": "54",
			"Unicode dec": "128755",
			"Unicode hex": "1F6F3"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "85",
			"Dingbat hex": "55",
			"Unicode dec": "128364",
			"Unicode hex": "1F56C"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "86",
			"Dingbat hex": "56",
			"Unicode dec": "128363",
			"Unicode hex": "1F56B"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "87",
			"Dingbat hex": "57",
			"Unicode dec": "128360",
			"Unicode hex": "1F568"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "88",
			"Dingbat hex": "58",
			"Unicode dec": "128264",
			"Unicode hex": "1F508"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "89",
			"Dingbat hex": "59",
			"Unicode dec": "127892",
			"Unicode hex": "1F394"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "90",
			"Dingbat hex": "5A",
			"Unicode dec": "127893",
			"Unicode hex": "1F395"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "91",
			"Dingbat hex": "5B",
			"Unicode dec": "128492",
			"Unicode hex": "1F5EC"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "92",
			"Dingbat hex": "5C",
			"Unicode dec": "128637",
			"Unicode hex": "1F67D"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "93",
			"Dingbat hex": "5D",
			"Unicode dec": "128493",
			"Unicode hex": "1F5ED"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "94",
			"Dingbat hex": "5E",
			"Unicode dec": "128490",
			"Unicode hex": "1F5EA"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "95",
			"Dingbat hex": "5F",
			"Unicode dec": "128491",
			"Unicode hex": "1F5EB"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "96",
			"Dingbat hex": "60",
			"Unicode dec": "11156",
			"Unicode hex": "2B94"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "97",
			"Dingbat hex": "61",
			"Unicode dec": "10004",
			"Unicode hex": "2714"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "98",
			"Dingbat hex": "62",
			"Unicode dec": "128690",
			"Unicode hex": "1F6B2"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "99",
			"Dingbat hex": "63",
			"Unicode dec": "11036",
			"Unicode hex": "2B1C"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "100",
			"Dingbat hex": "64",
			"Unicode dec": "128737",
			"Unicode hex": "1F6E1"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "101",
			"Dingbat hex": "65",
			"Unicode dec": "128230",
			"Unicode hex": "1F4E6"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "102",
			"Dingbat hex": "66",
			"Unicode dec": "128753",
			"Unicode hex": "1F6F1"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "103",
			"Dingbat hex": "67",
			"Unicode dec": "11035",
			"Unicode hex": "2B1B"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "104",
			"Dingbat hex": "68",
			"Unicode dec": "128657",
			"Unicode hex": "1F691"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "105",
			"Dingbat hex": "69",
			"Unicode dec": "128712",
			"Unicode hex": "1F6C8"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "106",
			"Dingbat hex": "6A",
			"Unicode dec": "128745",
			"Unicode hex": "1F6E9"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "107",
			"Dingbat hex": "6B",
			"Unicode dec": "128752",
			"Unicode hex": "1F6F0"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "108",
			"Dingbat hex": "6C",
			"Unicode dec": "128968",
			"Unicode hex": "1F7C8"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "109",
			"Dingbat hex": "6D",
			"Unicode dec": "128372",
			"Unicode hex": "1F574"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "110",
			"Dingbat hex": "6E",
			"Unicode dec": "11044",
			"Unicode hex": "2B24"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "111",
			"Dingbat hex": "6F",
			"Unicode dec": "128741",
			"Unicode hex": "1F6E5"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "112",
			"Dingbat hex": "70",
			"Unicode dec": "128660",
			"Unicode hex": "1F694"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "113",
			"Dingbat hex": "71",
			"Unicode dec": "128472",
			"Unicode hex": "1F5D8"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "114",
			"Dingbat hex": "72",
			"Unicode dec": "128473",
			"Unicode hex": "1F5D9"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "115",
			"Dingbat hex": "73",
			"Unicode dec": "10067",
			"Unicode hex": "2753"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "116",
			"Dingbat hex": "74",
			"Unicode dec": "128754",
			"Unicode hex": "1F6F2"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "117",
			"Dingbat hex": "75",
			"Unicode dec": "128647",
			"Unicode hex": "1F687"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "118",
			"Dingbat hex": "76",
			"Unicode dec": "128653",
			"Unicode hex": "1F68D"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "119",
			"Dingbat hex": "77",
			"Unicode dec": "9971",
			"Unicode hex": "26F3"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "120",
			"Dingbat hex": "78",
			"Unicode dec": "10680",
			"Unicode hex": "29B8"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "121",
			"Dingbat hex": "79",
			"Unicode dec": "8854",
			"Unicode hex": "2296"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "122",
			"Dingbat hex": "7A",
			"Unicode dec": "128685",
			"Unicode hex": "1F6AD"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "123",
			"Dingbat hex": "7B",
			"Unicode dec": "128494",
			"Unicode hex": "1F5EE"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "124",
			"Dingbat hex": "7C",
			"Unicode dec": "9168",
			"Unicode hex": "23D0"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "125",
			"Dingbat hex": "7D",
			"Unicode dec": "128495",
			"Unicode hex": "1F5EF"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "126",
			"Dingbat hex": "7E",
			"Unicode dec": "128498",
			"Unicode hex": "1F5F2"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "128",
			"Dingbat hex": "80",
			"Unicode dec": "128697",
			"Unicode hex": "1F6B9"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "129",
			"Dingbat hex": "81",
			"Unicode dec": "128698",
			"Unicode hex": "1F6BA"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "130",
			"Dingbat hex": "82",
			"Unicode dec": "128713",
			"Unicode hex": "1F6C9"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "131",
			"Dingbat hex": "83",
			"Unicode dec": "128714",
			"Unicode hex": "1F6CA"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "132",
			"Dingbat hex": "84",
			"Unicode dec": "128700",
			"Unicode hex": "1F6BC"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "133",
			"Dingbat hex": "85",
			"Unicode dec": "128125",
			"Unicode hex": "1F47D"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "134",
			"Dingbat hex": "86",
			"Unicode dec": "127947",
			"Unicode hex": "1F3CB"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "135",
			"Dingbat hex": "87",
			"Unicode dec": "9975",
			"Unicode hex": "26F7"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "136",
			"Dingbat hex": "88",
			"Unicode dec": "127938",
			"Unicode hex": "1F3C2"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "137",
			"Dingbat hex": "89",
			"Unicode dec": "127948",
			"Unicode hex": "1F3CC"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "138",
			"Dingbat hex": "8A",
			"Unicode dec": "127946",
			"Unicode hex": "1F3CA"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "139",
			"Dingbat hex": "8B",
			"Unicode dec": "127940",
			"Unicode hex": "1F3C4"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "140",
			"Dingbat hex": "8C",
			"Unicode dec": "127949",
			"Unicode hex": "1F3CD"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "141",
			"Dingbat hex": "8D",
			"Unicode dec": "127950",
			"Unicode hex": "1F3CE"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "142",
			"Dingbat hex": "8E",
			"Unicode dec": "128664",
			"Unicode hex": "1F698"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "143",
			"Dingbat hex": "8F",
			"Unicode dec": "128480",
			"Unicode hex": "1F5E0"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "144",
			"Dingbat hex": "90",
			"Unicode dec": "128738",
			"Unicode hex": "1F6E2"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "145",
			"Dingbat hex": "91",
			"Unicode dec": "128176",
			"Unicode hex": "1F4B0"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "146",
			"Dingbat hex": "92",
			"Unicode dec": "127991",
			"Unicode hex": "1F3F7"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "147",
			"Dingbat hex": "93",
			"Unicode dec": "128179",
			"Unicode hex": "1F4B3"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "148",
			"Dingbat hex": "94",
			"Unicode dec": "128106",
			"Unicode hex": "1F46A"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "149",
			"Dingbat hex": "95",
			"Unicode dec": "128481",
			"Unicode hex": "1F5E1"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "150",
			"Dingbat hex": "96",
			"Unicode dec": "128482",
			"Unicode hex": "1F5E2"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "151",
			"Dingbat hex": "97",
			"Unicode dec": "128483",
			"Unicode hex": "1F5E3"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "152",
			"Dingbat hex": "98",
			"Unicode dec": "10031",
			"Unicode hex": "272F"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "153",
			"Dingbat hex": "99",
			"Unicode dec": "128388",
			"Unicode hex": "1F584"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "154",
			"Dingbat hex": "9A",
			"Unicode dec": "128389",
			"Unicode hex": "1F585"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "155",
			"Dingbat hex": "9B",
			"Unicode dec": "128387",
			"Unicode hex": "1F583"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "156",
			"Dingbat hex": "9C",
			"Unicode dec": "128390",
			"Unicode hex": "1F586"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "157",
			"Dingbat hex": "9D",
			"Unicode dec": "128441",
			"Unicode hex": "1F5B9"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "158",
			"Dingbat hex": "9E",
			"Unicode dec": "128442",
			"Unicode hex": "1F5BA"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "159",
			"Dingbat hex": "9F",
			"Unicode dec": "128443",
			"Unicode hex": "1F5BB"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "160",
			"Dingbat hex": "A0",
			"Unicode dec": "128373",
			"Unicode hex": "1F575"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "161",
			"Dingbat hex": "A1",
			"Unicode dec": "128368",
			"Unicode hex": "1F570"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "162",
			"Dingbat hex": "A2",
			"Unicode dec": "128445",
			"Unicode hex": "1F5BD"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "163",
			"Dingbat hex": "A3",
			"Unicode dec": "128446",
			"Unicode hex": "1F5BE"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "164",
			"Dingbat hex": "A4",
			"Unicode dec": "128203",
			"Unicode hex": "1F4CB"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "165",
			"Dingbat hex": "A5",
			"Unicode dec": "128466",
			"Unicode hex": "1F5D2"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "166",
			"Dingbat hex": "A6",
			"Unicode dec": "128467",
			"Unicode hex": "1F5D3"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "167",
			"Dingbat hex": "A7",
			"Unicode dec": "128366",
			"Unicode hex": "1F56E"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "168",
			"Dingbat hex": "A8",
			"Unicode dec": "128218",
			"Unicode hex": "1F4DA"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "169",
			"Dingbat hex": "A9",
			"Unicode dec": "128478",
			"Unicode hex": "1F5DE"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "170",
			"Dingbat hex": "AA",
			"Unicode dec": "128479",
			"Unicode hex": "1F5DF"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "171",
			"Dingbat hex": "AB",
			"Unicode dec": "128451",
			"Unicode hex": "1F5C3"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "172",
			"Dingbat hex": "AC",
			"Unicode dec": "128450",
			"Unicode hex": "1F5C2"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "173",
			"Dingbat hex": "AD",
			"Unicode dec": "128444",
			"Unicode hex": "1F5BC"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "174",
			"Dingbat hex": "AE",
			"Unicode dec": "127917",
			"Unicode hex": "1F3AD"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "175",
			"Dingbat hex": "AF",
			"Unicode dec": "127900",
			"Unicode hex": "1F39C"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "176",
			"Dingbat hex": "B0",
			"Unicode dec": "127896",
			"Unicode hex": "1F398"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "177",
			"Dingbat hex": "B1",
			"Unicode dec": "127897",
			"Unicode hex": "1F399"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "178",
			"Dingbat hex": "B2",
			"Unicode dec": "127911",
			"Unicode hex": "1F3A7"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "179",
			"Dingbat hex": "B3",
			"Unicode dec": "128191",
			"Unicode hex": "1F4BF"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "180",
			"Dingbat hex": "B4",
			"Unicode dec": "127902",
			"Unicode hex": "1F39E"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "181",
			"Dingbat hex": "B5",
			"Unicode dec": "128247",
			"Unicode hex": "1F4F7"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "182",
			"Dingbat hex": "B6",
			"Unicode dec": "127903",
			"Unicode hex": "1F39F"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "183",
			"Dingbat hex": "B7",
			"Unicode dec": "127916",
			"Unicode hex": "1F3AC"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "184",
			"Dingbat hex": "B8",
			"Unicode dec": "128253",
			"Unicode hex": "1F4FD"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "185",
			"Dingbat hex": "B9",
			"Unicode dec": "128249",
			"Unicode hex": "1F4F9"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "186",
			"Dingbat hex": "BA",
			"Unicode dec": "128254",
			"Unicode hex": "1F4FE"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "187",
			"Dingbat hex": "BB",
			"Unicode dec": "128251",
			"Unicode hex": "1F4FB"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "188",
			"Dingbat hex": "BC",
			"Unicode dec": "127898",
			"Unicode hex": "1F39A"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "189",
			"Dingbat hex": "BD",
			"Unicode dec": "127899",
			"Unicode hex": "1F39B"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "190",
			"Dingbat hex": "BE",
			"Unicode dec": "128250",
			"Unicode hex": "1F4FA"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "191",
			"Dingbat hex": "BF",
			"Unicode dec": "128187",
			"Unicode hex": "1F4BB"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "192",
			"Dingbat hex": "C0",
			"Unicode dec": "128421",
			"Unicode hex": "1F5A5"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "193",
			"Dingbat hex": "C1",
			"Unicode dec": "128422",
			"Unicode hex": "1F5A6"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "194",
			"Dingbat hex": "C2",
			"Unicode dec": "128423",
			"Unicode hex": "1F5A7"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "195",
			"Dingbat hex": "C3",
			"Unicode dec": "128377",
			"Unicode hex": "1F579"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "196",
			"Dingbat hex": "C4",
			"Unicode dec": "127918",
			"Unicode hex": "1F3AE"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "197",
			"Dingbat hex": "C5",
			"Unicode dec": "128379",
			"Unicode hex": "1F57B"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "198",
			"Dingbat hex": "C6",
			"Unicode dec": "128380",
			"Unicode hex": "1F57C"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "199",
			"Dingbat hex": "C7",
			"Unicode dec": "128223",
			"Unicode hex": "1F4DF"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "200",
			"Dingbat hex": "C8",
			"Unicode dec": "128385",
			"Unicode hex": "1F581"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "201",
			"Dingbat hex": "C9",
			"Unicode dec": "128384",
			"Unicode hex": "1F580"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "202",
			"Dingbat hex": "CA",
			"Unicode dec": "128424",
			"Unicode hex": "1F5A8"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "203",
			"Dingbat hex": "CB",
			"Unicode dec": "128425",
			"Unicode hex": "1F5A9"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "204",
			"Dingbat hex": "CC",
			"Unicode dec": "128447",
			"Unicode hex": "1F5BF"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "205",
			"Dingbat hex": "CD",
			"Unicode dec": "128426",
			"Unicode hex": "1F5AA"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "206",
			"Dingbat hex": "CE",
			"Unicode dec": "128476",
			"Unicode hex": "1F5DC"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "207",
			"Dingbat hex": "CF",
			"Unicode dec": "128274",
			"Unicode hex": "1F512"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "208",
			"Dingbat hex": "D0",
			"Unicode dec": "128275",
			"Unicode hex": "1F513"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "209",
			"Dingbat hex": "D1",
			"Unicode dec": "128477",
			"Unicode hex": "1F5DD"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "210",
			"Dingbat hex": "D2",
			"Unicode dec": "128229",
			"Unicode hex": "1F4E5"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "211",
			"Dingbat hex": "D3",
			"Unicode dec": "128228",
			"Unicode hex": "1F4E4"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "212",
			"Dingbat hex": "D4",
			"Unicode dec": "128371",
			"Unicode hex": "1F573"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "213",
			"Dingbat hex": "D5",
			"Unicode dec": "127779",
			"Unicode hex": "1F323"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "214",
			"Dingbat hex": "D6",
			"Unicode dec": "127780",
			"Unicode hex": "1F324"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "215",
			"Dingbat hex": "D7",
			"Unicode dec": "127781",
			"Unicode hex": "1F325"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "216",
			"Dingbat hex": "D8",
			"Unicode dec": "127782",
			"Unicode hex": "1F326"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "217",
			"Dingbat hex": "D9",
			"Unicode dec": "9729",
			"Unicode hex": "2601"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "218",
			"Dingbat hex": "DA",
			"Unicode dec": "127784",
			"Unicode hex": "1F328"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "219",
			"Dingbat hex": "DB",
			"Unicode dec": "127783",
			"Unicode hex": "1F327"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "220",
			"Dingbat hex": "DC",
			"Unicode dec": "127785",
			"Unicode hex": "1F329"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "221",
			"Dingbat hex": "DD",
			"Unicode dec": "127786",
			"Unicode hex": "1F32A"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "222",
			"Dingbat hex": "DE",
			"Unicode dec": "127788",
			"Unicode hex": "1F32C"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "223",
			"Dingbat hex": "DF",
			"Unicode dec": "127787",
			"Unicode hex": "1F32B"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "224",
			"Dingbat hex": "E0",
			"Unicode dec": "127772",
			"Unicode hex": "1F31C"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "225",
			"Dingbat hex": "E1",
			"Unicode dec": "127777",
			"Unicode hex": "1F321"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "226",
			"Dingbat hex": "E2",
			"Unicode dec": "128715",
			"Unicode hex": "1F6CB"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "227",
			"Dingbat hex": "E3",
			"Unicode dec": "128719",
			"Unicode hex": "1F6CF"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "228",
			"Dingbat hex": "E4",
			"Unicode dec": "127869",
			"Unicode hex": "1F37D"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "229",
			"Dingbat hex": "E5",
			"Unicode dec": "127864",
			"Unicode hex": "1F378"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "230",
			"Dingbat hex": "E6",
			"Unicode dec": "128718",
			"Unicode hex": "1F6CE"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "231",
			"Dingbat hex": "E7",
			"Unicode dec": "128717",
			"Unicode hex": "1F6CD"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "232",
			"Dingbat hex": "E8",
			"Unicode dec": "9413",
			"Unicode hex": "24C5"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "233",
			"Dingbat hex": "E9",
			"Unicode dec": "9855",
			"Unicode hex": "267F"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "234",
			"Dingbat hex": "EA",
			"Unicode dec": "128710",
			"Unicode hex": "1F6C6"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "235",
			"Dingbat hex": "EB",
			"Unicode dec": "128392",
			"Unicode hex": "1F588"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "236",
			"Dingbat hex": "EC",
			"Unicode dec": "127891",
			"Unicode hex": "1F393"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "237",
			"Dingbat hex": "ED",
			"Unicode dec": "128484",
			"Unicode hex": "1F5E4"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "238",
			"Dingbat hex": "EE",
			"Unicode dec": "128485",
			"Unicode hex": "1F5E5"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "239",
			"Dingbat hex": "EF",
			"Unicode dec": "128486",
			"Unicode hex": "1F5E6"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "240",
			"Dingbat hex": "F0",
			"Unicode dec": "128487",
			"Unicode hex": "1F5E7"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "241",
			"Dingbat hex": "F1",
			"Unicode dec": "128746",
			"Unicode hex": "1F6EA"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "242",
			"Dingbat hex": "F2",
			"Unicode dec": "128063",
			"Unicode hex": "1F43F"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "243",
			"Dingbat hex": "F3",
			"Unicode dec": "128038",
			"Unicode hex": "1F426"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "244",
			"Dingbat hex": "F4",
			"Unicode dec": "128031",
			"Unicode hex": "1F41F"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "245",
			"Dingbat hex": "F5",
			"Unicode dec": "128021",
			"Unicode hex": "1F415"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "246",
			"Dingbat hex": "F6",
			"Unicode dec": "128008",
			"Unicode hex": "1F408"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "247",
			"Dingbat hex": "F7",
			"Unicode dec": "128620",
			"Unicode hex": "1F66C"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "248",
			"Dingbat hex": "F8",
			"Unicode dec": "128622",
			"Unicode hex": "1F66E"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "249",
			"Dingbat hex": "F9",
			"Unicode dec": "128621",
			"Unicode hex": "1F66D"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "250",
			"Dingbat hex": "FA",
			"Unicode dec": "128623",
			"Unicode hex": "1F66F"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "251",
			"Dingbat hex": "FB",
			"Unicode dec": "128506",
			"Unicode hex": "1F5FA"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "252",
			"Dingbat hex": "FC",
			"Unicode dec": "127757",
			"Unicode hex": "1F30D"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "253",
			"Dingbat hex": "FD",
			"Unicode dec": "127759",
			"Unicode hex": "1F30F"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "254",
			"Dingbat hex": "FE",
			"Unicode dec": "127758",
			"Unicode hex": "1F30E"
		},
		{
			"Typeface name": "Webdings",
			"Dingbat dec": "255",
			"Dingbat hex": "FF",
			"Unicode dec": "128330",
			"Unicode hex": "1F54A"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "32",
			"Dingbat hex": "20",
			"Unicode dec": "32",
			"Unicode hex": "20"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "33",
			"Dingbat hex": "21",
			"Unicode dec": "128393",
			"Unicode hex": "1F589"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "34",
			"Dingbat hex": "22",
			"Unicode dec": "9986",
			"Unicode hex": "2702"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "35",
			"Dingbat hex": "23",
			"Unicode dec": "9985",
			"Unicode hex": "2701"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "36",
			"Dingbat hex": "24",
			"Unicode dec": "128083",
			"Unicode hex": "1F453"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "37",
			"Dingbat hex": "25",
			"Unicode dec": "128365",
			"Unicode hex": "1F56D"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "38",
			"Dingbat hex": "26",
			"Unicode dec": "128366",
			"Unicode hex": "1F56E"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "39",
			"Dingbat hex": "27",
			"Unicode dec": "128367",
			"Unicode hex": "1F56F"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "40",
			"Dingbat hex": "28",
			"Unicode dec": "128383",
			"Unicode hex": "1F57F"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "41",
			"Dingbat hex": "29",
			"Unicode dec": "9990",
			"Unicode hex": "2706"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "42",
			"Dingbat hex": "2A",
			"Unicode dec": "128386",
			"Unicode hex": "1F582"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "43",
			"Dingbat hex": "2B",
			"Unicode dec": "128387",
			"Unicode hex": "1F583"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "44",
			"Dingbat hex": "2C",
			"Unicode dec": "128234",
			"Unicode hex": "1F4EA"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "45",
			"Dingbat hex": "2D",
			"Unicode dec": "128235",
			"Unicode hex": "1F4EB"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "46",
			"Dingbat hex": "2E",
			"Unicode dec": "128236",
			"Unicode hex": "1F4EC"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "47",
			"Dingbat hex": "2F",
			"Unicode dec": "128237",
			"Unicode hex": "1F4ED"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "48",
			"Dingbat hex": "30",
			"Unicode dec": "128448",
			"Unicode hex": "1F5C0"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "49",
			"Dingbat hex": "31",
			"Unicode dec": "128449",
			"Unicode hex": "1F5C1"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "50",
			"Dingbat hex": "32",
			"Unicode dec": "128462",
			"Unicode hex": "1F5CE"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "51",
			"Dingbat hex": "33",
			"Unicode dec": "128463",
			"Unicode hex": "1F5CF"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "52",
			"Dingbat hex": "34",
			"Unicode dec": "128464",
			"Unicode hex": "1F5D0"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "53",
			"Dingbat hex": "35",
			"Unicode dec": "128452",
			"Unicode hex": "1F5C4"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "54",
			"Dingbat hex": "36",
			"Unicode dec": "8987",
			"Unicode hex": "231B"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "55",
			"Dingbat hex": "37",
			"Unicode dec": "128430",
			"Unicode hex": "1F5AE"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "56",
			"Dingbat hex": "38",
			"Unicode dec": "128432",
			"Unicode hex": "1F5B0"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "57",
			"Dingbat hex": "39",
			"Unicode dec": "128434",
			"Unicode hex": "1F5B2"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "58",
			"Dingbat hex": "3A",
			"Unicode dec": "128435",
			"Unicode hex": "1F5B3"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "59",
			"Dingbat hex": "3B",
			"Unicode dec": "128436",
			"Unicode hex": "1F5B4"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "60",
			"Dingbat hex": "3C",
			"Unicode dec": "128427",
			"Unicode hex": "1F5AB"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "61",
			"Dingbat hex": "3D",
			"Unicode dec": "128428",
			"Unicode hex": "1F5AC"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "62",
			"Dingbat hex": "3E",
			"Unicode dec": "9991",
			"Unicode hex": "2707"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "63",
			"Dingbat hex": "3F",
			"Unicode dec": "9997",
			"Unicode hex": "270D"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "64",
			"Dingbat hex": "40",
			"Unicode dec": "128398",
			"Unicode hex": "1F58E"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "65",
			"Dingbat hex": "41",
			"Unicode dec": "9996",
			"Unicode hex": "270C"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "66",
			"Dingbat hex": "42",
			"Unicode dec": "128399",
			"Unicode hex": "1F58F"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "67",
			"Dingbat hex": "43",
			"Unicode dec": "128077",
			"Unicode hex": "1F44D"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "68",
			"Dingbat hex": "44",
			"Unicode dec": "128078",
			"Unicode hex": "1F44E"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "69",
			"Dingbat hex": "45",
			"Unicode dec": "9756",
			"Unicode hex": "261C"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "70",
			"Dingbat hex": "46",
			"Unicode dec": "9758",
			"Unicode hex": "261E"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "71",
			"Dingbat hex": "47",
			"Unicode dec": "9757",
			"Unicode hex": "261D"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "72",
			"Dingbat hex": "48",
			"Unicode dec": "9759",
			"Unicode hex": "261F"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "73",
			"Dingbat hex": "49",
			"Unicode dec": "128400",
			"Unicode hex": "1F590"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "74",
			"Dingbat hex": "4A",
			"Unicode dec": "9786",
			"Unicode hex": "263A"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "75",
			"Dingbat hex": "4B",
			"Unicode dec": "128528",
			"Unicode hex": "1F610"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "76",
			"Dingbat hex": "4C",
			"Unicode dec": "9785",
			"Unicode hex": "2639"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "77",
			"Dingbat hex": "4D",
			"Unicode dec": "128163",
			"Unicode hex": "1F4A3"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "78",
			"Dingbat hex": "4E",
			"Unicode dec": "128369",
			"Unicode hex": "1F571"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "79",
			"Dingbat hex": "4F",
			"Unicode dec": "127987",
			"Unicode hex": "1F3F3"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "80",
			"Dingbat hex": "50",
			"Unicode dec": "127985",
			"Unicode hex": "1F3F1"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "81",
			"Dingbat hex": "51",
			"Unicode dec": "9992",
			"Unicode hex": "2708"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "82",
			"Dingbat hex": "52",
			"Unicode dec": "9788",
			"Unicode hex": "263C"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "83",
			"Dingbat hex": "53",
			"Unicode dec": "127778",
			"Unicode hex": "1F322"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "84",
			"Dingbat hex": "54",
			"Unicode dec": "10052",
			"Unicode hex": "2744"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "85",
			"Dingbat hex": "55",
			"Unicode dec": "128326",
			"Unicode hex": "1F546"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "86",
			"Dingbat hex": "56",
			"Unicode dec": "10014",
			"Unicode hex": "271E"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "87",
			"Dingbat hex": "57",
			"Unicode dec": "128328",
			"Unicode hex": "1F548"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "88",
			"Dingbat hex": "58",
			"Unicode dec": "10016",
			"Unicode hex": "2720"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "89",
			"Dingbat hex": "59",
			"Unicode dec": "10017",
			"Unicode hex": "2721"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "90",
			"Dingbat hex": "5A",
			"Unicode dec": "9770",
			"Unicode hex": "262A"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "91",
			"Dingbat hex": "5B",
			"Unicode dec": "9775",
			"Unicode hex": "262F"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "92",
			"Dingbat hex": "5C",
			"Unicode dec": "128329",
			"Unicode hex": "1F549"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "93",
			"Dingbat hex": "5D",
			"Unicode dec": "9784",
			"Unicode hex": "2638"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "94",
			"Dingbat hex": "5E",
			"Unicode dec": "9800",
			"Unicode hex": "2648"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "95",
			"Dingbat hex": "5F",
			"Unicode dec": "9801",
			"Unicode hex": "2649"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "96",
			"Dingbat hex": "60",
			"Unicode dec": "9802",
			"Unicode hex": "264A"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "97",
			"Dingbat hex": "61",
			"Unicode dec": "9803",
			"Unicode hex": "264B"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "98",
			"Dingbat hex": "62",
			"Unicode dec": "9804",
			"Unicode hex": "264C"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "99",
			"Dingbat hex": "63",
			"Unicode dec": "9805",
			"Unicode hex": "264D"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "100",
			"Dingbat hex": "64",
			"Unicode dec": "9806",
			"Unicode hex": "264E"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "101",
			"Dingbat hex": "65",
			"Unicode dec": "9807",
			"Unicode hex": "264F"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "102",
			"Dingbat hex": "66",
			"Unicode dec": "9808",
			"Unicode hex": "2650"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "103",
			"Dingbat hex": "67",
			"Unicode dec": "9809",
			"Unicode hex": "2651"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "104",
			"Dingbat hex": "68",
			"Unicode dec": "9810",
			"Unicode hex": "2652"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "105",
			"Dingbat hex": "69",
			"Unicode dec": "9811",
			"Unicode hex": "2653"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "106",
			"Dingbat hex": "6A",
			"Unicode dec": "128624",
			"Unicode hex": "1F670"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "107",
			"Dingbat hex": "6B",
			"Unicode dec": "128629",
			"Unicode hex": "1F675"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "108",
			"Dingbat hex": "6C",
			"Unicode dec": "9899",
			"Unicode hex": "26AB"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "109",
			"Dingbat hex": "6D",
			"Unicode dec": "128318",
			"Unicode hex": "1F53E"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "110",
			"Dingbat hex": "6E",
			"Unicode dec": "9724",
			"Unicode hex": "25FC"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "111",
			"Dingbat hex": "6F",
			"Unicode dec": "128911",
			"Unicode hex": "1F78F"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "112",
			"Dingbat hex": "70",
			"Unicode dec": "128912",
			"Unicode hex": "1F790"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "113",
			"Dingbat hex": "71",
			"Unicode dec": "10065",
			"Unicode hex": "2751"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "114",
			"Dingbat hex": "72",
			"Unicode dec": "10066",
			"Unicode hex": "2752"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "115",
			"Dingbat hex": "73",
			"Unicode dec": "128927",
			"Unicode hex": "1F79F"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "116",
			"Dingbat hex": "74",
			"Unicode dec": "10731",
			"Unicode hex": "29EB"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "117",
			"Dingbat hex": "75",
			"Unicode dec": "9670",
			"Unicode hex": "25C6"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "118",
			"Dingbat hex": "76",
			"Unicode dec": "10070",
			"Unicode hex": "2756"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "119",
			"Dingbat hex": "77",
			"Unicode dec": "11049",
			"Unicode hex": "2B29"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "120",
			"Dingbat hex": "78",
			"Unicode dec": "8999",
			"Unicode hex": "2327"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "121",
			"Dingbat hex": "79",
			"Unicode dec": "11193",
			"Unicode hex": "2BB9"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "122",
			"Dingbat hex": "7A",
			"Unicode dec": "8984",
			"Unicode hex": "2318"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "123",
			"Dingbat hex": "7B",
			"Unicode dec": "127989",
			"Unicode hex": "1F3F5"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "124",
			"Dingbat hex": "7C",
			"Unicode dec": "127990",
			"Unicode hex": "1F3F6"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "125",
			"Dingbat hex": "7D",
			"Unicode dec": "128630",
			"Unicode hex": "1F676"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "126",
			"Dingbat hex": "7E",
			"Unicode dec": "128631",
			"Unicode hex": "1F677"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "127",
			"Dingbat hex": "7F",
			"Unicode dec": "9647",
			"Unicode hex": "25AF"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "128",
			"Dingbat hex": "80",
			"Unicode dec": "127243",
			"Unicode hex": "1F10B"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "129",
			"Dingbat hex": "81",
			"Unicode dec": "10112",
			"Unicode hex": "2780"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "130",
			"Dingbat hex": "82",
			"Unicode dec": "10113",
			"Unicode hex": "2781"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "131",
			"Dingbat hex": "83",
			"Unicode dec": "10114",
			"Unicode hex": "2782"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "132",
			"Dingbat hex": "84",
			"Unicode dec": "10115",
			"Unicode hex": "2783"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "133",
			"Dingbat hex": "85",
			"Unicode dec": "10116",
			"Unicode hex": "2784"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "134",
			"Dingbat hex": "86",
			"Unicode dec": "10117",
			"Unicode hex": "2785"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "135",
			"Dingbat hex": "87",
			"Unicode dec": "10118",
			"Unicode hex": "2786"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "136",
			"Dingbat hex": "88",
			"Unicode dec": "10119",
			"Unicode hex": "2787"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "137",
			"Dingbat hex": "89",
			"Unicode dec": "10120",
			"Unicode hex": "2788"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "138",
			"Dingbat hex": "8A",
			"Unicode dec": "10121",
			"Unicode hex": "2789"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "139",
			"Dingbat hex": "8B",
			"Unicode dec": "127244",
			"Unicode hex": "1F10C"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "140",
			"Dingbat hex": "8C",
			"Unicode dec": "10122",
			"Unicode hex": "278A"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "141",
			"Dingbat hex": "8D",
			"Unicode dec": "10123",
			"Unicode hex": "278B"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "142",
			"Dingbat hex": "8E",
			"Unicode dec": "10124",
			"Unicode hex": "278C"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "143",
			"Dingbat hex": "8F",
			"Unicode dec": "10125",
			"Unicode hex": "278D"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "144",
			"Dingbat hex": "90",
			"Unicode dec": "10126",
			"Unicode hex": "278E"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "145",
			"Dingbat hex": "91",
			"Unicode dec": "10127",
			"Unicode hex": "278F"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "146",
			"Dingbat hex": "92",
			"Unicode dec": "10128",
			"Unicode hex": "2790"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "147",
			"Dingbat hex": "93",
			"Unicode dec": "10129",
			"Unicode hex": "2791"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "148",
			"Dingbat hex": "94",
			"Unicode dec": "10130",
			"Unicode hex": "2792"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "149",
			"Dingbat hex": "95",
			"Unicode dec": "10131",
			"Unicode hex": "2793"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "150",
			"Dingbat hex": "96",
			"Unicode dec": "128610",
			"Unicode hex": "1F662"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "151",
			"Dingbat hex": "97",
			"Unicode dec": "128608",
			"Unicode hex": "1F660"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "152",
			"Dingbat hex": "98",
			"Unicode dec": "128609",
			"Unicode hex": "1F661"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "153",
			"Dingbat hex": "99",
			"Unicode dec": "128611",
			"Unicode hex": "1F663"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "154",
			"Dingbat hex": "9A",
			"Unicode dec": "128606",
			"Unicode hex": "1F65E"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "155",
			"Dingbat hex": "9B",
			"Unicode dec": "128604",
			"Unicode hex": "1F65C"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "156",
			"Dingbat hex": "9C",
			"Unicode dec": "128605",
			"Unicode hex": "1F65D"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "157",
			"Dingbat hex": "9D",
			"Unicode dec": "128607",
			"Unicode hex": "1F65F"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "158",
			"Dingbat hex": "9E",
			"Unicode dec": "8729",
			"Unicode hex": "2219"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "159",
			"Dingbat hex": "9F",
			"Unicode dec": "8226",
			"Unicode hex": "2022"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "160",
			"Dingbat hex": "A0",
			"Unicode dec": "11037",
			"Unicode hex": "2B1D"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "161",
			"Dingbat hex": "A1",
			"Unicode dec": "11096",
			"Unicode hex": "2B58"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "162",
			"Dingbat hex": "A2",
			"Unicode dec": "128902",
			"Unicode hex": "1F786"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "163",
			"Dingbat hex": "A3",
			"Unicode dec": "128904",
			"Unicode hex": "1F788"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "164",
			"Dingbat hex": "A4",
			"Unicode dec": "128906",
			"Unicode hex": "1F78A"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "165",
			"Dingbat hex": "A5",
			"Unicode dec": "128907",
			"Unicode hex": "1F78B"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "166",
			"Dingbat hex": "A6",
			"Unicode dec": "128319",
			"Unicode hex": "1F53F"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "167",
			"Dingbat hex": "A7",
			"Unicode dec": "9642",
			"Unicode hex": "25AA"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "168",
			"Dingbat hex": "A8",
			"Unicode dec": "128910",
			"Unicode hex": "1F78E"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "169",
			"Dingbat hex": "A9",
			"Unicode dec": "128961",
			"Unicode hex": "1F7C1"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "170",
			"Dingbat hex": "AA",
			"Unicode dec": "128965",
			"Unicode hex": "1F7C5"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "171",
			"Dingbat hex": "AB",
			"Unicode dec": "9733",
			"Unicode hex": "2605"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "172",
			"Dingbat hex": "AC",
			"Unicode dec": "128971",
			"Unicode hex": "1F7CB"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "173",
			"Dingbat hex": "AD",
			"Unicode dec": "128975",
			"Unicode hex": "1F7CF"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "174",
			"Dingbat hex": "AE",
			"Unicode dec": "128979",
			"Unicode hex": "1F7D3"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "175",
			"Dingbat hex": "AF",
			"Unicode dec": "128977",
			"Unicode hex": "1F7D1"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "176",
			"Dingbat hex": "B0",
			"Unicode dec": "11216",
			"Unicode hex": "2BD0"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "177",
			"Dingbat hex": "B1",
			"Unicode dec": "8982",
			"Unicode hex": "2316"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "178",
			"Dingbat hex": "B2",
			"Unicode dec": "11214",
			"Unicode hex": "2BCE"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "179",
			"Dingbat hex": "B3",
			"Unicode dec": "11215",
			"Unicode hex": "2BCF"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "180",
			"Dingbat hex": "B4",
			"Unicode dec": "11217",
			"Unicode hex": "2BD1"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "181",
			"Dingbat hex": "B5",
			"Unicode dec": "10026",
			"Unicode hex": "272A"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "182",
			"Dingbat hex": "B6",
			"Unicode dec": "10032",
			"Unicode hex": "2730"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "183",
			"Dingbat hex": "B7",
			"Unicode dec": "128336",
			"Unicode hex": "1F550"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "184",
			"Dingbat hex": "B8",
			"Unicode dec": "128337",
			"Unicode hex": "1F551"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "185",
			"Dingbat hex": "B9",
			"Unicode dec": "128338",
			"Unicode hex": "1F552"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "186",
			"Dingbat hex": "BA",
			"Unicode dec": "128339",
			"Unicode hex": "1F553"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "187",
			"Dingbat hex": "BB",
			"Unicode dec": "128340",
			"Unicode hex": "1F554"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "188",
			"Dingbat hex": "BC",
			"Unicode dec": "128341",
			"Unicode hex": "1F555"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "189",
			"Dingbat hex": "BD",
			"Unicode dec": "128342",
			"Unicode hex": "1F556"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "190",
			"Dingbat hex": "BE",
			"Unicode dec": "128343",
			"Unicode hex": "1F557"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "191",
			"Dingbat hex": "BF",
			"Unicode dec": "128344",
			"Unicode hex": "1F558"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "192",
			"Dingbat hex": "C0",
			"Unicode dec": "128345",
			"Unicode hex": "1F559"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "193",
			"Dingbat hex": "C1",
			"Unicode dec": "128346",
			"Unicode hex": "1F55A"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "194",
			"Dingbat hex": "C2",
			"Unicode dec": "128347",
			"Unicode hex": "1F55B"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "195",
			"Dingbat hex": "C3",
			"Unicode dec": "11184",
			"Unicode hex": "2BB0"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "196",
			"Dingbat hex": "C4",
			"Unicode dec": "11185",
			"Unicode hex": "2BB1"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "197",
			"Dingbat hex": "C5",
			"Unicode dec": "11186",
			"Unicode hex": "2BB2"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "198",
			"Dingbat hex": "C6",
			"Unicode dec": "11187",
			"Unicode hex": "2BB3"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "199",
			"Dingbat hex": "C7",
			"Unicode dec": "11188",
			"Unicode hex": "2BB4"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "200",
			"Dingbat hex": "C8",
			"Unicode dec": "11189",
			"Unicode hex": "2BB5"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "201",
			"Dingbat hex": "C9",
			"Unicode dec": "11190",
			"Unicode hex": "2BB6"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "202",
			"Dingbat hex": "CA",
			"Unicode dec": "11191",
			"Unicode hex": "2BB7"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "203",
			"Dingbat hex": "CB",
			"Unicode dec": "128618",
			"Unicode hex": "1F66A"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "204",
			"Dingbat hex": "CC",
			"Unicode dec": "128619",
			"Unicode hex": "1F66B"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "205",
			"Dingbat hex": "CD",
			"Unicode dec": "128597",
			"Unicode hex": "1F655"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "206",
			"Dingbat hex": "CE",
			"Unicode dec": "128596",
			"Unicode hex": "1F654"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "207",
			"Dingbat hex": "CF",
			"Unicode dec": "128599",
			"Unicode hex": "1F657"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "208",
			"Dingbat hex": "D0",
			"Unicode dec": "128598",
			"Unicode hex": "1F656"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "209",
			"Dingbat hex": "D1",
			"Unicode dec": "128592",
			"Unicode hex": "1F650"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "210",
			"Dingbat hex": "D2",
			"Unicode dec": "128593",
			"Unicode hex": "1F651"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "211",
			"Dingbat hex": "D3",
			"Unicode dec": "128594",
			"Unicode hex": "1F652"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "212",
			"Dingbat hex": "D4",
			"Unicode dec": "128595",
			"Unicode hex": "1F653"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "213",
			"Dingbat hex": "D5",
			"Unicode dec": "9003",
			"Unicode hex": "232B"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "214",
			"Dingbat hex": "D6",
			"Unicode dec": "8998",
			"Unicode hex": "2326"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "215",
			"Dingbat hex": "D7",
			"Unicode dec": "11160",
			"Unicode hex": "2B98"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "216",
			"Dingbat hex": "D8",
			"Unicode dec": "11162",
			"Unicode hex": "2B9A"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "217",
			"Dingbat hex": "D9",
			"Unicode dec": "11161",
			"Unicode hex": "2B99"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "218",
			"Dingbat hex": "DA",
			"Unicode dec": "11163",
			"Unicode hex": "2B9B"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "219",
			"Dingbat hex": "DB",
			"Unicode dec": "11144",
			"Unicode hex": "2B88"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "220",
			"Dingbat hex": "DC",
			"Unicode dec": "11146",
			"Unicode hex": "2B8A"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "221",
			"Dingbat hex": "DD",
			"Unicode dec": "11145",
			"Unicode hex": "2B89"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "222",
			"Dingbat hex": "DE",
			"Unicode dec": "11147",
			"Unicode hex": "2B8B"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "223",
			"Dingbat hex": "DF",
			"Unicode dec": "129128",
			"Unicode hex": "1F868"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "224",
			"Dingbat hex": "E0",
			"Unicode dec": "129130",
			"Unicode hex": "1F86A"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "225",
			"Dingbat hex": "E1",
			"Unicode dec": "129129",
			"Unicode hex": "1F869"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "226",
			"Dingbat hex": "E2",
			"Unicode dec": "129131",
			"Unicode hex": "1F86B"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "227",
			"Dingbat hex": "E3",
			"Unicode dec": "129132",
			"Unicode hex": "1F86C"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "228",
			"Dingbat hex": "E4",
			"Unicode dec": "129133",
			"Unicode hex": "1F86D"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "229",
			"Dingbat hex": "E5",
			"Unicode dec": "129135",
			"Unicode hex": "1F86F"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "230",
			"Dingbat hex": "E6",
			"Unicode dec": "129134",
			"Unicode hex": "1F86E"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "231",
			"Dingbat hex": "E7",
			"Unicode dec": "129144",
			"Unicode hex": "1F878"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "232",
			"Dingbat hex": "E8",
			"Unicode dec": "129146",
			"Unicode hex": "1F87A"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "233",
			"Dingbat hex": "E9",
			"Unicode dec": "129145",
			"Unicode hex": "1F879"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "234",
			"Dingbat hex": "EA",
			"Unicode dec": "129147",
			"Unicode hex": "1F87B"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "235",
			"Dingbat hex": "EB",
			"Unicode dec": "129148",
			"Unicode hex": "1F87C"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "236",
			"Dingbat hex": "EC",
			"Unicode dec": "129149",
			"Unicode hex": "1F87D"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "237",
			"Dingbat hex": "ED",
			"Unicode dec": "129151",
			"Unicode hex": "1F87F"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "238",
			"Dingbat hex": "EE",
			"Unicode dec": "129150",
			"Unicode hex": "1F87E"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "239",
			"Dingbat hex": "EF",
			"Unicode dec": "8678",
			"Unicode hex": "21E6"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "240",
			"Dingbat hex": "F0",
			"Unicode dec": "8680",
			"Unicode hex": "21E8"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "241",
			"Dingbat hex": "F1",
			"Unicode dec": "8679",
			"Unicode hex": "21E7"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "242",
			"Dingbat hex": "F2",
			"Unicode dec": "8681",
			"Unicode hex": "21E9"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "243",
			"Dingbat hex": "F3",
			"Unicode dec": "11012",
			"Unicode hex": "2B04"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "244",
			"Dingbat hex": "F4",
			"Unicode dec": "8691",
			"Unicode hex": "21F3"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "245",
			"Dingbat hex": "F5",
			"Unicode dec": "11009",
			"Unicode hex": "2B01"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "246",
			"Dingbat hex": "F6",
			"Unicode dec": "11008",
			"Unicode hex": "2B00"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "247",
			"Dingbat hex": "F7",
			"Unicode dec": "11011",
			"Unicode hex": "2B03"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "248",
			"Dingbat hex": "F8",
			"Unicode dec": "11010",
			"Unicode hex": "2B02"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "249",
			"Dingbat hex": "F9",
			"Unicode dec": "129196",
			"Unicode hex": "1F8AC"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "250",
			"Dingbat hex": "FA",
			"Unicode dec": "129197",
			"Unicode hex": "1F8AD"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "251",
			"Dingbat hex": "FB",
			"Unicode dec": "128502",
			"Unicode hex": "1F5F6"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "252",
			"Dingbat hex": "FC",
			"Unicode dec": "10003",
			"Unicode hex": "2713"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "253",
			"Dingbat hex": "FD",
			"Unicode dec": "128503",
			"Unicode hex": "1F5F7"
		},
		{
			"Typeface name": "Wingdings",
			"Dingbat dec": "254",
			"Dingbat hex": "FE",
			"Unicode dec": "128505",
			"Unicode hex": "1F5F9"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "32",
			"Dingbat hex": "20",
			"Unicode dec": "32",
			"Unicode hex": "20"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "33",
			"Dingbat hex": "21",
			"Unicode dec": "128394",
			"Unicode hex": "1F58A"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "34",
			"Dingbat hex": "22",
			"Unicode dec": "128395",
			"Unicode hex": "1F58B"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "35",
			"Dingbat hex": "23",
			"Unicode dec": "128396",
			"Unicode hex": "1F58C"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "36",
			"Dingbat hex": "24",
			"Unicode dec": "128397",
			"Unicode hex": "1F58D"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "37",
			"Dingbat hex": "25",
			"Unicode dec": "9988",
			"Unicode hex": "2704"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "38",
			"Dingbat hex": "26",
			"Unicode dec": "9984",
			"Unicode hex": "2700"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "39",
			"Dingbat hex": "27",
			"Unicode dec": "128382",
			"Unicode hex": "1F57E"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "40",
			"Dingbat hex": "28",
			"Unicode dec": "128381",
			"Unicode hex": "1F57D"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "41",
			"Dingbat hex": "29",
			"Unicode dec": "128453",
			"Unicode hex": "1F5C5"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "42",
			"Dingbat hex": "2A",
			"Unicode dec": "128454",
			"Unicode hex": "1F5C6"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "43",
			"Dingbat hex": "2B",
			"Unicode dec": "128455",
			"Unicode hex": "1F5C7"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "44",
			"Dingbat hex": "2C",
			"Unicode dec": "128456",
			"Unicode hex": "1F5C8"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "45",
			"Dingbat hex": "2D",
			"Unicode dec": "128457",
			"Unicode hex": "1F5C9"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "46",
			"Dingbat hex": "2E",
			"Unicode dec": "128458",
			"Unicode hex": "1F5CA"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "47",
			"Dingbat hex": "2F",
			"Unicode dec": "128459",
			"Unicode hex": "1F5CB"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "48",
			"Dingbat hex": "30",
			"Unicode dec": "128460",
			"Unicode hex": "1F5CC"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "49",
			"Dingbat hex": "31",
			"Unicode dec": "128461",
			"Unicode hex": "1F5CD"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "50",
			"Dingbat hex": "32",
			"Unicode dec": "128203",
			"Unicode hex": "1F4CB"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "51",
			"Dingbat hex": "33",
			"Unicode dec": "128465",
			"Unicode hex": "1F5D1"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "52",
			"Dingbat hex": "34",
			"Unicode dec": "128468",
			"Unicode hex": "1F5D4"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "53",
			"Dingbat hex": "35",
			"Unicode dec": "128437",
			"Unicode hex": "1F5B5"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "54",
			"Dingbat hex": "36",
			"Unicode dec": "128438",
			"Unicode hex": "1F5B6"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "55",
			"Dingbat hex": "37",
			"Unicode dec": "128439",
			"Unicode hex": "1F5B7"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "56",
			"Dingbat hex": "38",
			"Unicode dec": "128440",
			"Unicode hex": "1F5B8"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "57",
			"Dingbat hex": "39",
			"Unicode dec": "128429",
			"Unicode hex": "1F5AD"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "58",
			"Dingbat hex": "3A",
			"Unicode dec": "128431",
			"Unicode hex": "1F5AF"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "59",
			"Dingbat hex": "3B",
			"Unicode dec": "128433",
			"Unicode hex": "1F5B1"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "60",
			"Dingbat hex": "3C",
			"Unicode dec": "128402",
			"Unicode hex": "1F592"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "61",
			"Dingbat hex": "3D",
			"Unicode dec": "128403",
			"Unicode hex": "1F593"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "62",
			"Dingbat hex": "3E",
			"Unicode dec": "128408",
			"Unicode hex": "1F598"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "63",
			"Dingbat hex": "3F",
			"Unicode dec": "128409",
			"Unicode hex": "1F599"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "64",
			"Dingbat hex": "40",
			"Unicode dec": "128410",
			"Unicode hex": "1F59A"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "65",
			"Dingbat hex": "41",
			"Unicode dec": "128411",
			"Unicode hex": "1F59B"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "66",
			"Dingbat hex": "42",
			"Unicode dec": "128072",
			"Unicode hex": "1F448"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "67",
			"Dingbat hex": "43",
			"Unicode dec": "128073",
			"Unicode hex": "1F449"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "68",
			"Dingbat hex": "44",
			"Unicode dec": "128412",
			"Unicode hex": "1F59C"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "69",
			"Dingbat hex": "45",
			"Unicode dec": "128413",
			"Unicode hex": "1F59D"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "70",
			"Dingbat hex": "46",
			"Unicode dec": "128414",
			"Unicode hex": "1F59E"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "71",
			"Dingbat hex": "47",
			"Unicode dec": "128415",
			"Unicode hex": "1F59F"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "72",
			"Dingbat hex": "48",
			"Unicode dec": "128416",
			"Unicode hex": "1F5A0"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "73",
			"Dingbat hex": "49",
			"Unicode dec": "128417",
			"Unicode hex": "1F5A1"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "74",
			"Dingbat hex": "4A",
			"Unicode dec": "128070",
			"Unicode hex": "1F446"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "75",
			"Dingbat hex": "4B",
			"Unicode dec": "128071",
			"Unicode hex": "1F447"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "76",
			"Dingbat hex": "4C",
			"Unicode dec": "128418",
			"Unicode hex": "1F5A2"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "77",
			"Dingbat hex": "4D",
			"Unicode dec": "128419",
			"Unicode hex": "1F5A3"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "78",
			"Dingbat hex": "4E",
			"Unicode dec": "128401",
			"Unicode hex": "1F591"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "79",
			"Dingbat hex": "4F",
			"Unicode dec": "128500",
			"Unicode hex": "1F5F4"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "80",
			"Dingbat hex": "50",
			"Unicode dec": "128504",
			"Unicode hex": "1F5F8"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "81",
			"Dingbat hex": "51",
			"Unicode dec": "128501",
			"Unicode hex": "1F5F5"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "82",
			"Dingbat hex": "52",
			"Unicode dec": "9745",
			"Unicode hex": "2611"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "83",
			"Dingbat hex": "53",
			"Unicode dec": "11197",
			"Unicode hex": "2BBD"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "84",
			"Dingbat hex": "54",
			"Unicode dec": "9746",
			"Unicode hex": "2612"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "85",
			"Dingbat hex": "55",
			"Unicode dec": "11198",
			"Unicode hex": "2BBE"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "86",
			"Dingbat hex": "56",
			"Unicode dec": "11199",
			"Unicode hex": "2BBF"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "87",
			"Dingbat hex": "57",
			"Unicode dec": "128711",
			"Unicode hex": "1F6C7"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "88",
			"Dingbat hex": "58",
			"Unicode dec": "10680",
			"Unicode hex": "29B8"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "89",
			"Dingbat hex": "59",
			"Unicode dec": "128625",
			"Unicode hex": "1F671"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "90",
			"Dingbat hex": "5A",
			"Unicode dec": "128628",
			"Unicode hex": "1F674"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "91",
			"Dingbat hex": "5B",
			"Unicode dec": "128626",
			"Unicode hex": "1F672"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "92",
			"Dingbat hex": "5C",
			"Unicode dec": "128627",
			"Unicode hex": "1F673"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "93",
			"Dingbat hex": "5D",
			"Unicode dec": "8253",
			"Unicode hex": "203D"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "94",
			"Dingbat hex": "5E",
			"Unicode dec": "128633",
			"Unicode hex": "1F679"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "95",
			"Dingbat hex": "5F",
			"Unicode dec": "128634",
			"Unicode hex": "1F67A"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "96",
			"Dingbat hex": "60",
			"Unicode dec": "128635",
			"Unicode hex": "1F67B"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "97",
			"Dingbat hex": "61",
			"Unicode dec": "128614",
			"Unicode hex": "1F666"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "98",
			"Dingbat hex": "62",
			"Unicode dec": "128612",
			"Unicode hex": "1F664"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "99",
			"Dingbat hex": "63",
			"Unicode dec": "128613",
			"Unicode hex": "1F665"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "100",
			"Dingbat hex": "64",
			"Unicode dec": "128615",
			"Unicode hex": "1F667"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "101",
			"Dingbat hex": "65",
			"Unicode dec": "128602",
			"Unicode hex": "1F65A"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "102",
			"Dingbat hex": "66",
			"Unicode dec": "128600",
			"Unicode hex": "1F658"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "103",
			"Dingbat hex": "67",
			"Unicode dec": "128601",
			"Unicode hex": "1F659"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "104",
			"Dingbat hex": "68",
			"Unicode dec": "128603",
			"Unicode hex": "1F65B"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "105",
			"Dingbat hex": "69",
			"Unicode dec": "9450",
			"Unicode hex": "24EA"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "106",
			"Dingbat hex": "6A",
			"Unicode dec": "9312",
			"Unicode hex": "2460"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "107",
			"Dingbat hex": "6B",
			"Unicode dec": "9313",
			"Unicode hex": "2461"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "108",
			"Dingbat hex": "6C",
			"Unicode dec": "9314",
			"Unicode hex": "2462"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "109",
			"Dingbat hex": "6D",
			"Unicode dec": "9315",
			"Unicode hex": "2463"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "110",
			"Dingbat hex": "6E",
			"Unicode dec": "9316",
			"Unicode hex": "2464"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "111",
			"Dingbat hex": "6F",
			"Unicode dec": "9317",
			"Unicode hex": "2465"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "112",
			"Dingbat hex": "70",
			"Unicode dec": "9318",
			"Unicode hex": "2466"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "113",
			"Dingbat hex": "71",
			"Unicode dec": "9319",
			"Unicode hex": "2467"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "114",
			"Dingbat hex": "72",
			"Unicode dec": "9320",
			"Unicode hex": "2468"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "115",
			"Dingbat hex": "73",
			"Unicode dec": "9321",
			"Unicode hex": "2469"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "116",
			"Dingbat hex": "74",
			"Unicode dec": "9471",
			"Unicode hex": "24FF"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "117",
			"Dingbat hex": "75",
			"Unicode dec": "10102",
			"Unicode hex": "2776"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "118",
			"Dingbat hex": "76",
			"Unicode dec": "10103",
			"Unicode hex": "2777"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "119",
			"Dingbat hex": "77",
			"Unicode dec": "10104",
			"Unicode hex": "2778"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "120",
			"Dingbat hex": "78",
			"Unicode dec": "10105",
			"Unicode hex": "2779"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "121",
			"Dingbat hex": "79",
			"Unicode dec": "10106",
			"Unicode hex": "277A"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "122",
			"Dingbat hex": "7A",
			"Unicode dec": "10107",
			"Unicode hex": "277B"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "123",
			"Dingbat hex": "7B",
			"Unicode dec": "10108",
			"Unicode hex": "277C"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "124",
			"Dingbat hex": "7C",
			"Unicode dec": "10109",
			"Unicode hex": "277D"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "125",
			"Dingbat hex": "7D",
			"Unicode dec": "10110",
			"Unicode hex": "277E"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "126",
			"Dingbat hex": "7E",
			"Unicode dec": "10111",
			"Unicode hex": "277F"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "128",
			"Dingbat hex": "80",
			"Unicode dec": "9737",
			"Unicode hex": "2609"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "129",
			"Dingbat hex": "81",
			"Unicode dec": "127765",
			"Unicode hex": "1F315"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "130",
			"Dingbat hex": "82",
			"Unicode dec": "9789",
			"Unicode hex": "263D"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "131",
			"Dingbat hex": "83",
			"Unicode dec": "9790",
			"Unicode hex": "263E"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "132",
			"Dingbat hex": "84",
			"Unicode dec": "11839",
			"Unicode hex": "2E3F"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "133",
			"Dingbat hex": "85",
			"Unicode dec": "10013",
			"Unicode hex": "271D"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "134",
			"Dingbat hex": "86",
			"Unicode dec": "128327",
			"Unicode hex": "1F547"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "135",
			"Dingbat hex": "87",
			"Unicode dec": "128348",
			"Unicode hex": "1F55C"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "136",
			"Dingbat hex": "88",
			"Unicode dec": "128349",
			"Unicode hex": "1F55D"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "137",
			"Dingbat hex": "89",
			"Unicode dec": "128350",
			"Unicode hex": "1F55E"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "138",
			"Dingbat hex": "8A",
			"Unicode dec": "128351",
			"Unicode hex": "1F55F"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "139",
			"Dingbat hex": "8B",
			"Unicode dec": "128352",
			"Unicode hex": "1F560"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "140",
			"Dingbat hex": "8C",
			"Unicode dec": "128353",
			"Unicode hex": "1F561"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "141",
			"Dingbat hex": "8D",
			"Unicode dec": "128354",
			"Unicode hex": "1F562"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "142",
			"Dingbat hex": "8E",
			"Unicode dec": "128355",
			"Unicode hex": "1F563"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "143",
			"Dingbat hex": "8F",
			"Unicode dec": "128356",
			"Unicode hex": "1F564"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "144",
			"Dingbat hex": "90",
			"Unicode dec": "128357",
			"Unicode hex": "1F565"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "145",
			"Dingbat hex": "91",
			"Unicode dec": "128358",
			"Unicode hex": "1F566"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "146",
			"Dingbat hex": "92",
			"Unicode dec": "128359",
			"Unicode hex": "1F567"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "147",
			"Dingbat hex": "93",
			"Unicode dec": "128616",
			"Unicode hex": "1F668"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "148",
			"Dingbat hex": "94",
			"Unicode dec": "128617",
			"Unicode hex": "1F669"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "149",
			"Dingbat hex": "95",
			"Unicode dec": "8901",
			"Unicode hex": "22C5"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "150",
			"Dingbat hex": "96",
			"Unicode dec": "128900",
			"Unicode hex": "1F784"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "151",
			"Dingbat hex": "97",
			"Unicode dec": "10625",
			"Unicode hex": "2981"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "152",
			"Dingbat hex": "98",
			"Unicode dec": "9679",
			"Unicode hex": "25CF"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "153",
			"Dingbat hex": "99",
			"Unicode dec": "9675",
			"Unicode hex": "25CB"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "154",
			"Dingbat hex": "9A",
			"Unicode dec": "128901",
			"Unicode hex": "1F785"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "155",
			"Dingbat hex": "9B",
			"Unicode dec": "128903",
			"Unicode hex": "1F787"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "156",
			"Dingbat hex": "9C",
			"Unicode dec": "128905",
			"Unicode hex": "1F789"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "157",
			"Dingbat hex": "9D",
			"Unicode dec": "8857",
			"Unicode hex": "2299"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "158",
			"Dingbat hex": "9E",
			"Unicode dec": "10687",
			"Unicode hex": "29BF"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "159",
			"Dingbat hex": "9F",
			"Unicode dec": "128908",
			"Unicode hex": "1F78C"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "160",
			"Dingbat hex": "A0",
			"Unicode dec": "128909",
			"Unicode hex": "1F78D"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "161",
			"Dingbat hex": "A1",
			"Unicode dec": "9726",
			"Unicode hex": "25FE"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "162",
			"Dingbat hex": "A2",
			"Unicode dec": "9632",
			"Unicode hex": "25A0"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "163",
			"Dingbat hex": "A3",
			"Unicode dec": "9633",
			"Unicode hex": "25A1"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "164",
			"Dingbat hex": "A4",
			"Unicode dec": "128913",
			"Unicode hex": "1F791"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "165",
			"Dingbat hex": "A5",
			"Unicode dec": "128914",
			"Unicode hex": "1F792"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "166",
			"Dingbat hex": "A6",
			"Unicode dec": "128915",
			"Unicode hex": "1F793"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "167",
			"Dingbat hex": "A7",
			"Unicode dec": "128916",
			"Unicode hex": "1F794"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "168",
			"Dingbat hex": "A8",
			"Unicode dec": "9635",
			"Unicode hex": "25A3"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "169",
			"Dingbat hex": "A9",
			"Unicode dec": "128917",
			"Unicode hex": "1F795"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "170",
			"Dingbat hex": "AA",
			"Unicode dec": "128918",
			"Unicode hex": "1F796"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "171",
			"Dingbat hex": "AB",
			"Unicode dec": "128919",
			"Unicode hex": "1F797"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "172",
			"Dingbat hex": "AC",
			"Unicode dec": "128920",
			"Unicode hex": "1F798"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "173",
			"Dingbat hex": "AD",
			"Unicode dec": "11049",
			"Unicode hex": "2B29"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "174",
			"Dingbat hex": "AE",
			"Unicode dec": "11045",
			"Unicode hex": "2B25"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "175",
			"Dingbat hex": "AF",
			"Unicode dec": "9671",
			"Unicode hex": "25C7"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "176",
			"Dingbat hex": "B0",
			"Unicode dec": "128922",
			"Unicode hex": "1F79A"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "177",
			"Dingbat hex": "B1",
			"Unicode dec": "9672",
			"Unicode hex": "25C8"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "178",
			"Dingbat hex": "B2",
			"Unicode dec": "128923",
			"Unicode hex": "1F79B"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "179",
			"Dingbat hex": "B3",
			"Unicode dec": "128924",
			"Unicode hex": "1F79C"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "180",
			"Dingbat hex": "B4",
			"Unicode dec": "128925",
			"Unicode hex": "1F79D"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "181",
			"Dingbat hex": "B5",
			"Unicode dec": "128926",
			"Unicode hex": "1F79E"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "182",
			"Dingbat hex": "B6",
			"Unicode dec": "11050",
			"Unicode hex": "2B2A"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "183",
			"Dingbat hex": "B7",
			"Unicode dec": "11047",
			"Unicode hex": "2B27"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "184",
			"Dingbat hex": "B8",
			"Unicode dec": "9674",
			"Unicode hex": "25CA"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "185",
			"Dingbat hex": "B9",
			"Unicode dec": "128928",
			"Unicode hex": "1F7A0"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "186",
			"Dingbat hex": "BA",
			"Unicode dec": "9686",
			"Unicode hex": "25D6"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "187",
			"Dingbat hex": "BB",
			"Unicode dec": "9687",
			"Unicode hex": "25D7"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "188",
			"Dingbat hex": "BC",
			"Unicode dec": "11210",
			"Unicode hex": "2BCA"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "189",
			"Dingbat hex": "BD",
			"Unicode dec": "11211",
			"Unicode hex": "2BCB"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "190",
			"Dingbat hex": "BE",
			"Unicode dec": "11200",
			"Unicode hex": "2BC0"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "191",
			"Dingbat hex": "BF",
			"Unicode dec": "11201",
			"Unicode hex": "2BC1"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "192",
			"Dingbat hex": "C0",
			"Unicode dec": "11039",
			"Unicode hex": "2B1F"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "193",
			"Dingbat hex": "C1",
			"Unicode dec": "11202",
			"Unicode hex": "2BC2"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "194",
			"Dingbat hex": "C2",
			"Unicode dec": "11043",
			"Unicode hex": "2B23"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "195",
			"Dingbat hex": "C3",
			"Unicode dec": "11042",
			"Unicode hex": "2B22"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "196",
			"Dingbat hex": "C4",
			"Unicode dec": "11203",
			"Unicode hex": "2BC3"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "197",
			"Dingbat hex": "C5",
			"Unicode dec": "11204",
			"Unicode hex": "2BC4"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "198",
			"Dingbat hex": "C6",
			"Unicode dec": "128929",
			"Unicode hex": "1F7A1"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "199",
			"Dingbat hex": "C7",
			"Unicode dec": "128930",
			"Unicode hex": "1F7A2"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "200",
			"Dingbat hex": "C8",
			"Unicode dec": "128931",
			"Unicode hex": "1F7A3"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "201",
			"Dingbat hex": "C9",
			"Unicode dec": "128932",
			"Unicode hex": "1F7A4"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "202",
			"Dingbat hex": "CA",
			"Unicode dec": "128933",
			"Unicode hex": "1F7A5"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "203",
			"Dingbat hex": "CB",
			"Unicode dec": "128934",
			"Unicode hex": "1F7A6"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "204",
			"Dingbat hex": "CC",
			"Unicode dec": "128935",
			"Unicode hex": "1F7A7"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "205",
			"Dingbat hex": "CD",
			"Unicode dec": "128936",
			"Unicode hex": "1F7A8"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "206",
			"Dingbat hex": "CE",
			"Unicode dec": "128937",
			"Unicode hex": "1F7A9"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "207",
			"Dingbat hex": "CF",
			"Unicode dec": "128938",
			"Unicode hex": "1F7AA"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "208",
			"Dingbat hex": "D0",
			"Unicode dec": "128939",
			"Unicode hex": "1F7AB"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "209",
			"Dingbat hex": "D1",
			"Unicode dec": "128940",
			"Unicode hex": "1F7AC"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "210",
			"Dingbat hex": "D2",
			"Unicode dec": "128941",
			"Unicode hex": "1F7AD"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "211",
			"Dingbat hex": "D3",
			"Unicode dec": "128942",
			"Unicode hex": "1F7AE"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "212",
			"Dingbat hex": "D4",
			"Unicode dec": "128943",
			"Unicode hex": "1F7AF"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "213",
			"Dingbat hex": "D5",
			"Unicode dec": "128944",
			"Unicode hex": "1F7B0"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "214",
			"Dingbat hex": "D6",
			"Unicode dec": "128945",
			"Unicode hex": "1F7B1"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "215",
			"Dingbat hex": "D7",
			"Unicode dec": "128946",
			"Unicode hex": "1F7B2"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "216",
			"Dingbat hex": "D8",
			"Unicode dec": "128947",
			"Unicode hex": "1F7B3"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "217",
			"Dingbat hex": "D9",
			"Unicode dec": "128948",
			"Unicode hex": "1F7B4"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "218",
			"Dingbat hex": "DA",
			"Unicode dec": "128949",
			"Unicode hex": "1F7B5"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "219",
			"Dingbat hex": "DB",
			"Unicode dec": "128950",
			"Unicode hex": "1F7B6"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "220",
			"Dingbat hex": "DC",
			"Unicode dec": "128951",
			"Unicode hex": "1F7B7"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "221",
			"Dingbat hex": "DD",
			"Unicode dec": "128952",
			"Unicode hex": "1F7B8"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "222",
			"Dingbat hex": "DE",
			"Unicode dec": "128953",
			"Unicode hex": "1F7B9"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "223",
			"Dingbat hex": "DF",
			"Unicode dec": "128954",
			"Unicode hex": "1F7BA"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "224",
			"Dingbat hex": "E0",
			"Unicode dec": "128955",
			"Unicode hex": "1F7BB"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "225",
			"Dingbat hex": "E1",
			"Unicode dec": "128956",
			"Unicode hex": "1F7BC"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "226",
			"Dingbat hex": "E2",
			"Unicode dec": "128957",
			"Unicode hex": "1F7BD"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "227",
			"Dingbat hex": "E3",
			"Unicode dec": "128958",
			"Unicode hex": "1F7BE"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "228",
			"Dingbat hex": "E4",
			"Unicode dec": "128959",
			"Unicode hex": "1F7BF"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "229",
			"Dingbat hex": "E5",
			"Unicode dec": "128960",
			"Unicode hex": "1F7C0"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "230",
			"Dingbat hex": "E6",
			"Unicode dec": "128962",
			"Unicode hex": "1F7C2"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "231",
			"Dingbat hex": "E7",
			"Unicode dec": "128964",
			"Unicode hex": "1F7C4"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "232",
			"Dingbat hex": "E8",
			"Unicode dec": "128966",
			"Unicode hex": "1F7C6"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "233",
			"Dingbat hex": "E9",
			"Unicode dec": "128969",
			"Unicode hex": "1F7C9"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "234",
			"Dingbat hex": "EA",
			"Unicode dec": "128970",
			"Unicode hex": "1F7CA"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "235",
			"Dingbat hex": "EB",
			"Unicode dec": "10038",
			"Unicode hex": "2736"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "236",
			"Dingbat hex": "EC",
			"Unicode dec": "128972",
			"Unicode hex": "1F7CC"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "237",
			"Dingbat hex": "ED",
			"Unicode dec": "128974",
			"Unicode hex": "1F7CE"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "238",
			"Dingbat hex": "EE",
			"Unicode dec": "128976",
			"Unicode hex": "1F7D0"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "239",
			"Dingbat hex": "EF",
			"Unicode dec": "128978",
			"Unicode hex": "1F7D2"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "240",
			"Dingbat hex": "F0",
			"Unicode dec": "10041",
			"Unicode hex": "2739"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "241",
			"Dingbat hex": "F1",
			"Unicode dec": "128963",
			"Unicode hex": "1F7C3"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "242",
			"Dingbat hex": "F2",
			"Unicode dec": "128967",
			"Unicode hex": "1F7C7"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "243",
			"Dingbat hex": "F3",
			"Unicode dec": "10031",
			"Unicode hex": "272F"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "244",
			"Dingbat hex": "F4",
			"Unicode dec": "128973",
			"Unicode hex": "1F7CD"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "245",
			"Dingbat hex": "F5",
			"Unicode dec": "128980",
			"Unicode hex": "1F7D4"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "246",
			"Dingbat hex": "F6",
			"Unicode dec": "11212",
			"Unicode hex": "2BCC"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "247",
			"Dingbat hex": "F7",
			"Unicode dec": "11213",
			"Unicode hex": "2BCD"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "248",
			"Dingbat hex": "F8",
			"Unicode dec": "8251",
			"Unicode hex": "203B"
		},
		{
			"Typeface name": "Wingdings 2",
			"Dingbat dec": "249",
			"Dingbat hex": "F9",
			"Unicode dec": "8258",
			"Unicode hex": "2042"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "32",
			"Dingbat hex": "20",
			"Unicode dec": "32",
			"Unicode hex": "20"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "33",
			"Dingbat hex": "21",
			"Unicode dec": "11104",
			"Unicode hex": "2B60"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "34",
			"Dingbat hex": "22",
			"Unicode dec": "11106",
			"Unicode hex": "2B62"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "35",
			"Dingbat hex": "23",
			"Unicode dec": "11105",
			"Unicode hex": "2B61"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "36",
			"Dingbat hex": "24",
			"Unicode dec": "11107",
			"Unicode hex": "2B63"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "37",
			"Dingbat hex": "25",
			"Unicode dec": "11110",
			"Unicode hex": "2B66"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "38",
			"Dingbat hex": "26",
			"Unicode dec": "11111",
			"Unicode hex": "2B67"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "39",
			"Dingbat hex": "27",
			"Unicode dec": "11113",
			"Unicode hex": "2B69"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "40",
			"Dingbat hex": "28",
			"Unicode dec": "11112",
			"Unicode hex": "2B68"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "41",
			"Dingbat hex": "29",
			"Unicode dec": "11120",
			"Unicode hex": "2B70"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "42",
			"Dingbat hex": "2A",
			"Unicode dec": "11122",
			"Unicode hex": "2B72"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "43",
			"Dingbat hex": "2B",
			"Unicode dec": "11121",
			"Unicode hex": "2B71"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "44",
			"Dingbat hex": "2C",
			"Unicode dec": "11123",
			"Unicode hex": "2B73"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "45",
			"Dingbat hex": "2D",
			"Unicode dec": "11126",
			"Unicode hex": "2B76"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "46",
			"Dingbat hex": "2E",
			"Unicode dec": "11128",
			"Unicode hex": "2B78"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "47",
			"Dingbat hex": "2F",
			"Unicode dec": "11131",
			"Unicode hex": "2B7B"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "48",
			"Dingbat hex": "30",
			"Unicode dec": "11133",
			"Unicode hex": "2B7D"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "49",
			"Dingbat hex": "31",
			"Unicode dec": "11108",
			"Unicode hex": "2B64"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "50",
			"Dingbat hex": "32",
			"Unicode dec": "11109",
			"Unicode hex": "2B65"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "51",
			"Dingbat hex": "33",
			"Unicode dec": "11114",
			"Unicode hex": "2B6A"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "52",
			"Dingbat hex": "34",
			"Unicode dec": "11116",
			"Unicode hex": "2B6C"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "53",
			"Dingbat hex": "35",
			"Unicode dec": "11115",
			"Unicode hex": "2B6B"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "54",
			"Dingbat hex": "36",
			"Unicode dec": "11117",
			"Unicode hex": "2B6D"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "55",
			"Dingbat hex": "37",
			"Unicode dec": "11085",
			"Unicode hex": "2B4D"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "56",
			"Dingbat hex": "38",
			"Unicode dec": "11168",
			"Unicode hex": "2BA0"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "57",
			"Dingbat hex": "39",
			"Unicode dec": "11169",
			"Unicode hex": "2BA1"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "58",
			"Dingbat hex": "3A",
			"Unicode dec": "11170",
			"Unicode hex": "2BA2"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "59",
			"Dingbat hex": "3B",
			"Unicode dec": "11171",
			"Unicode hex": "2BA3"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "60",
			"Dingbat hex": "3C",
			"Unicode dec": "11172",
			"Unicode hex": "2BA4"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "61",
			"Dingbat hex": "3D",
			"Unicode dec": "11173",
			"Unicode hex": "2BA5"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "62",
			"Dingbat hex": "3E",
			"Unicode dec": "11174",
			"Unicode hex": "2BA6"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "63",
			"Dingbat hex": "3F",
			"Unicode dec": "11175",
			"Unicode hex": "2BA7"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "64",
			"Dingbat hex": "40",
			"Unicode dec": "11152",
			"Unicode hex": "2B90"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "65",
			"Dingbat hex": "41",
			"Unicode dec": "11153",
			"Unicode hex": "2B91"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "66",
			"Dingbat hex": "42",
			"Unicode dec": "11154",
			"Unicode hex": "2B92"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "67",
			"Dingbat hex": "43",
			"Unicode dec": "11155",
			"Unicode hex": "2B93"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "68",
			"Dingbat hex": "44",
			"Unicode dec": "11136",
			"Unicode hex": "2B80"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "69",
			"Dingbat hex": "45",
			"Unicode dec": "11139",
			"Unicode hex": "2B83"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "70",
			"Dingbat hex": "46",
			"Unicode dec": "11134",
			"Unicode hex": "2B7E"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "71",
			"Dingbat hex": "47",
			"Unicode dec": "11135",
			"Unicode hex": "2B7F"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "72",
			"Dingbat hex": "48",
			"Unicode dec": "11140",
			"Unicode hex": "2B84"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "73",
			"Dingbat hex": "49",
			"Unicode dec": "11142",
			"Unicode hex": "2B86"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "74",
			"Dingbat hex": "4A",
			"Unicode dec": "11141",
			"Unicode hex": "2B85"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "75",
			"Dingbat hex": "4B",
			"Unicode dec": "11143",
			"Unicode hex": "2B87"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "76",
			"Dingbat hex": "4C",
			"Unicode dec": "11151",
			"Unicode hex": "2B8F"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "77",
			"Dingbat hex": "4D",
			"Unicode dec": "11149",
			"Unicode hex": "2B8D"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "78",
			"Dingbat hex": "4E",
			"Unicode dec": "11150",
			"Unicode hex": "2B8E"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "79",
			"Dingbat hex": "4F",
			"Unicode dec": "11148",
			"Unicode hex": "2B8C"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "80",
			"Dingbat hex": "50",
			"Unicode dec": "11118",
			"Unicode hex": "2B6E"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "81",
			"Dingbat hex": "51",
			"Unicode dec": "11119",
			"Unicode hex": "2B6F"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "82",
			"Dingbat hex": "52",
			"Unicode dec": "9099",
			"Unicode hex": "238B"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "83",
			"Dingbat hex": "53",
			"Unicode dec": "8996",
			"Unicode hex": "2324"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "84",
			"Dingbat hex": "54",
			"Unicode dec": "8963",
			"Unicode hex": "2303"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "85",
			"Dingbat hex": "55",
			"Unicode dec": "8997",
			"Unicode hex": "2325"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "86",
			"Dingbat hex": "56",
			"Unicode dec": "9251",
			"Unicode hex": "2423"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "87",
			"Dingbat hex": "57",
			"Unicode dec": "9085",
			"Unicode hex": "237D"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "88",
			"Dingbat hex": "58",
			"Unicode dec": "8682",
			"Unicode hex": "21EA"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "89",
			"Dingbat hex": "59",
			"Unicode dec": "11192",
			"Unicode hex": "2BB8"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "90",
			"Dingbat hex": "5A",
			"Unicode dec": "129184",
			"Unicode hex": "1F8A0"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "91",
			"Dingbat hex": "5B",
			"Unicode dec": "129185",
			"Unicode hex": "1F8A1"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "92",
			"Dingbat hex": "5C",
			"Unicode dec": "129186",
			"Unicode hex": "1F8A2"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "93",
			"Dingbat hex": "5D",
			"Unicode dec": "129187",
			"Unicode hex": "1F8A3"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "94",
			"Dingbat hex": "5E",
			"Unicode dec": "129188",
			"Unicode hex": "1F8A4"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "95",
			"Dingbat hex": "5F",
			"Unicode dec": "129189",
			"Unicode hex": "1F8A5"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "96",
			"Dingbat hex": "60",
			"Unicode dec": "129190",
			"Unicode hex": "1F8A6"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "97",
			"Dingbat hex": "61",
			"Unicode dec": "129191",
			"Unicode hex": "1F8A7"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "98",
			"Dingbat hex": "62",
			"Unicode dec": "129192",
			"Unicode hex": "1F8A8"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "99",
			"Dingbat hex": "63",
			"Unicode dec": "129193",
			"Unicode hex": "1F8A9"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "100",
			"Dingbat hex": "64",
			"Unicode dec": "129194",
			"Unicode hex": "1F8AA"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "101",
			"Dingbat hex": "65",
			"Unicode dec": "129195",
			"Unicode hex": "1F8AB"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "102",
			"Dingbat hex": "66",
			"Unicode dec": "129104",
			"Unicode hex": "1F850"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "103",
			"Dingbat hex": "67",
			"Unicode dec": "129106",
			"Unicode hex": "1F852"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "104",
			"Dingbat hex": "68",
			"Unicode dec": "129105",
			"Unicode hex": "1F851"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "105",
			"Dingbat hex": "69",
			"Unicode dec": "129107",
			"Unicode hex": "1F853"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "106",
			"Dingbat hex": "6A",
			"Unicode dec": "129108",
			"Unicode hex": "1F854"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "107",
			"Dingbat hex": "6B",
			"Unicode dec": "129109",
			"Unicode hex": "1F855"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "108",
			"Dingbat hex": "6C",
			"Unicode dec": "129111",
			"Unicode hex": "1F857"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "109",
			"Dingbat hex": "6D",
			"Unicode dec": "129110",
			"Unicode hex": "1F856"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "110",
			"Dingbat hex": "6E",
			"Unicode dec": "129112",
			"Unicode hex": "1F858"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "111",
			"Dingbat hex": "6F",
			"Unicode dec": "129113",
			"Unicode hex": "1F859"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "112",
			"Dingbat hex": "70",
			"Unicode dec": "9650",
			"Unicode hex": "25B2"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "113",
			"Dingbat hex": "71",
			"Unicode dec": "9660",
			"Unicode hex": "25BC"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "114",
			"Dingbat hex": "72",
			"Unicode dec": "9651",
			"Unicode hex": "25B3"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "115",
			"Dingbat hex": "73",
			"Unicode dec": "9661",
			"Unicode hex": "25BD"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "116",
			"Dingbat hex": "74",
			"Unicode dec": "9664",
			"Unicode hex": "25C0"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "117",
			"Dingbat hex": "75",
			"Unicode dec": "9654",
			"Unicode hex": "25B6"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "118",
			"Dingbat hex": "76",
			"Unicode dec": "9665",
			"Unicode hex": "25C1"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "119",
			"Dingbat hex": "77",
			"Unicode dec": "9655",
			"Unicode hex": "25B7"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "120",
			"Dingbat hex": "78",
			"Unicode dec": "9699",
			"Unicode hex": "25E3"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "121",
			"Dingbat hex": "79",
			"Unicode dec": "9698",
			"Unicode hex": "25E2"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "122",
			"Dingbat hex": "7A",
			"Unicode dec": "9700",
			"Unicode hex": "25E4"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "123",
			"Dingbat hex": "7B",
			"Unicode dec": "9701",
			"Unicode hex": "25E5"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "124",
			"Dingbat hex": "7C",
			"Unicode dec": "128896",
			"Unicode hex": "1F780"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "125",
			"Dingbat hex": "7D",
			"Unicode dec": "128898",
			"Unicode hex": "1F782"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "126",
			"Dingbat hex": "7E",
			"Unicode dec": "128897",
			"Unicode hex": "1F781"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "128",
			"Dingbat hex": "80",
			"Unicode dec": "128899",
			"Unicode hex": "1F783"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "129",
			"Dingbat hex": "81",
			"Unicode dec": "11205",
			"Unicode hex": "2BC5"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "130",
			"Dingbat hex": "82",
			"Unicode dec": "11206",
			"Unicode hex": "2BC6"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "131",
			"Dingbat hex": "83",
			"Unicode dec": "11207",
			"Unicode hex": "2BC7"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "132",
			"Dingbat hex": "84",
			"Unicode dec": "11208",
			"Unicode hex": "2BC8"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "133",
			"Dingbat hex": "85",
			"Unicode dec": "11164",
			"Unicode hex": "2B9C"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "134",
			"Dingbat hex": "86",
			"Unicode dec": "11166",
			"Unicode hex": "2B9E"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "135",
			"Dingbat hex": "87",
			"Unicode dec": "11165",
			"Unicode hex": "2B9D"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "136",
			"Dingbat hex": "88",
			"Unicode dec": "11167",
			"Unicode hex": "2B9F"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "137",
			"Dingbat hex": "89",
			"Unicode dec": "129040",
			"Unicode hex": "1F810"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "138",
			"Dingbat hex": "8A",
			"Unicode dec": "129042",
			"Unicode hex": "1F812"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "139",
			"Dingbat hex": "8B",
			"Unicode dec": "129041",
			"Unicode hex": "1F811"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "140",
			"Dingbat hex": "8C",
			"Unicode dec": "129043",
			"Unicode hex": "1F813"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "141",
			"Dingbat hex": "8D",
			"Unicode dec": "129044",
			"Unicode hex": "1F814"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "142",
			"Dingbat hex": "8E",
			"Unicode dec": "129046",
			"Unicode hex": "1F816"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "143",
			"Dingbat hex": "8F",
			"Unicode dec": "129045",
			"Unicode hex": "1F815"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "144",
			"Dingbat hex": "90",
			"Unicode dec": "129047",
			"Unicode hex": "1F817"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "145",
			"Dingbat hex": "91",
			"Unicode dec": "129048",
			"Unicode hex": "1F818"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "146",
			"Dingbat hex": "92",
			"Unicode dec": "129050",
			"Unicode hex": "1F81A"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "147",
			"Dingbat hex": "93",
			"Unicode dec": "129049",
			"Unicode hex": "1F819"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "148",
			"Dingbat hex": "94",
			"Unicode dec": "129051",
			"Unicode hex": "1F81B"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "149",
			"Dingbat hex": "95",
			"Unicode dec": "129052",
			"Unicode hex": "1F81C"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "150",
			"Dingbat hex": "96",
			"Unicode dec": "129054",
			"Unicode hex": "1F81E"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "151",
			"Dingbat hex": "97",
			"Unicode dec": "129053",
			"Unicode hex": "1F81D"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "152",
			"Dingbat hex": "98",
			"Unicode dec": "129055",
			"Unicode hex": "1F81F"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "153",
			"Dingbat hex": "99",
			"Unicode dec": "129024",
			"Unicode hex": "1F800"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "154",
			"Dingbat hex": "9A",
			"Unicode dec": "129026",
			"Unicode hex": "1F802"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "155",
			"Dingbat hex": "9B",
			"Unicode dec": "129025",
			"Unicode hex": "1F801"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "156",
			"Dingbat hex": "9C",
			"Unicode dec": "129027",
			"Unicode hex": "1F803"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "157",
			"Dingbat hex": "9D",
			"Unicode dec": "129028",
			"Unicode hex": "1F804"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "158",
			"Dingbat hex": "9E",
			"Unicode dec": "129030",
			"Unicode hex": "1F806"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "159",
			"Dingbat hex": "9F",
			"Unicode dec": "129029",
			"Unicode hex": "1F805"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "160",
			"Dingbat hex": "A0",
			"Unicode dec": "129031",
			"Unicode hex": "1F807"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "161",
			"Dingbat hex": "A1",
			"Unicode dec": "129032",
			"Unicode hex": "1F808"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "162",
			"Dingbat hex": "A2",
			"Unicode dec": "129034",
			"Unicode hex": "1F80A"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "163",
			"Dingbat hex": "A3",
			"Unicode dec": "129033",
			"Unicode hex": "1F809"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "164",
			"Dingbat hex": "A4",
			"Unicode dec": "129035",
			"Unicode hex": "1F80B"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "165",
			"Dingbat hex": "A5",
			"Unicode dec": "129056",
			"Unicode hex": "1F820"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "166",
			"Dingbat hex": "A6",
			"Unicode dec": "129058",
			"Unicode hex": "1F822"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "167",
			"Dingbat hex": "A7",
			"Unicode dec": "129060",
			"Unicode hex": "1F824"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "168",
			"Dingbat hex": "A8",
			"Unicode dec": "129062",
			"Unicode hex": "1F826"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "169",
			"Dingbat hex": "A9",
			"Unicode dec": "129064",
			"Unicode hex": "1F828"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "170",
			"Dingbat hex": "AA",
			"Unicode dec": "129066",
			"Unicode hex": "1F82A"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "171",
			"Dingbat hex": "AB",
			"Unicode dec": "129068",
			"Unicode hex": "1F82C"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "172",
			"Dingbat hex": "AC",
			"Unicode dec": "129180",
			"Unicode hex": "1F89C"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "173",
			"Dingbat hex": "AD",
			"Unicode dec": "129181",
			"Unicode hex": "1F89D"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "174",
			"Dingbat hex": "AE",
			"Unicode dec": "129182",
			"Unicode hex": "1F89E"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "175",
			"Dingbat hex": "AF",
			"Unicode dec": "129183",
			"Unicode hex": "1F89F"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "176",
			"Dingbat hex": "B0",
			"Unicode dec": "129070",
			"Unicode hex": "1F82E"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "177",
			"Dingbat hex": "B1",
			"Unicode dec": "129072",
			"Unicode hex": "1F830"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "178",
			"Dingbat hex": "B2",
			"Unicode dec": "129074",
			"Unicode hex": "1F832"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "179",
			"Dingbat hex": "B3",
			"Unicode dec": "129076",
			"Unicode hex": "1F834"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "180",
			"Dingbat hex": "B4",
			"Unicode dec": "129078",
			"Unicode hex": "1F836"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "181",
			"Dingbat hex": "B5",
			"Unicode dec": "129080",
			"Unicode hex": "1F838"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "182",
			"Dingbat hex": "B6",
			"Unicode dec": "129082",
			"Unicode hex": "1F83A"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "183",
			"Dingbat hex": "B7",
			"Unicode dec": "129081",
			"Unicode hex": "1F839"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "184",
			"Dingbat hex": "B8",
			"Unicode dec": "129083",
			"Unicode hex": "1F83B"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "185",
			"Dingbat hex": "B9",
			"Unicode dec": "129176",
			"Unicode hex": "1F898"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "186",
			"Dingbat hex": "BA",
			"Unicode dec": "129178",
			"Unicode hex": "1F89A"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "187",
			"Dingbat hex": "BB",
			"Unicode dec": "129177",
			"Unicode hex": "1F899"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "188",
			"Dingbat hex": "BC",
			"Unicode dec": "129179",
			"Unicode hex": "1F89B"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "189",
			"Dingbat hex": "BD",
			"Unicode dec": "129084",
			"Unicode hex": "1F83C"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "190",
			"Dingbat hex": "BE",
			"Unicode dec": "129086",
			"Unicode hex": "1F83E"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "191",
			"Dingbat hex": "BF",
			"Unicode dec": "129085",
			"Unicode hex": "1F83D"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "192",
			"Dingbat hex": "C0",
			"Unicode dec": "129087",
			"Unicode hex": "1F83F"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "193",
			"Dingbat hex": "C1",
			"Unicode dec": "129088",
			"Unicode hex": "1F840"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "194",
			"Dingbat hex": "C2",
			"Unicode dec": "129090",
			"Unicode hex": "1F842"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "195",
			"Dingbat hex": "C3",
			"Unicode dec": "129089",
			"Unicode hex": "1F841"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "196",
			"Dingbat hex": "C4",
			"Unicode dec": "129091",
			"Unicode hex": "1F843"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "197",
			"Dingbat hex": "C5",
			"Unicode dec": "129092",
			"Unicode hex": "1F844"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "198",
			"Dingbat hex": "C6",
			"Unicode dec": "129094",
			"Unicode hex": "1F846"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "199",
			"Dingbat hex": "C7",
			"Unicode dec": "129093",
			"Unicode hex": "1F845"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "200",
			"Dingbat hex": "C8",
			"Unicode dec": "129095",
			"Unicode hex": "1F847"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "201",
			"Dingbat hex": "C9",
			"Unicode dec": "11176",
			"Unicode hex": "2BA8"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "202",
			"Dingbat hex": "CA",
			"Unicode dec": "11177",
			"Unicode hex": "2BA9"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "203",
			"Dingbat hex": "CB",
			"Unicode dec": "11178",
			"Unicode hex": "2BAA"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "204",
			"Dingbat hex": "CC",
			"Unicode dec": "11179",
			"Unicode hex": "2BAB"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "205",
			"Dingbat hex": "CD",
			"Unicode dec": "11180",
			"Unicode hex": "2BAC"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "206",
			"Dingbat hex": "CE",
			"Unicode dec": "11181",
			"Unicode hex": "2BAD"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "207",
			"Dingbat hex": "CF",
			"Unicode dec": "11182",
			"Unicode hex": "2BAE"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "208",
			"Dingbat hex": "D0",
			"Unicode dec": "11183",
			"Unicode hex": "2BAF"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "209",
			"Dingbat hex": "D1",
			"Unicode dec": "129120",
			"Unicode hex": "1F860"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "210",
			"Dingbat hex": "D2",
			"Unicode dec": "129122",
			"Unicode hex": "1F862"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "211",
			"Dingbat hex": "D3",
			"Unicode dec": "129121",
			"Unicode hex": "1F861"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "212",
			"Dingbat hex": "D4",
			"Unicode dec": "129123",
			"Unicode hex": "1F863"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "213",
			"Dingbat hex": "D5",
			"Unicode dec": "129124",
			"Unicode hex": "1F864"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "214",
			"Dingbat hex": "D6",
			"Unicode dec": "129125",
			"Unicode hex": "1F865"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "215",
			"Dingbat hex": "D7",
			"Unicode dec": "129127",
			"Unicode hex": "1F867"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "216",
			"Dingbat hex": "D8",
			"Unicode dec": "129126",
			"Unicode hex": "1F866"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "217",
			"Dingbat hex": "D9",
			"Unicode dec": "129136",
			"Unicode hex": "1F870"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "218",
			"Dingbat hex": "DA",
			"Unicode dec": "129138",
			"Unicode hex": "1F872"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "219",
			"Dingbat hex": "DB",
			"Unicode dec": "129137",
			"Unicode hex": "1F871"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "220",
			"Dingbat hex": "DC",
			"Unicode dec": "129139",
			"Unicode hex": "1F873"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "221",
			"Dingbat hex": "DD",
			"Unicode dec": "129140",
			"Unicode hex": "1F874"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "222",
			"Dingbat hex": "DE",
			"Unicode dec": "129141",
			"Unicode hex": "1F875"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "223",
			"Dingbat hex": "DF",
			"Unicode dec": "129143",
			"Unicode hex": "1F877"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "224",
			"Dingbat hex": "E0",
			"Unicode dec": "129142",
			"Unicode hex": "1F876"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "225",
			"Dingbat hex": "E1",
			"Unicode dec": "129152",
			"Unicode hex": "1F880"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "226",
			"Dingbat hex": "E2",
			"Unicode dec": "129154",
			"Unicode hex": "1F882"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "227",
			"Dingbat hex": "E3",
			"Unicode dec": "129153",
			"Unicode hex": "1F881"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "228",
			"Dingbat hex": "E4",
			"Unicode dec": "129155",
			"Unicode hex": "1F883"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "229",
			"Dingbat hex": "E5",
			"Unicode dec": "129156",
			"Unicode hex": "1F884"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "230",
			"Dingbat hex": "E6",
			"Unicode dec": "129157",
			"Unicode hex": "1F885"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "231",
			"Dingbat hex": "E7",
			"Unicode dec": "129159",
			"Unicode hex": "1F887"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "232",
			"Dingbat hex": "E8",
			"Unicode dec": "129158",
			"Unicode hex": "1F886"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "233",
			"Dingbat hex": "E9",
			"Unicode dec": "129168",
			"Unicode hex": "1F890"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "234",
			"Dingbat hex": "EA",
			"Unicode dec": "129170",
			"Unicode hex": "1F892"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "235",
			"Dingbat hex": "EB",
			"Unicode dec": "129169",
			"Unicode hex": "1F891"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "236",
			"Dingbat hex": "EC",
			"Unicode dec": "129171",
			"Unicode hex": "1F893"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "237",
			"Dingbat hex": "ED",
			"Unicode dec": "129172",
			"Unicode hex": "1F894"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "238",
			"Dingbat hex": "EE",
			"Unicode dec": "129174",
			"Unicode hex": "1F896"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "239",
			"Dingbat hex": "EF",
			"Unicode dec": "129173",
			"Unicode hex": "1F895"
		},
		{
			"Typeface name": "Wingdings 3",
			"Dingbat dec": "240",
			"Dingbat hex": "F0",
			"Unicode dec": "129175",
			"Unicode hex": "1F897"
		}
	];
	exports.default = dingbats;
}) });

//#endregion
//#region node_modules/dingbat-to-unicode/dist/index.js
var require_dist = /* @__PURE__ */ __commonJS({ "node_modules/dingbat-to-unicode/dist/index.js": ((exports) => {
	var __importDefault = exports && exports.__importDefault || function(mod) {
		return mod && mod.__esModule ? mod : { "default": mod };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var dingbats_1 = __importDefault(require_dingbats());
	var dingbatsByCodePoint = {};
	var fromCodePoint = String.fromCodePoint ? String.fromCodePoint : fromCodePointPolyfill;
	for (var _i = 0, dingbats_2 = dingbats_1.default; _i < dingbats_2.length; _i++) {
		var dingbat = dingbats_2[_i];
		var codePoint_1 = parseInt(dingbat["Unicode dec"], 10);
		var scalarValue = {
			codePoint: codePoint_1,
			string: fromCodePoint(codePoint_1)
		};
		dingbatsByCodePoint[dingbat["Typeface name"].toUpperCase() + "_" + dingbat["Dingbat dec"]] = scalarValue;
	}
	function codePoint(typeface, codePoint$1) {
		return dingbatsByCodePoint[typeface.toUpperCase() + "_" + codePoint$1];
	}
	exports.codePoint = codePoint;
	function dec(typeface, dec$1) {
		return codePoint(typeface, parseInt(dec$1, 10));
	}
	exports.dec = dec;
	function hex(typeface, hex$1) {
		return codePoint(typeface, parseInt(hex$1, 16));
	}
	exports.hex = hex;
	function fromCodePointPolyfill(codePoint$1) {
		if (codePoint$1 <= 65535) return String.fromCharCode(codePoint$1);
		else {
			var highSurrogate = Math.floor((codePoint$1 - 65536) / 1024) + 55296;
			var lowSurrogate = (codePoint$1 - 65536) % 1024 + 56320;
			return String.fromCharCode(highSurrogate, lowSurrogate);
		}
	}
}) });

//#endregion
//#region node_modules/mammoth/lib/transforms.js
var require_transforms = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/lib/transforms.js": ((exports) => {
	var _$13 = (init_index_all(), __toCommonJS(index_all_exports));
	exports.paragraph = paragraph$1;
	exports.run = run$1;
	exports._elements = elements$1;
	exports._elementsOfType = elementsOfType;
	exports.getDescendantsOfType = getDescendantsOfType;
	exports.getDescendants = getDescendants;
	function paragraph$1(transform) {
		return elementsOfType("paragraph", transform);
	}
	function run$1(transform) {
		return elementsOfType("run", transform);
	}
	function elementsOfType(elementType, transform) {
		return elements$1(function(element$2) {
			if (element$2.type === elementType) return transform(element$2);
			else return element$2;
		});
	}
	function elements$1(transform) {
		return function transformElement(element$2) {
			if (element$2.children) {
				var children = _$13.map(element$2.children, transformElement);
				element$2 = _$13.extend(element$2, { children });
			}
			return transform(element$2);
		};
	}
	function getDescendantsOfType(element$2, type) {
		return getDescendants(element$2).filter(function(descendant) {
			return descendant.type === type;
		});
	}
	function getDescendants(element$2) {
		var descendants = [];
		visitDescendants(element$2, function(descendant) {
			descendants.push(descendant);
		});
		return descendants;
	}
	function visitDescendants(element$2, visit) {
		if (element$2.children) element$2.children.forEach(function(child) {
			visitDescendants(child, visit);
			visit(child);
		});
	}
}) });

//#endregion
//#region node_modules/mammoth/lib/docx/uris.js
var require_uris = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/lib/docx/uris.js": ((exports) => {
	exports.uriToZipEntryName = uriToZipEntryName;
	exports.replaceFragment = replaceFragment;
	function uriToZipEntryName(base, uri) {
		if (uri.charAt(0) === "/") return uri.substr(1);
		else return base + "/" + uri;
	}
	function replaceFragment(uri, fragment) {
		var hashIndex = uri.indexOf("#");
		if (hashIndex !== -1) uri = uri.substring(0, hashIndex);
		return uri + "#" + fragment;
	}
}) });

//#endregion
//#region node_modules/mammoth/lib/docx/body-reader.js
var require_body_reader = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/lib/docx/body-reader.js": ((exports) => {
	exports.createBodyReader = createBodyReader$1;
	exports._readNumberingProperties = readNumberingProperties;
	var dingbatToUnicode = require_dist();
	var _$12 = (init_index_all(), __toCommonJS(index_all_exports));
	var documents$6 = require_documents();
	var Result$6 = require_results().Result;
	var warning = require_results().warning;
	var xml$1 = require_xml();
	var transforms = require_transforms();
	var uris = require_uris();
	function createBodyReader$1(options$1) {
		return {
			readXmlElement: function(element$2) {
				return new BodyReader(options$1).readXmlElement(element$2);
			},
			readXmlElements: function(elements$2) {
				return new BodyReader(options$1).readXmlElements(elements$2);
			}
		};
	}
	function BodyReader(options$1) {
		var complexFieldStack = [];
		var currentInstrText = [];
		var deletedParagraphContents = [];
		var relationships = options$1.relationships;
		var contentTypes$1 = options$1.contentTypes;
		var docxFile = options$1.docxFile;
		var files = options$1.files;
		var numbering = options$1.numbering;
		var styles = options$1.styles;
		function readXmlElements(elements$2) {
			var results$4 = elements$2.map(readXmlElement);
			return combineResults(results$4);
		}
		function readXmlElement(element$2) {
			if (element$2.type === "element") {
				var handler = xmlElementReaders[element$2.name];
				if (handler) return handler(element$2);
				else if (!Object.prototype.hasOwnProperty.call(ignoreElements, element$2.name)) {
					var message = warning("An unrecognised element was ignored: " + element$2.name);
					return emptyResultWithMessages([message]);
				}
			}
			return emptyResult();
		}
		function readParagraphProperties(element$2) {
			return readParagraphStyle(element$2).map(function(style) {
				return {
					type: "paragraphProperties",
					styleId: style.styleId,
					styleName: style.name,
					alignment: element$2.firstOrEmpty("w:jc").attributes["w:val"],
					numbering: readNumberingProperties(style.styleId, element$2.firstOrEmpty("w:numPr"), numbering),
					indent: readParagraphIndent(element$2.firstOrEmpty("w:ind"))
				};
			});
		}
		function readParagraphIndent(element$2) {
			return {
				start: element$2.attributes["w:start"] || element$2.attributes["w:left"],
				end: element$2.attributes["w:end"] || element$2.attributes["w:right"],
				firstLine: element$2.attributes["w:firstLine"],
				hanging: element$2.attributes["w:hanging"]
			};
		}
		function readRunProperties(element$2) {
			return readRunStyle(element$2).map(function(style) {
				var fontSizeString = element$2.firstOrEmpty("w:sz").attributes["w:val"];
				var fontSize = /^[0-9]+$/.test(fontSizeString) ? parseInt(fontSizeString, 10) / 2 : null;
				return {
					type: "runProperties",
					styleId: style.styleId,
					styleName: style.name,
					verticalAlignment: element$2.firstOrEmpty("w:vertAlign").attributes["w:val"],
					font: element$2.firstOrEmpty("w:rFonts").attributes["w:ascii"],
					fontSize,
					isBold: readBooleanElement(element$2.first("w:b")),
					isUnderline: readUnderline(element$2.first("w:u")),
					isItalic: readBooleanElement(element$2.first("w:i")),
					isStrikethrough: readBooleanElement(element$2.first("w:strike")),
					isAllCaps: readBooleanElement(element$2.first("w:caps")),
					isSmallCaps: readBooleanElement(element$2.first("w:smallCaps")),
					highlight: readHighlightValue(element$2.firstOrEmpty("w:highlight").attributes["w:val"])
				};
			});
		}
		function readUnderline(element$2) {
			if (element$2) {
				var value = element$2.attributes["w:val"];
				return value !== void 0 && value !== "false" && value !== "0" && value !== "none";
			} else return false;
		}
		function readBooleanElement(element$2) {
			if (element$2) {
				var value = element$2.attributes["w:val"];
				return value !== "false" && value !== "0";
			} else return false;
		}
		function readBooleanAttributeValue(value) {
			return value !== "false" && value !== "0";
		}
		function readHighlightValue(value) {
			if (!value || value === "none") return null;
			else return value;
		}
		function readParagraphStyle(element$2) {
			return readStyle$2(element$2, "w:pStyle", "Paragraph", styles.findParagraphStyleById);
		}
		function readRunStyle(element$2) {
			return readStyle$2(element$2, "w:rStyle", "Run", styles.findCharacterStyleById);
		}
		function readTableStyle(element$2) {
			return readStyle$2(element$2, "w:tblStyle", "Table", styles.findTableStyleById);
		}
		function readStyle$2(element$2, styleTagName, styleType, findStyleById) {
			var messages = [];
			var styleElement = element$2.first(styleTagName);
			var styleId = null;
			var name = null;
			if (styleElement) {
				styleId = styleElement.attributes["w:val"];
				if (styleId) {
					var style = findStyleById(styleId);
					if (style) name = style.name;
					else messages.push(undefinedStyleWarning(styleType, styleId));
				}
			}
			return elementResultWithMessages({
				styleId,
				name
			}, messages);
		}
		function readFldChar(element$2) {
			var type = element$2.attributes["w:fldCharType"];
			if (type === "begin") {
				complexFieldStack.push({
					type: "begin",
					fldChar: element$2
				});
				currentInstrText = [];
			} else if (type === "end") {
				var complexFieldEnd = complexFieldStack.pop();
				if (complexFieldEnd.type === "begin") complexFieldEnd = parseCurrentInstrText(complexFieldEnd);
				if (complexFieldEnd.type === "checkbox") return elementResult(documents$6.checkbox({ checked: complexFieldEnd.checked }));
			} else if (type === "separate") {
				var complexFieldSeparate = complexFieldStack.pop();
				var complexField = parseCurrentInstrText(complexFieldSeparate);
				complexFieldStack.push(complexField);
			}
			return emptyResult();
		}
		function currentHyperlinkOptions() {
			var topHyperlink = _$12.last(complexFieldStack.filter(function(complexField) {
				return complexField.type === "hyperlink";
			}));
			return topHyperlink ? topHyperlink.options : null;
		}
		function parseCurrentInstrText(complexField) {
			return parseInstrText(currentInstrText.join(""), complexField.type === "begin" ? complexField.fldChar : xml$1.emptyElement);
		}
		function parseInstrText(instrText, fldChar) {
			var externalLinkResult = /\s*HYPERLINK "(.*)"/.exec(instrText);
			if (externalLinkResult) return {
				type: "hyperlink",
				options: { href: externalLinkResult[1] }
			};
			var internalLinkResult = /\s*HYPERLINK\s+\\l\s+"(.*)"/.exec(instrText);
			if (internalLinkResult) return {
				type: "hyperlink",
				options: { anchor: internalLinkResult[1] }
			};
			if (/\s*FORMCHECKBOX\s*/.exec(instrText)) {
				var checkboxElement = fldChar.firstOrEmpty("w:ffData").firstOrEmpty("w:checkBox");
				var checkedElement = checkboxElement.first("w:checked");
				return {
					type: "checkbox",
					checked: checkedElement == null ? readBooleanElement(checkboxElement.first("w:default")) : readBooleanElement(checkedElement)
				};
			}
			return { type: "unknown" };
		}
		function readInstrText(element$2) {
			currentInstrText.push(element$2.text());
			return emptyResult();
		}
		function readSymbol(element$2) {
			var font = element$2.attributes["w:font"];
			var char = element$2.attributes["w:char"];
			var unicodeCharacter = dingbatToUnicode.hex(font, char);
			if (unicodeCharacter == null && /^F0..$/.test(char)) unicodeCharacter = dingbatToUnicode.hex(font, char.substring(2));
			if (unicodeCharacter == null) return emptyResultWithMessages([warning("A w:sym element with an unsupported character was ignored: char " + char + " in font " + font)]);
			else return elementResult(new documents$6.Text(unicodeCharacter.string));
		}
		function noteReferenceReader(noteType) {
			return function(element$2) {
				var noteId = element$2.attributes["w:id"];
				return elementResult(new documents$6.NoteReference({
					noteType,
					noteId
				}));
			};
		}
		function readCommentReference(element$2) {
			return elementResult(documents$6.commentReference({ commentId: element$2.attributes["w:id"] }));
		}
		function readChildElements(element$2) {
			return readXmlElements(element$2.children);
		}
		var xmlElementReaders = {
			"w:p": function(element$2) {
				var paragraphPropertiesElement = element$2.firstOrEmpty("w:pPr");
				if (!!paragraphPropertiesElement.firstOrEmpty("w:rPr").first("w:del")) {
					element$2.children.forEach(function(child) {
						deletedParagraphContents.push(child);
					});
					return emptyResult();
				} else {
					var childrenXml = element$2.children;
					if (deletedParagraphContents.length > 0) {
						childrenXml = deletedParagraphContents.concat(childrenXml);
						deletedParagraphContents = [];
					}
					return ReadResult.map(readParagraphProperties(paragraphPropertiesElement), readXmlElements(childrenXml), function(properties, children) {
						return new documents$6.Paragraph(children, properties);
					}).insertExtra();
				}
			},
			"w:r": function(element$2) {
				return ReadResult.map(readRunProperties(element$2.firstOrEmpty("w:rPr")), readXmlElements(element$2.children), function(properties, children) {
					var hyperlinkOptions = currentHyperlinkOptions();
					if (hyperlinkOptions !== null) children = [new documents$6.Hyperlink(children, hyperlinkOptions)];
					return new documents$6.Run(children, properties);
				});
			},
			"w:fldChar": readFldChar,
			"w:instrText": readInstrText,
			"w:t": function(element$2) {
				return elementResult(new documents$6.Text(element$2.text()));
			},
			"w:tab": function(element$2) {
				return elementResult(new documents$6.Tab());
			},
			"w:noBreakHyphen": function() {
				return elementResult(new documents$6.Text("‑"));
			},
			"w:softHyphen": function(element$2) {
				return elementResult(new documents$6.Text("­"));
			},
			"w:sym": readSymbol,
			"w:hyperlink": function(element$2) {
				var relationshipId = element$2.attributes["r:id"];
				var anchor = element$2.attributes["w:anchor"];
				return readXmlElements(element$2.children).map(function(children) {
					function create$1(options$2) {
						var targetFrame = element$2.attributes["w:tgtFrame"] || null;
						return new documents$6.Hyperlink(children, _$12.extend({ targetFrame }, options$2));
					}
					if (relationshipId) {
						var href = relationships.findTargetByRelationshipId(relationshipId);
						if (anchor) href = uris.replaceFragment(href, anchor);
						return create$1({ href });
					} else if (anchor) return create$1({ anchor });
					else return children;
				});
			},
			"w:tbl": readTable,
			"w:tr": readTableRow,
			"w:tc": readTableCell,
			"w:footnoteReference": noteReferenceReader("footnote"),
			"w:endnoteReference": noteReferenceReader("endnote"),
			"w:commentReference": readCommentReference,
			"w:br": function(element$2) {
				var breakType = element$2.attributes["w:type"];
				if (breakType == null || breakType === "textWrapping") return elementResult(documents$6.lineBreak);
				else if (breakType === "page") return elementResult(documents$6.pageBreak);
				else if (breakType === "column") return elementResult(documents$6.columnBreak);
				else return emptyResultWithMessages([warning("Unsupported break type: " + breakType)]);
			},
			"w:bookmarkStart": function(element$2) {
				var name = element$2.attributes["w:name"];
				if (name === "_GoBack") return emptyResult();
				else return elementResult(new documents$6.BookmarkStart({ name }));
			},
			"mc:AlternateContent": function(element$2) {
				return readChildElements(element$2.firstOrEmpty("mc:Fallback"));
			},
			"w:sdt": function(element$2) {
				return readXmlElements(element$2.firstOrEmpty("w:sdtContent").children).map(function(content) {
					var checkbox = element$2.firstOrEmpty("w:sdtPr").first("wordml:checkbox");
					if (checkbox) {
						var checkedElement = checkbox.first("wordml:checked");
						var isChecked = !!checkedElement && readBooleanAttributeValue(checkedElement.attributes["wordml:val"]);
						var documentCheckbox = documents$6.checkbox({ checked: isChecked });
						var hasCheckbox = false;
						var replacedContent = content.map(transforms._elementsOfType(documents$6.types.text, function(text$1) {
							if (text$1.value.length > 0 && !hasCheckbox) {
								hasCheckbox = true;
								return documentCheckbox;
							} else return text$1;
						}));
						if (hasCheckbox) return replacedContent;
						else return documentCheckbox;
					} else return content;
				});
			},
			"w:ins": readChildElements,
			"w:object": readChildElements,
			"w:smartTag": readChildElements,
			"w:drawing": readChildElements,
			"w:pict": function(element$2) {
				return readChildElements(element$2).toExtra();
			},
			"v:roundrect": readChildElements,
			"v:shape": readChildElements,
			"v:textbox": readChildElements,
			"w:txbxContent": readChildElements,
			"wp:inline": readDrawingElement,
			"wp:anchor": readDrawingElement,
			"v:imagedata": readImageData,
			"v:group": readChildElements,
			"v:rect": readChildElements
		};
		return {
			readXmlElement,
			readXmlElements
		};
		function readTable(element$2) {
			var propertiesResult = readTableProperties(element$2.firstOrEmpty("w:tblPr"));
			return readXmlElements(element$2.children).flatMap(calculateRowSpans).flatMap(function(children) {
				return propertiesResult.map(function(properties) {
					return documents$6.Table(children, properties);
				});
			});
		}
		function readTableProperties(element$2) {
			return readTableStyle(element$2).map(function(style) {
				return {
					styleId: style.styleId,
					styleName: style.name
				};
			});
		}
		function readTableRow(element$2) {
			var properties = element$2.firstOrEmpty("w:trPr");
			if (!!properties.first("w:del")) return emptyResult();
			var isHeader = !!properties.first("w:tblHeader");
			return readXmlElements(element$2.children).map(function(children) {
				return documents$6.TableRow(children, { isHeader });
			});
		}
		function readTableCell(element$2) {
			return readXmlElements(element$2.children).map(function(children) {
				var properties = element$2.firstOrEmpty("w:tcPr");
				var gridSpan = properties.firstOrEmpty("w:gridSpan").attributes["w:val"];
				var colSpan = gridSpan ? parseInt(gridSpan, 10) : 1;
				var cell = documents$6.TableCell(children, { colSpan });
				cell._vMerge = readVMerge(properties);
				return cell;
			});
		}
		function readVMerge(properties) {
			var element$2 = properties.first("w:vMerge");
			if (element$2) {
				var val = element$2.attributes["w:val"];
				return val === "continue" || !val;
			} else return null;
		}
		function calculateRowSpans(rows) {
			if (_$12.any(rows, function(row) {
				return row.type !== documents$6.types.tableRow;
			})) {
				removeVMergeProperties(rows);
				return elementResultWithMessages(rows, [warning("unexpected non-row element in table, cell merging may be incorrect")]);
			}
			if (_$12.any(rows, function(row) {
				return _$12.any(row.children, function(cell) {
					return cell.type !== documents$6.types.tableCell;
				});
			})) {
				removeVMergeProperties(rows);
				return elementResultWithMessages(rows, [warning("unexpected non-cell element in table row, cell merging may be incorrect")]);
			}
			var columns = {};
			rows.forEach(function(row) {
				var cellIndex = 0;
				row.children.forEach(function(cell) {
					if (cell._vMerge && columns[cellIndex]) columns[cellIndex].rowSpan++;
					else {
						columns[cellIndex] = cell;
						cell._vMerge = false;
					}
					cellIndex += cell.colSpan;
				});
			});
			rows.forEach(function(row) {
				row.children = row.children.filter(function(cell) {
					return !cell._vMerge;
				});
				row.children.forEach(function(cell) {
					delete cell._vMerge;
				});
			});
			return elementResult(rows);
		}
		function removeVMergeProperties(rows) {
			rows.forEach(function(row) {
				transforms.getDescendantsOfType(row, documents$6.types.tableCell).forEach(function(cell) {
					delete cell._vMerge;
				});
			});
		}
		function readDrawingElement(element$2) {
			var blips = element$2.getElementsByTagName("a:graphic").getElementsByTagName("a:graphicData").getElementsByTagName("pic:pic").getElementsByTagName("pic:blipFill").getElementsByTagName("a:blip");
			return combineResults(blips.map(readBlip.bind(null, element$2)));
		}
		function readBlip(element$2, blip) {
			var properties = element$2.first("wp:docPr").attributes;
			var altText = isBlank(properties.descr) ? properties.title : properties.descr;
			var blipImageFile = findBlipImageFile(blip);
			if (blipImageFile === null) return emptyResultWithMessages([warning("Could not find image file for a:blip element")]);
			else return readImage(blipImageFile, altText);
		}
		function isBlank(value) {
			return value == null || /^\s*$/.test(value);
		}
		function findBlipImageFile(blip) {
			var embedRelationshipId = blip.attributes["r:embed"];
			var linkRelationshipId = blip.attributes["r:link"];
			if (embedRelationshipId) return findEmbeddedImageFile(embedRelationshipId);
			else if (linkRelationshipId) {
				var imagePath = relationships.findTargetByRelationshipId(linkRelationshipId);
				return {
					path: imagePath,
					read: files.read.bind(files, imagePath)
				};
			} else return null;
		}
		function readImageData(element$2) {
			var relationshipId = element$2.attributes["r:id"];
			if (relationshipId) return readImage(findEmbeddedImageFile(relationshipId), element$2.attributes["o:title"]);
			else return emptyResultWithMessages([warning("A v:imagedata element without a relationship ID was ignored")]);
		}
		function findEmbeddedImageFile(relationshipId) {
			var path = uris.uriToZipEntryName("word", relationships.findTargetByRelationshipId(relationshipId));
			return {
				path,
				read: docxFile.read.bind(docxFile, path)
			};
		}
		function readImage(imageFile, altText) {
			var contentType = contentTypes$1.findContentType(imageFile.path);
			var image = documents$6.Image({
				readImage: imageFile.read,
				altText,
				contentType
			});
			var warnings = supportedImageTypes[contentType] ? [] : warning("Image of type " + contentType + " is unlikely to display in web browsers");
			return elementResultWithMessages(image, warnings);
		}
		function undefinedStyleWarning(type, styleId) {
			return warning(type + " style with ID " + styleId + " was referenced but not defined in the document");
		}
	}
	function readNumberingProperties(styleId, element$2, numbering) {
		var level$1 = element$2.firstOrEmpty("w:ilvl").attributes["w:val"];
		var numId = element$2.firstOrEmpty("w:numId").attributes["w:val"];
		if (level$1 !== void 0 && numId !== void 0) return numbering.findLevel(numId, level$1);
		if (styleId != null) {
			var levelByStyleId = numbering.findLevelByParagraphStyleId(styleId);
			if (levelByStyleId != null) return levelByStyleId;
		}
		if (numId !== void 0) return numbering.findLevel(numId, "0");
		return null;
	}
	var supportedImageTypes = {
		"image/png": true,
		"image/gif": true,
		"image/jpeg": true,
		"image/svg+xml": true,
		"image/tiff": true
	};
	var ignoreElements = {
		"office-word:wrap": true,
		"v:shadow": true,
		"v:shapetype": true,
		"w:annotationRef": true,
		"w:bookmarkEnd": true,
		"w:sectPr": true,
		"w:proofErr": true,
		"w:lastRenderedPageBreak": true,
		"w:commentRangeStart": true,
		"w:commentRangeEnd": true,
		"w:del": true,
		"w:footnoteRef": true,
		"w:endnoteRef": true,
		"w:pPr": true,
		"w:rPr": true,
		"w:tblPr": true,
		"w:tblGrid": true,
		"w:trPr": true,
		"w:tcPr": true
	};
	function emptyResultWithMessages(messages) {
		return new ReadResult(null, null, messages);
	}
	function emptyResult() {
		return new ReadResult(null);
	}
	function elementResult(element$2) {
		return new ReadResult(element$2);
	}
	function elementResultWithMessages(element$2, messages) {
		return new ReadResult(element$2, null, messages);
	}
	function ReadResult(element$2, extra, messages) {
		this.value = element$2 || [];
		this.extra = extra || [];
		this._result = new Result$6({
			element: this.value,
			extra
		}, messages);
		this.messages = this._result.messages;
	}
	ReadResult.prototype.toExtra = function() {
		return new ReadResult(null, joinElements(this.extra, this.value), this.messages);
	};
	ReadResult.prototype.insertExtra = function() {
		var extra = this.extra;
		if (extra && extra.length) return new ReadResult(joinElements(this.value, extra), null, this.messages);
		else return this;
	};
	ReadResult.prototype.map = function(func) {
		var result$1 = this._result.map(function(value) {
			return func(value.element);
		});
		return new ReadResult(result$1.value, this.extra, result$1.messages);
	};
	ReadResult.prototype.flatMap = function(func) {
		var result$1 = this._result.flatMap(function(value) {
			return func(value.element)._result;
		});
		return new ReadResult(result$1.value.element, joinElements(this.extra, result$1.value.extra), result$1.messages);
	};
	ReadResult.map = function(first$1, second, func) {
		return new ReadResult(func(first$1.value, second.value), joinElements(first$1.extra, second.extra), first$1.messages.concat(second.messages));
	};
	function combineResults(results$4) {
		var result$1 = Result$6.combine(_$12.pluck(results$4, "_result"));
		return new ReadResult(_$12.flatten(_$12.pluck(result$1.value, "element")), _$12.filter(_$12.flatten(_$12.pluck(result$1.value, "extra")), identity$2), result$1.messages);
	}
	function joinElements(first$1, second) {
		return _$12.flatten([first$1, second]);
	}
	function identity$2(value) {
		return value;
	}
}) });

//#endregion
//#region node_modules/mammoth/lib/docx/document-xml-reader.js
var require_document_xml_reader = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/lib/docx/document-xml-reader.js": ((exports) => {
	exports.DocumentXmlReader = DocumentXmlReader$1;
	var documents$5 = require_documents();
	var Result$5 = require_results().Result;
	function DocumentXmlReader$1(options$1) {
		var bodyReader = options$1.bodyReader;
		function convertXmlToDocument(element$2) {
			var body = element$2.first("w:body");
			if (body == null) throw new Error("Could not find the body element: are you sure this is a docx file?");
			var result$1 = bodyReader.readXmlElements(body.children).map(function(children) {
				return new documents$5.Document(children, {
					notes: options$1.notes,
					comments: options$1.comments
				});
			});
			return new Result$5(result$1.value, result$1.messages);
		}
		return { convertXmlToDocument };
	}
}) });

//#endregion
//#region node_modules/mammoth/lib/docx/relationships-reader.js
var require_relationships_reader = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/lib/docx/relationships-reader.js": ((exports) => {
	exports.readRelationships = readRelationships;
	exports.defaultValue = new Relationships([]);
	exports.Relationships = Relationships;
	function readRelationships(element$2) {
		var relationships = [];
		element$2.children.forEach(function(child) {
			if (child.name === "relationships:Relationship") {
				var relationship = {
					relationshipId: child.attributes.Id,
					target: child.attributes.Target,
					type: child.attributes.Type
				};
				relationships.push(relationship);
			}
		});
		return new Relationships(relationships);
	}
	function Relationships(relationships) {
		var targetsByRelationshipId = {};
		relationships.forEach(function(relationship) {
			targetsByRelationshipId[relationship.relationshipId] = relationship.target;
		});
		var targetsByType = {};
		relationships.forEach(function(relationship) {
			if (!targetsByType[relationship.type]) targetsByType[relationship.type] = [];
			targetsByType[relationship.type].push(relationship.target);
		});
		return {
			findTargetByRelationshipId: function(relationshipId) {
				return targetsByRelationshipId[relationshipId];
			},
			findTargetsByType: function(type) {
				return targetsByType[type] || [];
			}
		};
	}
}) });

//#endregion
//#region node_modules/mammoth/lib/docx/content-types-reader.js
var require_content_types_reader = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/lib/docx/content-types-reader.js": ((exports) => {
	exports.readContentTypesFromXml = readContentTypesFromXml;
	var fallbackContentTypes = {
		"png": "png",
		"gif": "gif",
		"jpeg": "jpeg",
		"jpg": "jpeg",
		"tif": "tiff",
		"tiff": "tiff",
		"bmp": "bmp"
	};
	exports.defaultContentTypes = contentTypes({}, {});
	function readContentTypesFromXml(element$2) {
		var extensionDefaults = {};
		var overrides = {};
		element$2.children.forEach(function(child) {
			if (child.name === "content-types:Default") extensionDefaults[child.attributes.Extension] = child.attributes.ContentType;
			if (child.name === "content-types:Override") {
				var name = child.attributes.PartName;
				if (name.charAt(0) === "/") name = name.substring(1);
				overrides[name] = child.attributes.ContentType;
			}
		});
		return contentTypes(overrides, extensionDefaults);
	}
	function contentTypes(overrides, extensionDefaults) {
		return { findContentType: function(path) {
			var overrideContentType = overrides[path];
			if (overrideContentType) return overrideContentType;
			else {
				var pathParts = path.split(".");
				var extension = pathParts[pathParts.length - 1];
				if (extensionDefaults.hasOwnProperty(extension)) return extensionDefaults[extension];
				else {
					var fallback = fallbackContentTypes[extension.toLowerCase()];
					if (fallback) return "image/" + fallback;
					else return null;
				}
			}
		} };
	}
}) });

//#endregion
//#region node_modules/mammoth/lib/docx/numbering-xml.js
var require_numbering_xml = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/lib/docx/numbering-xml.js": ((exports) => {
	var _$11 = (init_index_all(), __toCommonJS(index_all_exports));
	exports.readNumberingXml = readNumberingXml;
	exports.Numbering = Numbering;
	exports.defaultNumbering = new Numbering({}, {});
	function Numbering(nums, abstractNums, styles) {
		var allLevels = _$11.flatten(_$11.values(abstractNums).map(function(abstractNum) {
			return _$11.values(abstractNum.levels);
		}));
		var levelsByParagraphStyleId = _$11.indexBy(allLevels.filter(function(level$1) {
			return level$1.paragraphStyleId != null;
		}), "paragraphStyleId");
		function findLevel(numId, level$1) {
			var num = nums[numId];
			if (num) {
				var abstractNum = abstractNums[num.abstractNumId];
				if (!abstractNum) return null;
				else if (abstractNum.numStyleLink == null) return abstractNums[num.abstractNumId].levels[level$1];
				else {
					var style = styles.findNumberingStyleById(abstractNum.numStyleLink);
					return findLevel(style.numId, level$1);
				}
			} else return null;
		}
		function findLevelByParagraphStyleId(styleId) {
			return levelsByParagraphStyleId[styleId] || null;
		}
		return {
			findLevel,
			findLevelByParagraphStyleId
		};
	}
	function readNumberingXml(root$1, options$1) {
		if (!options$1 || !options$1.styles) throw new Error("styles is missing");
		var abstractNums = readAbstractNums(root$1);
		var nums = readNums(root$1, abstractNums);
		return new Numbering(nums, abstractNums, options$1.styles);
	}
	function readAbstractNums(root$1) {
		var abstractNums = {};
		root$1.getElementsByTagName("w:abstractNum").forEach(function(element$2) {
			var id = element$2.attributes["w:abstractNumId"];
			abstractNums[id] = readAbstractNum(element$2);
		});
		return abstractNums;
	}
	function readAbstractNum(element$2) {
		var levels = {};
		var levelWithoutIndex = null;
		element$2.getElementsByTagName("w:lvl").forEach(function(levelElement) {
			var levelIndex = levelElement.attributes["w:ilvl"];
			var isOrdered = levelElement.firstOrEmpty("w:numFmt").attributes["w:val"] !== "bullet";
			var paragraphStyleId = levelElement.firstOrEmpty("w:pStyle").attributes["w:val"];
			if (levelIndex === void 0) levelWithoutIndex = {
				isOrdered,
				level: "0",
				paragraphStyleId
			};
			else levels[levelIndex] = {
				isOrdered,
				level: levelIndex,
				paragraphStyleId
			};
		});
		if (levelWithoutIndex !== null && levels[levelWithoutIndex.level] === void 0) levels[levelWithoutIndex.level] = levelWithoutIndex;
		var numStyleLink = element$2.firstOrEmpty("w:numStyleLink").attributes["w:val"];
		return {
			levels,
			numStyleLink
		};
	}
	function readNums(root$1) {
		var nums = {};
		root$1.getElementsByTagName("w:num").forEach(function(element$2) {
			var numId = element$2.attributes["w:numId"];
			nums[numId] = { abstractNumId: element$2.first("w:abstractNumId").attributes["w:val"] };
		});
		return nums;
	}
}) });

//#endregion
//#region node_modules/mammoth/lib/docx/styles-reader.js
var require_styles_reader = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/lib/docx/styles-reader.js": ((exports) => {
	exports.readStylesXml = readStylesXml;
	exports.Styles = Styles;
	exports.defaultStyles = new Styles({}, {});
	function Styles(paragraphStyles, characterStyles, tableStyles, numberingStyles) {
		return {
			findParagraphStyleById: function(styleId) {
				return paragraphStyles[styleId];
			},
			findCharacterStyleById: function(styleId) {
				return characterStyles[styleId];
			},
			findTableStyleById: function(styleId) {
				return tableStyles[styleId];
			},
			findNumberingStyleById: function(styleId) {
				return numberingStyles[styleId];
			}
		};
	}
	Styles.EMPTY = new Styles({}, {}, {}, {});
	function readStylesXml(root$1) {
		var paragraphStyles = {};
		var characterStyles = {};
		var tableStyles = {};
		var numberingStyles = {};
		var styles = {
			"paragraph": paragraphStyles,
			"character": characterStyles,
			"table": tableStyles,
			"numbering": numberingStyles
		};
		root$1.getElementsByTagName("w:style").forEach(function(styleElement) {
			var style = readStyleElement(styleElement);
			var styleSet = styles[style.type];
			if (styleSet && styleSet[style.styleId] === void 0) styleSet[style.styleId] = style;
		});
		return new Styles(paragraphStyles, characterStyles, tableStyles, numberingStyles);
	}
	function readStyleElement(styleElement) {
		var type = styleElement.attributes["w:type"];
		if (type === "numbering") return readNumberingStyleElement(type, styleElement);
		else {
			var styleId = readStyleId(styleElement);
			var name = styleName(styleElement);
			return {
				type,
				styleId,
				name
			};
		}
	}
	function styleName(styleElement) {
		var nameElement = styleElement.first("w:name");
		return nameElement ? nameElement.attributes["w:val"] : null;
	}
	function readNumberingStyleElement(type, styleElement) {
		var styleId = readStyleId(styleElement);
		var numId = styleElement.firstOrEmpty("w:pPr").firstOrEmpty("w:numPr").firstOrEmpty("w:numId").attributes["w:val"];
		return {
			type,
			numId,
			styleId
		};
	}
	function readStyleId(styleElement) {
		return styleElement.attributes["w:styleId"];
	}
}) });

//#endregion
//#region node_modules/mammoth/lib/docx/notes-reader.js
var require_notes_reader = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/lib/docx/notes-reader.js": ((exports) => {
	var documents$4 = require_documents();
	var Result$4 = require_results().Result;
	exports.createFootnotesReader = createReader.bind(exports, "footnote");
	exports.createEndnotesReader = createReader.bind(exports, "endnote");
	function createReader(noteType, bodyReader) {
		function readNotesXml(element$2) {
			return Result$4.combine(element$2.getElementsByTagName("w:" + noteType).filter(isFootnoteElement).map(readFootnoteElement));
		}
		function isFootnoteElement(element$2) {
			var type = element$2.attributes["w:type"];
			return type !== "continuationSeparator" && type !== "separator";
		}
		function readFootnoteElement(footnoteElement) {
			var id = footnoteElement.attributes["w:id"];
			return bodyReader.readXmlElements(footnoteElement.children).map(function(body) {
				return documents$4.Note({
					noteType,
					noteId: id,
					body
				});
			});
		}
		return readNotesXml;
	}
}) });

//#endregion
//#region node_modules/mammoth/lib/docx/comments-reader.js
var require_comments_reader = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/lib/docx/comments-reader.js": ((exports) => {
	var documents$3 = require_documents();
	var Result$3 = require_results().Result;
	function createCommentsReader(bodyReader) {
		function readCommentsXml(element$2) {
			return Result$3.combine(element$2.getElementsByTagName("w:comment").map(readCommentElement));
		}
		function readCommentElement(element$2) {
			var id = element$2.attributes["w:id"];
			function readOptionalAttribute(name) {
				return (element$2.attributes[name] || "").trim() || null;
			}
			return bodyReader.readXmlElements(element$2.children).map(function(body) {
				return documents$3.comment({
					commentId: id,
					body,
					authorName: readOptionalAttribute("w:author"),
					authorInitials: readOptionalAttribute("w:initials")
				});
			});
		}
		return readCommentsXml;
	}
	exports.createCommentsReader = createCommentsReader;
}) });

//#endregion
//#region node_modules/mammoth/browser/docx/files.js
var require_files = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/browser/docx/files.js": ((exports) => {
	var promises$5 = require_promises();
	exports.Files = Files$1;
	function Files$1() {
		function read$2(uri) {
			return promises$5.reject(/* @__PURE__ */ new Error("could not open external image: '" + uri + "'\ncannot open linked files from a web browser"));
		}
		return { read: read$2 };
	}
}) });

//#endregion
//#region node_modules/mammoth/lib/docx/docx-reader.js
var require_docx_reader = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/lib/docx/docx-reader.js": ((exports) => {
	exports.read = read;
	exports._findPartPaths = findPartPaths;
	var promises$4 = require_promises();
	var documents$2 = require_documents();
	var Result$2 = require_results().Result;
	var zipfile$1 = require_zipfile();
	var readXmlFromZipFile = require_office_xml_reader().readXmlFromZipFile;
	var createBodyReader = require_body_reader().createBodyReader;
	var DocumentXmlReader = require_document_xml_reader().DocumentXmlReader;
	var relationshipsReader = require_relationships_reader();
	var contentTypesReader = require_content_types_reader();
	var numberingXml = require_numbering_xml();
	var stylesReader = require_styles_reader();
	var notesReader = require_notes_reader();
	var commentsReader = require_comments_reader();
	var Files = require_files().Files;
	function read(docxFile, input, options$1) {
		input = input || {};
		options$1 = options$1 || {};
		var files = new Files({
			externalFileAccess: options$1.externalFileAccess,
			relativeToFile: input.path
		});
		return promises$4.props({
			contentTypes: readContentTypesFromZipFile(docxFile),
			partPaths: findPartPaths(docxFile),
			docxFile,
			files
		}).also(function(result$1) {
			return { styles: readStylesFromZipFile(docxFile, result$1.partPaths.styles) };
		}).also(function(result$1) {
			return { numbering: readNumberingFromZipFile(docxFile, result$1.partPaths.numbering, result$1.styles) };
		}).also(function(result$1) {
			return {
				footnotes: readXmlFileWithBody(result$1.partPaths.footnotes, result$1, function(bodyReader, xml$3) {
					if (xml$3) return notesReader.createFootnotesReader(bodyReader)(xml$3);
					else return new Result$2([]);
				}),
				endnotes: readXmlFileWithBody(result$1.partPaths.endnotes, result$1, function(bodyReader, xml$3) {
					if (xml$3) return notesReader.createEndnotesReader(bodyReader)(xml$3);
					else return new Result$2([]);
				}),
				comments: readXmlFileWithBody(result$1.partPaths.comments, result$1, function(bodyReader, xml$3) {
					if (xml$3) return commentsReader.createCommentsReader(bodyReader)(xml$3);
					else return new Result$2([]);
				})
			};
		}).also(function(result$1) {
			return { notes: result$1.footnotes.flatMap(function(footnotes) {
				return result$1.endnotes.map(function(endnotes) {
					return new documents$2.Notes(footnotes.concat(endnotes));
				});
			}) };
		}).then(function(result$1) {
			return readXmlFileWithBody(result$1.partPaths.mainDocument, result$1, function(bodyReader, xml$3) {
				return result$1.notes.flatMap(function(notes) {
					return result$1.comments.flatMap(function(comments) {
						return new DocumentXmlReader({
							bodyReader,
							notes,
							comments
						}).convertXmlToDocument(xml$3);
					});
				});
			});
		});
	}
	function findPartPaths(docxFile) {
		return readPackageRelationships(docxFile).then(function(packageRelationships) {
			var mainDocumentPath = findPartPath({
				docxFile,
				relationships: packageRelationships,
				relationshipType: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument",
				basePath: "",
				fallbackPath: "word/document.xml"
			});
			if (!docxFile.exists(mainDocumentPath)) throw new Error("Could not find main document part. Are you sure this is a valid .docx file?");
			return xmlFileReader({
				filename: relationshipsFilename(mainDocumentPath),
				readElement: relationshipsReader.readRelationships,
				defaultValue: relationshipsReader.defaultValue
			})(docxFile).then(function(documentRelationships) {
				function findPartRelatedToMainDocument(name) {
					return findPartPath({
						docxFile,
						relationships: documentRelationships,
						relationshipType: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/" + name,
						basePath: zipfile$1.splitPath(mainDocumentPath).dirname,
						fallbackPath: "word/" + name + ".xml"
					});
				}
				return {
					mainDocument: mainDocumentPath,
					comments: findPartRelatedToMainDocument("comments"),
					endnotes: findPartRelatedToMainDocument("endnotes"),
					footnotes: findPartRelatedToMainDocument("footnotes"),
					numbering: findPartRelatedToMainDocument("numbering"),
					styles: findPartRelatedToMainDocument("styles")
				};
			});
		});
	}
	function findPartPath(options$1) {
		var docxFile = options$1.docxFile;
		var relationships = options$1.relationships;
		var relationshipType = options$1.relationshipType;
		var basePath = options$1.basePath;
		var fallbackPath = options$1.fallbackPath;
		var validTargets = relationships.findTargetsByType(relationshipType).map(function(target) {
			return stripPrefix(zipfile$1.joinPath(basePath, target), "/");
		}).filter(function(target) {
			return docxFile.exists(target);
		});
		if (validTargets.length === 0) return fallbackPath;
		else return validTargets[0];
	}
	function stripPrefix(value, prefix) {
		if (value.substring(0, prefix.length) === prefix) return value.substring(prefix.length);
		else return value;
	}
	function xmlFileReader(options$1) {
		return function(zipFile) {
			return readXmlFromZipFile(zipFile, options$1.filename).then(function(element$2) {
				return element$2 ? options$1.readElement(element$2) : options$1.defaultValue;
			});
		};
	}
	function readXmlFileWithBody(filename, options$1, func) {
		return xmlFileReader({
			filename: relationshipsFilename(filename),
			readElement: relationshipsReader.readRelationships,
			defaultValue: relationshipsReader.defaultValue
		})(options$1.docxFile).then(function(relationships) {
			var bodyReader = new createBodyReader({
				relationships,
				contentTypes: options$1.contentTypes,
				docxFile: options$1.docxFile,
				numbering: options$1.numbering,
				styles: options$1.styles,
				files: options$1.files
			});
			return readXmlFromZipFile(options$1.docxFile, filename).then(function(xml$3) {
				return func(bodyReader, xml$3);
			});
		});
	}
	function relationshipsFilename(filename) {
		var split$1 = zipfile$1.splitPath(filename);
		return zipfile$1.joinPath(split$1.dirname, "_rels", split$1.basename + ".rels");
	}
	var readContentTypesFromZipFile = xmlFileReader({
		filename: "[Content_Types].xml",
		readElement: contentTypesReader.readContentTypesFromXml,
		defaultValue: contentTypesReader.defaultContentTypes
	});
	function readNumberingFromZipFile(zipFile, path, styles) {
		return xmlFileReader({
			filename: path,
			readElement: function(element$2) {
				return numberingXml.readNumberingXml(element$2, { styles });
			},
			defaultValue: numberingXml.defaultNumbering
		})(zipFile);
	}
	function readStylesFromZipFile(zipFile, path) {
		return xmlFileReader({
			filename: path,
			readElement: stylesReader.readStylesXml,
			defaultValue: stylesReader.defaultStyles
		})(zipFile);
	}
	var readPackageRelationships = xmlFileReader({
		filename: "_rels/.rels",
		readElement: relationshipsReader.readRelationships,
		defaultValue: relationshipsReader.defaultValue
	});
}) });

//#endregion
//#region node_modules/mammoth/lib/docx/style-map.js
var require_style_map = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/lib/docx/style-map.js": ((exports) => {
	var _$10 = (init_index_all(), __toCommonJS(index_all_exports));
	var promises$3 = require_promises();
	var xml = require_xml();
	exports.writeStyleMap = writeStyleMap;
	exports.readStyleMap = readStyleMap$1;
	var schema = "http://schemas.zwobble.org/mammoth/style-map";
	var styleMapPath = "mammoth/style-map";
	var styleMapAbsolutePath = "/" + styleMapPath;
	function writeStyleMap(docxFile, styleMap) {
		docxFile.write(styleMapPath, styleMap);
		return updateRelationships(docxFile).then(function() {
			return updateContentTypes(docxFile);
		});
	}
	function updateRelationships(docxFile) {
		var path = "word/_rels/document.xml.rels";
		var relationshipsUri = "http://schemas.openxmlformats.org/package/2006/relationships";
		var relationshipElementName = "{" + relationshipsUri + "}Relationship";
		return docxFile.read(path, "utf8").then(xml.readString).then(function(relationshipsContainer) {
			var relationships = relationshipsContainer.children;
			addOrUpdateElement(relationships, relationshipElementName, "Id", {
				"Id": "rMammothStyleMap",
				"Type": schema,
				"Target": styleMapAbsolutePath
			});
			var namespaces = { "": relationshipsUri };
			return docxFile.write(path, xml.writeString(relationshipsContainer, namespaces));
		});
	}
	function updateContentTypes(docxFile) {
		var path = "[Content_Types].xml";
		var contentTypesUri = "http://schemas.openxmlformats.org/package/2006/content-types";
		var overrideName = "{" + contentTypesUri + "}Override";
		return docxFile.read(path, "utf8").then(xml.readString).then(function(typesElement) {
			var children = typesElement.children;
			addOrUpdateElement(children, overrideName, "PartName", {
				"PartName": styleMapAbsolutePath,
				"ContentType": "text/prs.mammoth.style-map"
			});
			var namespaces = { "": contentTypesUri };
			return docxFile.write(path, xml.writeString(typesElement, namespaces));
		});
	}
	function addOrUpdateElement(elements$2, name, identifyingAttribute, attributes) {
		var existingElement = _$10.find(elements$2, function(element$2) {
			return element$2.name === name && element$2.attributes[identifyingAttribute] === attributes[identifyingAttribute];
		});
		if (existingElement) existingElement.attributes = attributes;
		else elements$2.push(xml.element(name, attributes));
	}
	function readStyleMap$1(docxFile) {
		if (docxFile.exists(styleMapPath)) return docxFile.read(styleMapPath, "utf8");
		else return promises$3.resolve(null);
	}
}) });

//#endregion
//#region node_modules/mammoth/lib/html/ast.js
var require_ast = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/lib/html/ast.js": ((exports) => {
	var htmlPaths$3 = require_html_paths();
	function nonFreshElement(tagName, attributes, children) {
		return elementWithTag(htmlPaths$3.element(tagName, attributes, { fresh: false }), children);
	}
	function freshElement(tagName, attributes, children) {
		var tag = htmlPaths$3.element(tagName, attributes, { fresh: true });
		return elementWithTag(tag, children);
	}
	function elementWithTag(tag, children) {
		return {
			type: "element",
			tag,
			children: children || []
		};
	}
	function text(value) {
		return {
			type: "text",
			value
		};
	}
	var forceWrite = { type: "forceWrite" };
	exports.freshElement = freshElement;
	exports.nonFreshElement = nonFreshElement;
	exports.elementWithTag = elementWithTag;
	exports.text = text;
	exports.forceWrite = forceWrite;
	var voidTagNames = {
		"br": true,
		"hr": true,
		"img": true,
		"input": true
	};
	function isVoidElement(node) {
		return node.children.length === 0 && voidTagNames[node.tag.tagName];
	}
	exports.isVoidElement = isVoidElement;
}) });

//#endregion
//#region node_modules/mammoth/lib/html/simplify.js
var require_simplify = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/lib/html/simplify.js": ((exports, module) => {
	var _$9 = (init_index_all(), __toCommonJS(index_all_exports));
	var ast$1 = require_ast();
	function simplify(nodes$2) {
		return collapse(removeEmpty(nodes$2));
	}
	function collapse(nodes$2) {
		var children = [];
		nodes$2.map(collapseNode).forEach(function(child) {
			appendChild(children, child);
		});
		return children;
	}
	function collapseNode(node) {
		return collapsers[node.type](node);
	}
	var collapsers = {
		element: collapseElement,
		text: identity$1,
		forceWrite: identity$1
	};
	function collapseElement(node) {
		return ast$1.elementWithTag(node.tag, collapse(node.children));
	}
	function identity$1(value) {
		return value;
	}
	function appendChild(children, child) {
		var lastChild = children[children.length - 1];
		if (child.type === "element" && !child.tag.fresh && lastChild && lastChild.type === "element" && child.tag.matchesElement(lastChild.tag)) {
			if (child.tag.separator) appendChild(lastChild.children, ast$1.text(child.tag.separator));
			child.children.forEach(function(grandChild) {
				appendChild(lastChild.children, grandChild);
			});
		} else children.push(child);
	}
	function removeEmpty(nodes$2) {
		return flatMap$1(nodes$2, function(node) {
			return emptiers[node.type](node);
		});
	}
	function flatMap$1(values$1, func) {
		return _$9.flatten(_$9.map(values$1, func), true);
	}
	var emptiers = {
		element: elementEmptier,
		text: textEmptier,
		forceWrite: neverEmpty
	};
	function neverEmpty(node) {
		return [node];
	}
	function elementEmptier(element$2) {
		var children = removeEmpty(element$2.children);
		if (children.length === 0 && !ast$1.isVoidElement(element$2)) return [];
		else return [ast$1.elementWithTag(element$2.tag, children)];
	}
	function textEmptier(node) {
		if (node.value.length === 0) return [];
		else return [node];
	}
	module.exports = simplify;
}) });

//#endregion
//#region node_modules/mammoth/lib/html/index.js
var require_html = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/lib/html/index.js": ((exports) => {
	var ast = require_ast();
	exports.freshElement = ast.freshElement;
	exports.nonFreshElement = ast.nonFreshElement;
	exports.elementWithTag = ast.elementWithTag;
	exports.text = ast.text;
	exports.forceWrite = ast.forceWrite;
	exports.simplify = require_simplify();
	function write(writer$2, nodes$2) {
		nodes$2.forEach(function(node) {
			writeNode(writer$2, node);
		});
	}
	function writeNode(writer$2, node) {
		toStrings[node.type](writer$2, node);
	}
	var toStrings = {
		element: generateElementString,
		text: generateTextString,
		forceWrite: function() {}
	};
	function generateElementString(writer$2, node) {
		if (ast.isVoidElement(node)) writer$2.selfClosing(node.tag.tagName, node.tag.attributes);
		else {
			writer$2.open(node.tag.tagName, node.tag.attributes);
			write(writer$2, node.children);
			writer$2.close(node.tag.tagName);
		}
	}
	function generateTextString(writer$2, node) {
		writer$2.text(node.value);
	}
	exports.write = write;
}) });

//#endregion
//#region node_modules/mammoth/lib/styles/html-paths.js
var require_html_paths = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/lib/styles/html-paths.js": ((exports) => {
	var _$8 = (init_index_all(), __toCommonJS(index_all_exports));
	var html = require_html();
	exports.topLevelElement = topLevelElement;
	exports.elements = elements;
	exports.element = element$1;
	function topLevelElement(tagName, attributes) {
		return elements([element$1(tagName, attributes, { fresh: true })]);
	}
	function elements(elementStyles) {
		return new HtmlPath(elementStyles.map(function(elementStyle) {
			if (_$8.isString(elementStyle)) return element$1(elementStyle);
			else return elementStyle;
		}));
	}
	function HtmlPath(elements$2) {
		this._elements = elements$2;
	}
	HtmlPath.prototype.wrap = function wrap$1(children) {
		var result$1 = children();
		for (var index = this._elements.length - 1; index >= 0; index--) result$1 = this._elements[index].wrapNodes(result$1);
		return result$1;
	};
	function element$1(tagName, attributes, options$1) {
		options$1 = options$1 || {};
		return new Element(tagName, attributes, options$1);
	}
	function Element(tagName, attributes, options$1) {
		var tagNames = {};
		if (_$8.isArray(tagName)) {
			tagName.forEach(function(tagName$1) {
				tagNames[tagName$1] = true;
			});
			tagName = tagName[0];
		} else tagNames[tagName] = true;
		this.tagName = tagName;
		this.tagNames = tagNames;
		this.attributes = attributes || {};
		this.fresh = options$1.fresh;
		this.separator = options$1.separator;
	}
	Element.prototype.matchesElement = function(element$2) {
		return this.tagNames[element$2.tagName] && _$8.isEqual(this.attributes || {}, element$2.attributes || {});
	};
	Element.prototype.wrap = function wrap$1(generateNodes) {
		return this.wrapNodes(generateNodes());
	};
	Element.prototype.wrapNodes = function wrapNodes(nodes$2) {
		return [html.elementWithTag(this, nodes$2)];
	};
	exports.empty = elements([]);
	exports.ignore = { wrap: function() {
		return [];
	} };
}) });

//#endregion
//#region node_modules/mammoth/lib/images.js
var require_images = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/lib/images.js": ((exports) => {
	var _$7 = (init_index_all(), __toCommonJS(index_all_exports));
	var promises$2 = require_promises();
	var Html$2 = require_html();
	exports.imgElement = imgElement;
	function imgElement(func) {
		return function(element$2, messages) {
			return promises$2.when(func(element$2)).then(function(result$1) {
				var attributes = {};
				if (element$2.altText) attributes.alt = element$2.altText;
				_$7.extend(attributes, result$1);
				return [Html$2.freshElement("img", attributes)];
			});
		};
	}
	exports.inline = exports.imgElement;
	exports.dataUri = imgElement(function(element$2) {
		return element$2.readAsBase64String().then(function(imageBuffer) {
			return { src: "data:" + element$2.contentType + ";base64," + imageBuffer };
		});
	});
}) });

//#endregion
//#region node_modules/mammoth/lib/writers/html-writer.js
var require_html_writer = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/lib/writers/html-writer.js": ((exports) => {
	var _$6 = (init_index_all(), __toCommonJS(index_all_exports));
	exports.writer = writer$1;
	function writer$1(options$1) {
		options$1 = options$1 || {};
		if (options$1.prettyPrint) return prettyWriter();
		else return simpleWriter();
	}
	var indentedElements = {
		div: true,
		p: true,
		ul: true,
		li: true
	};
	function prettyWriter() {
		var indentationLevel = 0;
		var indentation = "  ";
		var stack = [];
		var start = true;
		var inText = false;
		var writer$2 = simpleWriter();
		function open(tagName, attributes) {
			if (indentedElements[tagName]) indent();
			stack.push(tagName);
			writer$2.open(tagName, attributes);
			if (indentedElements[tagName]) indentationLevel++;
			start = false;
		}
		function close(tagName) {
			if (indentedElements[tagName]) {
				indentationLevel--;
				indent();
			}
			stack.pop();
			writer$2.close(tagName);
		}
		function text$1(value) {
			startText();
			var text$2 = isInPre() ? value : value.replace("\n", "\n" + indentation);
			writer$2.text(text$2);
		}
		function selfClosing(tagName, attributes) {
			indent();
			writer$2.selfClosing(tagName, attributes);
		}
		function insideIndentedElement() {
			return stack.length === 0 || indentedElements[stack[stack.length - 1]];
		}
		function startText() {
			if (!inText) {
				indent();
				inText = true;
			}
		}
		function indent() {
			inText = false;
			if (!start && insideIndentedElement() && !isInPre()) {
				writer$2._append("\n");
				for (var i$2 = 0; i$2 < indentationLevel; i$2++) writer$2._append(indentation);
			}
		}
		function isInPre() {
			return _$6.some(stack, function(tagName) {
				return tagName === "pre";
			});
		}
		return {
			asString: writer$2.asString,
			open,
			close,
			text: text$1,
			selfClosing
		};
	}
	function simpleWriter() {
		var fragments = [];
		function open(tagName, attributes) {
			var attributeString = generateAttributeString(attributes);
			fragments.push("<" + tagName + attributeString + ">");
		}
		function close(tagName) {
			fragments.push("</" + tagName + ">");
		}
		function selfClosing(tagName, attributes) {
			var attributeString = generateAttributeString(attributes);
			fragments.push("<" + tagName + attributeString + " />");
		}
		function generateAttributeString(attributes) {
			return _$6.map(attributes, function(value, key) {
				return " " + key + "=\"" + escapeHtmlAttribute(value) + "\"";
			}).join("");
		}
		function text$1(value) {
			fragments.push(escapeHtmlText(value));
		}
		function append(html$1) {
			fragments.push(html$1);
		}
		function asString() {
			return fragments.join("");
		}
		return {
			asString,
			open,
			close,
			text: text$1,
			selfClosing,
			_append: append
		};
	}
	function escapeHtmlText(value) {
		return value.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
	}
	function escapeHtmlAttribute(value) {
		return value.replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
	}
}) });

//#endregion
//#region node_modules/mammoth/lib/writers/markdown-writer.js
var require_markdown_writer = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/lib/writers/markdown-writer.js": ((exports) => {
	var _$5 = (init_index_all(), __toCommonJS(index_all_exports));
	function symmetricMarkdownElement(end) {
		return markdownElement(end, end);
	}
	function markdownElement(start, end) {
		return function() {
			return {
				start,
				end
			};
		};
	}
	function markdownLink(attributes) {
		var href = attributes.href || "";
		if (href) return {
			start: "[",
			end: "](" + href + ")",
			anchorPosition: "before"
		};
		else return {};
	}
	function markdownImage(attributes) {
		var src = attributes.src || "";
		var altText = attributes.alt || "";
		if (src || altText) return { start: "![" + altText + "](" + src + ")" };
		else return {};
	}
	function markdownList(options$1) {
		return function(attributes, list) {
			return {
				start: list ? "\n" : "",
				end: list ? "" : "\n",
				list: {
					isOrdered: options$1.isOrdered,
					indent: list ? list.indent + 1 : 0,
					count: 0
				}
			};
		};
	}
	function markdownListItem(attributes, list, listItem) {
		list = list || {
			indent: 0,
			isOrdered: false,
			count: 0
		};
		list.count++;
		listItem.hasClosed = false;
		var bullet = list.isOrdered ? list.count + "." : "-";
		return {
			start: repeatString("	", list.indent) + bullet + " ",
			end: function() {
				if (!listItem.hasClosed) {
					listItem.hasClosed = true;
					return "\n";
				}
			}
		};
	}
	var htmlToMarkdown = {
		"p": markdownElement("", "\n\n"),
		"br": markdownElement("", "  \n"),
		"ul": markdownList({ isOrdered: false }),
		"ol": markdownList({ isOrdered: true }),
		"li": markdownListItem,
		"strong": symmetricMarkdownElement("__"),
		"em": symmetricMarkdownElement("*"),
		"a": markdownLink,
		"img": markdownImage
	};
	(function() {
		for (var i$2 = 1; i$2 <= 6; i$2++) htmlToMarkdown["h" + i$2] = markdownElement(repeatString("#", i$2) + " ", "\n\n");
	})();
	function repeatString(value, count) {
		return new Array(count + 1).join(value);
	}
	function markdownWriter$1() {
		var fragments = [];
		var elementStack = [];
		var list = null;
		var listItem = {};
		function open(tagName, attributes) {
			attributes = attributes || {};
			var element$2 = (htmlToMarkdown[tagName] || function() {
				return {};
			})(attributes, list, listItem);
			elementStack.push({
				end: element$2.end,
				list
			});
			if (element$2.list) list = element$2.list;
			var anchorBeforeStart = element$2.anchorPosition === "before";
			if (anchorBeforeStart) writeAnchor(attributes);
			fragments.push(element$2.start || "");
			if (!anchorBeforeStart) writeAnchor(attributes);
		}
		function writeAnchor(attributes) {
			if (attributes.id) fragments.push("<a id=\"" + attributes.id + "\"></a>");
		}
		function close(tagName) {
			var element$2 = elementStack.pop();
			list = element$2.list;
			var end = _$5.isFunction(element$2.end) ? element$2.end() : element$2.end;
			fragments.push(end || "");
		}
		function selfClosing(tagName, attributes) {
			open(tagName, attributes);
			close(tagName);
		}
		function text$1(value) {
			fragments.push(escapeMarkdown(value));
		}
		function asString() {
			return fragments.join("");
		}
		return {
			asString,
			open,
			close,
			text: text$1,
			selfClosing
		};
	}
	exports.writer = markdownWriter$1;
	function escapeMarkdown(value) {
		return value.replace(/\\/g, "\\\\").replace(/([\`\*_\{\}\[\]\(\)\#\+\-\.\!])/g, "\\$1");
	}
}) });

//#endregion
//#region node_modules/mammoth/lib/writers/index.js
var require_writers = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/lib/writers/index.js": ((exports) => {
	var htmlWriter = require_html_writer();
	var markdownWriter = require_markdown_writer();
	exports.writer = writer;
	function writer(options$1) {
		options$1 = options$1 || {};
		if (options$1.outputFormat === "markdown") return markdownWriter.writer();
		else return htmlWriter.writer(options$1);
	}
}) });

//#endregion
//#region node_modules/mammoth/lib/document-to-html.js
var require_document_to_html = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/lib/document-to-html.js": ((exports) => {
	var _$4 = (init_index_all(), __toCommonJS(index_all_exports));
	var promises$1 = require_promises();
	var documents$1 = require_documents();
	var htmlPaths$2 = require_html_paths();
	var results$3 = require_results();
	var images = require_images();
	var Html$1 = require_html();
	var writers = require_writers();
	exports.DocumentConverter = DocumentConverter$1;
	function DocumentConverter$1(options$1) {
		return { convertToHtml: function(element$2) {
			var comments = _$4.indexBy(element$2.type === documents$1.types.document ? element$2.comments : [], "commentId");
			return new DocumentConversion(options$1, comments).convertToHtml(element$2);
		} };
	}
	function DocumentConversion(options$1, comments) {
		var noteNumber = 1;
		var noteReferences = [];
		var referencedComments = [];
		options$1 = _$4.extend({ ignoreEmptyParagraphs: true }, options$1);
		var idPrefix = options$1.idPrefix === void 0 ? "" : options$1.idPrefix;
		var ignoreEmptyParagraphs = options$1.ignoreEmptyParagraphs;
		var defaultParagraphStyle = htmlPaths$2.topLevelElement("p");
		var styleMap = options$1.styleMap || [];
		function convertToHtml$1(document$1) {
			var messages = [];
			var html$1 = elementToHtml(document$1, messages, {});
			var deferredNodes = [];
			walkHtml(html$1, function(node) {
				if (node.type === "deferred") deferredNodes.push(node);
			});
			var deferredValues = {};
			return promises$1.mapSeries(deferredNodes, function(deferred) {
				return deferred.value().then(function(value) {
					deferredValues[deferred.id] = value;
				});
			}).then(function() {
				function replaceDeferred(nodes$2) {
					return flatMap(nodes$2, function(node) {
						if (node.type === "deferred") return deferredValues[node.id];
						else if (node.children) return [_$4.extend({}, node, { children: replaceDeferred(node.children) })];
						else return [node];
					});
				}
				var writer$2 = writers.writer({
					prettyPrint: options$1.prettyPrint,
					outputFormat: options$1.outputFormat
				});
				Html$1.write(writer$2, Html$1.simplify(replaceDeferred(html$1)));
				return new results$3.Result(writer$2.asString(), messages);
			});
		}
		function convertElements(elements$2, messages, options$2) {
			return flatMap(elements$2, function(element$2) {
				return elementToHtml(element$2, messages, options$2);
			});
		}
		function elementToHtml(element$2, messages, options$2) {
			if (!options$2) throw new Error("options not set");
			var handler = elementConverters[element$2.type];
			if (handler) return handler(element$2, messages, options$2);
			else return [];
		}
		function convertParagraph(element$2, messages, options$2) {
			return htmlPathForParagraph(element$2, messages).wrap(function() {
				var content = convertElements(element$2.children, messages, options$2);
				if (ignoreEmptyParagraphs) return content;
				else return [Html$1.forceWrite].concat(content);
			});
		}
		function htmlPathForParagraph(element$2, messages) {
			var style = findStyle(element$2);
			if (style) return style.to;
			else {
				if (element$2.styleId) messages.push(unrecognisedStyleWarning("paragraph", element$2));
				return defaultParagraphStyle;
			}
		}
		function convertRun(run$2, messages, options$2) {
			var nodes$2 = function() {
				return convertElements(run$2.children, messages, options$2);
			};
			var paths = [];
			if (run$2.highlight !== null) {
				var path = findHtmlPath({
					type: "highlight",
					color: run$2.highlight
				});
				if (path) paths.push(path);
			}
			if (run$2.isSmallCaps) paths.push(findHtmlPathForRunProperty("smallCaps"));
			if (run$2.isAllCaps) paths.push(findHtmlPathForRunProperty("allCaps"));
			if (run$2.isStrikethrough) paths.push(findHtmlPathForRunProperty("strikethrough", "s"));
			if (run$2.isUnderline) paths.push(findHtmlPathForRunProperty("underline"));
			if (run$2.verticalAlignment === documents$1.verticalAlignment.subscript) paths.push(htmlPaths$2.element("sub", {}, { fresh: false }));
			if (run$2.verticalAlignment === documents$1.verticalAlignment.superscript) paths.push(htmlPaths$2.element("sup", {}, { fresh: false }));
			if (run$2.isItalic) paths.push(findHtmlPathForRunProperty("italic", "em"));
			if (run$2.isBold) paths.push(findHtmlPathForRunProperty("bold", "strong"));
			var stylePath = htmlPaths$2.empty;
			var style = findStyle(run$2);
			if (style) stylePath = style.to;
			else if (run$2.styleId) messages.push(unrecognisedStyleWarning("run", run$2));
			paths.push(stylePath);
			paths.forEach(function(path$1) {
				nodes$2 = path$1.wrap.bind(path$1, nodes$2);
			});
			return nodes$2();
		}
		function findHtmlPathForRunProperty(elementType, defaultTagName) {
			var path = findHtmlPath({ type: elementType });
			if (path) return path;
			else if (defaultTagName) return htmlPaths$2.element(defaultTagName, {}, { fresh: false });
			else return htmlPaths$2.empty;
		}
		function findHtmlPath(element$2, defaultPath) {
			var style = findStyle(element$2);
			return style ? style.to : defaultPath;
		}
		function findStyle(element$2) {
			for (var i$2 = 0; i$2 < styleMap.length; i$2++) if (styleMap[i$2].from.matches(element$2)) return styleMap[i$2];
		}
		function recoveringConvertImage(convertImage) {
			return function(image, messages) {
				return promises$1.attempt(function() {
					return convertImage(image, messages);
				}).caught(function(error$1) {
					messages.push(results$3.error(error$1));
					return [];
				});
			};
		}
		function noteHtmlId(note) {
			return referentHtmlId(note.noteType, note.noteId);
		}
		function noteRefHtmlId(note) {
			return referenceHtmlId(note.noteType, note.noteId);
		}
		function referentHtmlId(referenceType, referenceId) {
			return htmlId(referenceType + "-" + referenceId);
		}
		function referenceHtmlId(referenceType, referenceId) {
			return htmlId(referenceType + "-ref-" + referenceId);
		}
		function htmlId(suffix) {
			return idPrefix + suffix;
		}
		var defaultTablePath = htmlPaths$2.elements([htmlPaths$2.element("table", {}, { fresh: true })]);
		function convertTable(element$2, messages, options$2) {
			return findHtmlPath(element$2, defaultTablePath).wrap(function() {
				return convertTableChildren(element$2, messages, options$2);
			});
		}
		function convertTableChildren(element$2, messages, options$2) {
			var bodyIndex = _$4.findIndex(element$2.children, function(child) {
				return !child.type === documents$1.types.tableRow || !child.isHeader;
			});
			if (bodyIndex === -1) bodyIndex = element$2.children.length;
			var children;
			if (bodyIndex === 0) children = convertElements(element$2.children, messages, _$4.extend({}, options$2, { isTableHeader: false }));
			else {
				var headRows = convertElements(element$2.children.slice(0, bodyIndex), messages, _$4.extend({}, options$2, { isTableHeader: true }));
				var bodyRows = convertElements(element$2.children.slice(bodyIndex), messages, _$4.extend({}, options$2, { isTableHeader: false }));
				children = [Html$1.freshElement("thead", {}, headRows), Html$1.freshElement("tbody", {}, bodyRows)];
			}
			return [Html$1.forceWrite].concat(children);
		}
		function convertTableRow(element$2, messages, options$2) {
			var children = convertElements(element$2.children, messages, options$2);
			return [Html$1.freshElement("tr", {}, [Html$1.forceWrite].concat(children))];
		}
		function convertTableCell(element$2, messages, options$2) {
			var tagName = options$2.isTableHeader ? "th" : "td";
			var children = convertElements(element$2.children, messages, options$2);
			var attributes = {};
			if (element$2.colSpan !== 1) attributes.colspan = element$2.colSpan.toString();
			if (element$2.rowSpan !== 1) attributes.rowspan = element$2.rowSpan.toString();
			return [Html$1.freshElement(tagName, attributes, [Html$1.forceWrite].concat(children))];
		}
		function convertCommentReference(reference, messages, options$2) {
			return findHtmlPath(reference, htmlPaths$2.ignore).wrap(function() {
				var comment$1 = comments[reference.commentId];
				var count = referencedComments.length + 1;
				var label = "[" + commentAuthorLabel(comment$1) + count + "]";
				referencedComments.push({
					label,
					comment: comment$1
				});
				return [Html$1.freshElement("a", {
					href: "#" + referentHtmlId("comment", reference.commentId),
					id: referenceHtmlId("comment", reference.commentId)
				}, [Html$1.text(label)])];
			});
		}
		function convertComment(referencedComment, messages, options$2) {
			var label = referencedComment.label;
			var comment$1 = referencedComment.comment;
			var body = convertElements(comment$1.body, messages, options$2).concat([Html$1.nonFreshElement("p", {}, [Html$1.text(" "), Html$1.freshElement("a", { "href": "#" + referenceHtmlId("comment", comment$1.commentId) }, [Html$1.text("↑")])])]);
			return [Html$1.freshElement("dt", { "id": referentHtmlId("comment", comment$1.commentId) }, [Html$1.text("Comment " + label)]), Html$1.freshElement("dd", {}, body)];
		}
		function convertBreak(element$2, messages, options$2) {
			return htmlPathForBreak(element$2).wrap(function() {
				return [];
			});
		}
		function htmlPathForBreak(element$2) {
			var style = findStyle(element$2);
			if (style) return style.to;
			else if (element$2.breakType === "line") return htmlPaths$2.topLevelElement("br");
			else return htmlPaths$2.empty;
		}
		var elementConverters = {
			"document": function(document$1, messages, options$2) {
				var children = convertElements(document$1.children, messages, options$2);
				var notes = noteReferences.map(function(noteReference) {
					return document$1.notes.resolve(noteReference);
				});
				var notesNodes = convertElements(notes, messages, options$2);
				return children.concat([Html$1.freshElement("ol", {}, notesNodes), Html$1.freshElement("dl", {}, flatMap(referencedComments, function(referencedComment) {
					return convertComment(referencedComment, messages, options$2);
				}))]);
			},
			"paragraph": convertParagraph,
			"run": convertRun,
			"text": function(element$2, messages, options$2) {
				return [Html$1.text(element$2.value)];
			},
			"tab": function(element$2, messages, options$2) {
				return [Html$1.text("	")];
			},
			"hyperlink": function(element$2, messages, options$2) {
				var attributes = { href: element$2.anchor ? "#" + htmlId(element$2.anchor) : element$2.href };
				if (element$2.targetFrame != null) attributes.target = element$2.targetFrame;
				var children = convertElements(element$2.children, messages, options$2);
				return [Html$1.nonFreshElement("a", attributes, children)];
			},
			"checkbox": function(element$2) {
				var attributes = { type: "checkbox" };
				if (element$2.checked) attributes["checked"] = "checked";
				return [Html$1.freshElement("input", attributes)];
			},
			"bookmarkStart": function(element$2, messages, options$2) {
				return [Html$1.freshElement("a", { id: htmlId(element$2.name) }, [Html$1.forceWrite])];
			},
			"noteReference": function(element$2, messages, options$2) {
				noteReferences.push(element$2);
				var anchor = Html$1.freshElement("a", {
					href: "#" + noteHtmlId(element$2),
					id: noteRefHtmlId(element$2)
				}, [Html$1.text("[" + noteNumber++ + "]")]);
				return [Html$1.freshElement("sup", {}, [anchor])];
			},
			"note": function(element$2, messages, options$2) {
				var children = convertElements(element$2.body, messages, options$2);
				var backLink = Html$1.elementWithTag(htmlPaths$2.element("p", {}, { fresh: false }), [Html$1.text(" "), Html$1.freshElement("a", { href: "#" + noteRefHtmlId(element$2) }, [Html$1.text("↑")])]);
				var body = children.concat([backLink]);
				return Html$1.freshElement("li", { id: noteHtmlId(element$2) }, body);
			},
			"commentReference": convertCommentReference,
			"comment": convertComment,
			"image": deferredConversion(recoveringConvertImage(options$1.convertImage || images.dataUri)),
			"table": convertTable,
			"tableRow": convertTableRow,
			"tableCell": convertTableCell,
			"break": convertBreak
		};
		return { convertToHtml: convertToHtml$1 };
	}
	var deferredId = 1;
	function deferredConversion(func) {
		return function(element$2, messages, options$1) {
			return [{
				type: "deferred",
				id: deferredId++,
				value: function() {
					return func(element$2, messages, options$1);
				}
			}];
		};
	}
	function unrecognisedStyleWarning(type, element$2) {
		return results$3.warning("Unrecognised " + type + " style: '" + element$2.styleName + "' (Style ID: " + element$2.styleId + ")");
	}
	function flatMap(values$1, func) {
		return _$4.flatten(values$1.map(func), true);
	}
	function walkHtml(nodes$2, callback) {
		nodes$2.forEach(function(node) {
			callback(node);
			if (node.children) walkHtml(node.children, callback);
		});
	}
	var commentAuthorLabel = exports.commentAuthorLabel = function commentAuthorLabel$1(comment$1) {
		return comment$1.authorInitials || "";
	};
}) });

//#endregion
//#region node_modules/mammoth/lib/raw-text.js
var require_raw_text = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/lib/raw-text.js": ((exports) => {
	var documents = require_documents();
	function convertElementToRawText$1(element$2) {
		if (element$2.type === "text") return element$2.value;
		else if (element$2.type === documents.types.tab) return "	";
		else {
			var tail = element$2.type === "paragraph" ? "\n\n" : "";
			return (element$2.children || []).map(convertElementToRawText$1).join("") + tail;
		}
	}
	exports.convertElementToRawText = convertElementToRawText$1;
}) });

//#endregion
//#region node_modules/lop/lib/TokenIterator.js
var require_TokenIterator = /* @__PURE__ */ __commonJS({ "node_modules/lop/lib/TokenIterator.js": ((exports, module) => {
	var TokenIterator$1 = module.exports = function(tokens, startIndex) {
		this._tokens = tokens;
		this._startIndex = startIndex || 0;
	};
	TokenIterator$1.prototype.head = function() {
		return this._tokens[this._startIndex];
	};
	TokenIterator$1.prototype.tail = function(startIndex) {
		return new TokenIterator$1(this._tokens, this._startIndex + 1);
	};
	TokenIterator$1.prototype.toArray = function() {
		return this._tokens.slice(this._startIndex);
	};
	TokenIterator$1.prototype.end = function() {
		return this._tokens[this._tokens.length - 1];
	};
	TokenIterator$1.prototype.to = function(end) {
		var start = this.head().source;
		var endToken = end.head() || end.end();
		return start.to(endToken.source);
	};
}) });

//#endregion
//#region node_modules/lop/lib/parser.js
var require_parser = /* @__PURE__ */ __commonJS({ "node_modules/lop/lib/parser.js": ((exports) => {
	var TokenIterator = require_TokenIterator();
	exports.Parser = function(options$1) {
		var parseTokens = function(parser, tokens) {
			return parser(new TokenIterator(tokens));
		};
		return { parseTokens };
	};
}) });

//#endregion
//#region node_modules/option/index.js
var require_option = /* @__PURE__ */ __commonJS({ "node_modules/option/index.js": ((exports) => {
	exports.none = Object.create({
		value: function() {
			throw new Error("Called value on none");
		},
		isNone: function() {
			return true;
		},
		isSome: function() {
			return false;
		},
		map: function() {
			return exports.none;
		},
		flatMap: function() {
			return exports.none;
		},
		filter: function() {
			return exports.none;
		},
		toArray: function() {
			return [];
		},
		orElse: callOrReturn,
		valueOrElse: callOrReturn
	});
	function callOrReturn(value) {
		if (typeof value == "function") return value();
		else return value;
	}
	exports.some = function(value) {
		return new Some(value);
	};
	var Some = function(value) {
		this._value = value;
	};
	Some.prototype.value = function() {
		return this._value;
	};
	Some.prototype.isNone = function() {
		return false;
	};
	Some.prototype.isSome = function() {
		return true;
	};
	Some.prototype.map = function(func) {
		return new Some(func(this._value));
	};
	Some.prototype.flatMap = function(func) {
		return func(this._value);
	};
	Some.prototype.filter = function(predicate) {
		return predicate(this._value) ? this : exports.none;
	};
	Some.prototype.toArray = function() {
		return [this._value];
	};
	Some.prototype.orElse = function(value) {
		return this;
	};
	Some.prototype.valueOrElse = function(value) {
		return this._value;
	};
	exports.isOption = function(value) {
		return value === exports.none || value instanceof Some;
	};
	exports.fromNullable = function(value) {
		if (value == null) return exports.none;
		return new Some(value);
	};
}) });

//#endregion
//#region node_modules/lop/lib/parsing-results.js
var require_parsing_results = /* @__PURE__ */ __commonJS({ "node_modules/lop/lib/parsing-results.js": ((exports, module) => {
	module.exports = {
		failure: function(errors$1, remaining) {
			if (errors$1.length < 1) throw new Error("Failure must have errors");
			return new Result$1({
				status: "failure",
				remaining,
				errors: errors$1
			});
		},
		error: function(errors$1, remaining) {
			if (errors$1.length < 1) throw new Error("Failure must have errors");
			return new Result$1({
				status: "error",
				remaining,
				errors: errors$1
			});
		},
		success: function(value, remaining, source) {
			return new Result$1({
				status: "success",
				value,
				source,
				remaining,
				errors: []
			});
		},
		cut: function(remaining) {
			return new Result$1({
				status: "cut",
				remaining,
				errors: []
			});
		}
	};
	var Result$1 = function(options$1) {
		this._value = options$1.value;
		this._status = options$1.status;
		this._hasValue = options$1.value !== void 0;
		this._remaining = options$1.remaining;
		this._source = options$1.source;
		this._errors = options$1.errors;
	};
	Result$1.prototype.map = function(func) {
		if (this._hasValue) return new Result$1({
			value: func(this._value, this._source),
			status: this._status,
			remaining: this._remaining,
			source: this._source,
			errors: this._errors
		});
		else return this;
	};
	Result$1.prototype.changeRemaining = function(remaining) {
		return new Result$1({
			value: this._value,
			status: this._status,
			remaining,
			source: this._source,
			errors: this._errors
		});
	};
	Result$1.prototype.isSuccess = function() {
		return this._status === "success" || this._status === "cut";
	};
	Result$1.prototype.isFailure = function() {
		return this._status === "failure";
	};
	Result$1.prototype.isError = function() {
		return this._status === "error";
	};
	Result$1.prototype.isCut = function() {
		return this._status === "cut";
	};
	Result$1.prototype.value = function() {
		return this._value;
	};
	Result$1.prototype.remaining = function() {
		return this._remaining;
	};
	Result$1.prototype.source = function() {
		return this._source;
	};
	Result$1.prototype.errors = function() {
		return this._errors;
	};
}) });

//#endregion
//#region node_modules/lop/lib/errors.js
var require_errors = /* @__PURE__ */ __commonJS({ "node_modules/lop/lib/errors.js": ((exports) => {
	exports.error = function(options$1) {
		return new Error$1(options$1);
	};
	var Error$1 = function(options$1) {
		this.expected = options$1.expected;
		this.actual = options$1.actual;
		this._location = options$1.location;
	};
	Error$1.prototype.describe = function() {
		return (this._location ? this._location.describe() + ":\n" : "") + "Expected " + this.expected + "\nbut got " + this.actual;
	};
	Error$1.prototype.lineNumber = function() {
		return this._location.lineNumber();
	};
	Error$1.prototype.characterNumber = function() {
		return this._location.characterNumber();
	};
}) });

//#endregion
//#region node_modules/lop/lib/lazy-iterators.js
var require_lazy_iterators = /* @__PURE__ */ __commonJS({ "node_modules/lop/lib/lazy-iterators.js": ((exports) => {
	exports.fromArray = function(array) {
		var index = 0;
		var hasNext = function() {
			return index < array.length;
		};
		return new LazyIterator({
			hasNext,
			next: function() {
				if (!hasNext()) throw new Error("No more elements");
				else return array[index++];
			}
		});
	};
	var LazyIterator = function(iterator) {
		this._iterator = iterator;
	};
	LazyIterator.prototype.map = function(func) {
		var iterator = this._iterator;
		return new LazyIterator({
			hasNext: function() {
				return iterator.hasNext();
			},
			next: function() {
				return func(iterator.next());
			}
		});
	};
	LazyIterator.prototype.filter = function(condition) {
		var iterator = this._iterator;
		var moved = false;
		var hasNext = false;
		var next;
		var moveIfNecessary = function() {
			if (moved) return;
			moved = true;
			hasNext = false;
			while (iterator.hasNext() && !hasNext) {
				next = iterator.next();
				hasNext = condition(next);
			}
		};
		return new LazyIterator({
			hasNext: function() {
				moveIfNecessary();
				return hasNext;
			},
			next: function() {
				moveIfNecessary();
				var toReturn = next;
				moved = false;
				return toReturn;
			}
		});
	};
	LazyIterator.prototype.first = function() {
		var iterator = this._iterator;
		if (this._iterator.hasNext()) return iterator.next();
		else return null;
	};
	LazyIterator.prototype.toArray = function() {
		var result$1 = [];
		while (this._iterator.hasNext()) result$1.push(this._iterator.next());
		return result$1;
	};
}) });

//#endregion
//#region node_modules/lop/lib/rules.js
var require_rules = /* @__PURE__ */ __commonJS({ "node_modules/lop/lib/rules.js": ((exports) => {
	var _$3 = (init_index_all(), __toCommonJS(index_all_exports));
	var options = require_option();
	var results$2 = require_parsing_results();
	var errors = require_errors();
	var lazyIterators = require_lazy_iterators();
	exports.token = function(tokenType, value) {
		var matchValue = value !== void 0;
		return function(input) {
			var token = input.head();
			if (token && token.name === tokenType && (!matchValue || token.value === value)) return results$2.success(token.value, input.tail(), token.source);
			else {
				var expected = describeToken({
					name: tokenType,
					value
				});
				return describeTokenMismatch(input, expected);
			}
		};
	};
	exports.tokenOfType = function(tokenType) {
		return exports.token(tokenType);
	};
	exports.firstOf = function(name, parsers) {
		if (!_$3.isArray(parsers)) parsers = Array.prototype.slice.call(arguments, 1);
		return function(input) {
			return lazyIterators.fromArray(parsers).map(function(parser) {
				return parser(input);
			}).filter(function(result$1) {
				return result$1.isSuccess() || result$1.isError();
			}).first() || describeTokenMismatch(input, name);
		};
	};
	exports.then = function(parser, func) {
		return function(input) {
			var result$1 = parser(input);
			if (!result$1.map) console.log(result$1);
			return result$1.map(func);
		};
	};
	exports.sequence = function() {
		var parsers = Array.prototype.slice.call(arguments, 0);
		var rule = function(input) {
			var result$1 = _$3.foldl(parsers, function(memo, parser) {
				var result$2 = memo.result;
				var hasCut = memo.hasCut;
				if (!result$2.isSuccess()) return {
					result: result$2,
					hasCut
				};
				var subResult = parser(result$2.remaining());
				if (subResult.isCut()) return {
					result: result$2,
					hasCut: true
				};
				else if (subResult.isSuccess()) {
					var values$1;
					if (parser.isCaptured) values$1 = result$2.value().withValue(parser, subResult.value());
					else values$1 = result$2.value();
					var remaining = subResult.remaining();
					var source$1 = input.to(remaining);
					return {
						result: results$2.success(values$1, remaining, source$1),
						hasCut
					};
				} else if (hasCut) return {
					result: results$2.error(subResult.errors(), subResult.remaining()),
					hasCut
				};
				else return {
					result: subResult,
					hasCut
				};
			}, {
				result: results$2.success(new SequenceValues(), input),
				hasCut: false
			}).result;
			var source = input.to(result$1.remaining());
			return result$1.map(function(values$1) {
				return values$1.withValue(exports.sequence.source, source);
			});
		};
		rule.head = function() {
			var firstCapture = _$3.find(parsers, isCapturedRule);
			return exports.then(rule, exports.sequence.extract(firstCapture));
		};
		rule.map = function(func) {
			return exports.then(rule, function(result$1) {
				return func.apply(this, result$1.toArray());
			});
		};
		function isCapturedRule(subRule) {
			return subRule.isCaptured;
		}
		return rule;
	};
	var SequenceValues = function(values$1, valuesArray) {
		this._values = values$1 || {};
		this._valuesArray = valuesArray || [];
	};
	SequenceValues.prototype.withValue = function(rule, value) {
		if (rule.captureName && rule.captureName in this._values) throw new Error("Cannot add second value for capture \"" + rule.captureName + "\"");
		else {
			var newValues = _$3.clone(this._values);
			newValues[rule.captureName] = value;
			var newValuesArray = this._valuesArray.concat([value]);
			return new SequenceValues(newValues, newValuesArray);
		}
	};
	SequenceValues.prototype.get = function(rule) {
		if (rule.captureName in this._values) return this._values[rule.captureName];
		else throw new Error("No value for capture \"" + rule.captureName + "\"");
	};
	SequenceValues.prototype.toArray = function() {
		return this._valuesArray;
	};
	exports.sequence.capture = function(rule, name) {
		var captureRule = function() {
			return rule.apply(this, arguments);
		};
		captureRule.captureName = name;
		captureRule.isCaptured = true;
		return captureRule;
	};
	exports.sequence.extract = function(rule) {
		return function(result$1) {
			return result$1.get(rule);
		};
	};
	exports.sequence.applyValues = function(func) {
		var rules$1 = Array.prototype.slice.call(arguments, 1);
		return function(result$1) {
			var values$1 = rules$1.map(function(rule) {
				return result$1.get(rule);
			});
			return func.apply(this, values$1);
		};
	};
	exports.sequence.source = { captureName: "☃source☃" };
	exports.sequence.cut = function() {
		return function(input) {
			return results$2.cut(input);
		};
	};
	exports.optional = function(rule) {
		return function(input) {
			var result$1 = rule(input);
			if (result$1.isSuccess()) return result$1.map(options.some);
			else if (result$1.isFailure()) return results$2.success(options.none, input);
			else return result$1;
		};
	};
	exports.zeroOrMoreWithSeparator = function(rule, separator) {
		return repeatedWithSeparator(rule, separator, false);
	};
	exports.oneOrMoreWithSeparator = function(rule, separator) {
		return repeatedWithSeparator(rule, separator, true);
	};
	var zeroOrMore = exports.zeroOrMore = function(rule) {
		return function(input) {
			var values$1 = [];
			var result$1;
			while ((result$1 = rule(input)) && result$1.isSuccess()) {
				input = result$1.remaining();
				values$1.push(result$1.value());
			}
			if (result$1.isError()) return result$1;
			else return results$2.success(values$1, input);
		};
	};
	exports.oneOrMore = function(rule) {
		return exports.oneOrMoreWithSeparator(rule, noOpRule);
	};
	function noOpRule(input) {
		return results$2.success(null, input);
	}
	var repeatedWithSeparator = function(rule, separator, isOneOrMore) {
		return function(input) {
			var result$1 = rule(input);
			if (result$1.isSuccess()) {
				var mainRule = exports.sequence.capture(rule, "main");
				var remainingResult = zeroOrMore(exports.then(exports.sequence(separator, mainRule), exports.sequence.extract(mainRule)))(result$1.remaining());
				return results$2.success([result$1.value()].concat(remainingResult.value()), remainingResult.remaining());
			} else if (isOneOrMore || result$1.isError()) return result$1;
			else return results$2.success([], input);
		};
	};
	exports.leftAssociative = function(leftRule, rightRule, func) {
		var rights;
		if (func) rights = [{
			func,
			rule: rightRule
		}];
		else rights = rightRule;
		rights = rights.map(function(right) {
			return exports.then(right.rule, function(rightValue) {
				return function(leftValue, source) {
					return right.func(leftValue, rightValue, source);
				};
			});
		});
		var repeatedRule = exports.firstOf.apply(null, ["rules"].concat(rights));
		return function(input) {
			var start = input;
			var leftResult = leftRule(input);
			if (!leftResult.isSuccess()) return leftResult;
			var repeatedResult = repeatedRule(leftResult.remaining());
			while (repeatedResult.isSuccess()) {
				var remaining = repeatedResult.remaining();
				var source = start.to(repeatedResult.remaining());
				var right = repeatedResult.value();
				leftResult = results$2.success(right(leftResult.value(), source), remaining, source);
				repeatedResult = repeatedRule(leftResult.remaining());
			}
			if (repeatedResult.isError()) return repeatedResult;
			return leftResult;
		};
	};
	exports.leftAssociative.firstOf = function() {
		return Array.prototype.slice.call(arguments, 0);
	};
	exports.nonConsuming = function(rule) {
		return function(input) {
			return rule(input).changeRemaining(input);
		};
	};
	var describeToken = function(token) {
		if (token.value) return token.name + " \"" + token.value + "\"";
		else return token.name;
	};
	function describeTokenMismatch(input, expected) {
		var error$1;
		var token = input.head();
		if (token) error$1 = errors.error({
			expected,
			actual: describeToken(token),
			location: token.source
		});
		else error$1 = errors.error({
			expected,
			actual: "end of tokens"
		});
		return results$2.failure([error$1], input);
	}
}) });

//#endregion
//#region node_modules/lop/lib/StringSource.js
var require_StringSource = /* @__PURE__ */ __commonJS({ "node_modules/lop/lib/StringSource.js": ((exports, module) => {
	module.exports = function(string, description) {
		return {
			asString: function() {
				return string;
			},
			range: function(startIndex, endIndex) {
				return new StringSourceRange(string, description, startIndex, endIndex);
			}
		};
	};
	var StringSourceRange = function(string, description, startIndex, endIndex) {
		this._string = string;
		this._description = description;
		this._startIndex = startIndex;
		this._endIndex = endIndex;
	};
	StringSourceRange.prototype.to = function(otherRange) {
		return new StringSourceRange(this._string, this._description, this._startIndex, otherRange._endIndex);
	};
	StringSourceRange.prototype.describe = function() {
		var position$1 = this._position();
		return (this._description ? this._description + "\n" : "") + "Line number: " + position$1.lineNumber + "\nCharacter number: " + position$1.characterNumber;
	};
	StringSourceRange.prototype.lineNumber = function() {
		return this._position().lineNumber;
	};
	StringSourceRange.prototype.characterNumber = function() {
		return this._position().characterNumber;
	};
	StringSourceRange.prototype._position = function() {
		var self$1 = this;
		var index = 0;
		var nextNewLine = function() {
			return self$1._string.indexOf("\n", index);
		};
		var lineNumber = 1;
		while (nextNewLine() !== -1 && nextNewLine() < this._startIndex) {
			index = nextNewLine() + 1;
			lineNumber += 1;
		}
		var characterNumber = this._startIndex - index + 1;
		return {
			lineNumber,
			characterNumber
		};
	};
}) });

//#endregion
//#region node_modules/lop/lib/Token.js
var require_Token = /* @__PURE__ */ __commonJS({ "node_modules/lop/lib/Token.js": ((exports, module) => {
	module.exports = function(name, value, source) {
		this.name = name;
		this.value = value;
		if (source) this.source = source;
	};
}) });

//#endregion
//#region node_modules/lop/lib/bottom-up.js
var require_bottom_up = /* @__PURE__ */ __commonJS({ "node_modules/lop/lib/bottom-up.js": ((exports) => {
	var rules = require_rules();
	var results$1 = require_parsing_results();
	exports.parser = function(name, prefixRules, infixRuleBuilders) {
		var self$1 = {
			rule,
			leftAssociative,
			rightAssociative
		};
		var infixRules = new InfixRules(infixRuleBuilders.map(createInfixRule));
		var prefixRule = rules.firstOf(name, prefixRules);
		function createInfixRule(infixRuleBuilder) {
			return {
				name: infixRuleBuilder.name,
				rule: lazyRule(infixRuleBuilder.ruleBuilder.bind(null, self$1))
			};
		}
		function rule() {
			return createRule(infixRules);
		}
		function leftAssociative(name$1) {
			return createRule(infixRules.untilExclusive(name$1));
		}
		function rightAssociative(name$1) {
			return createRule(infixRules.untilInclusive(name$1));
		}
		function createRule(infixRules$1) {
			return apply.bind(null, infixRules$1);
		}
		function apply(infixRules$1, tokens) {
			var leftResult = prefixRule(tokens);
			if (leftResult.isSuccess()) return infixRules$1.apply(leftResult);
			else return leftResult;
		}
		return self$1;
	};
	function InfixRules(infixRules) {
		function untilExclusive(name) {
			return new InfixRules(infixRules.slice(0, ruleNames().indexOf(name)));
		}
		function untilInclusive(name) {
			return new InfixRules(infixRules.slice(0, ruleNames().indexOf(name) + 1));
		}
		function ruleNames() {
			return infixRules.map(function(rule) {
				return rule.name;
			});
		}
		function apply(leftResult) {
			var currentResult;
			var source;
			while (true) {
				currentResult = applyToTokens(leftResult.remaining());
				if (currentResult.isSuccess()) {
					source = leftResult.source().to(currentResult.source());
					leftResult = results$1.success(currentResult.value()(leftResult.value(), source), currentResult.remaining(), source);
				} else if (currentResult.isFailure()) return leftResult;
				else return currentResult;
			}
		}
		function applyToTokens(tokens) {
			return rules.firstOf("infix", infixRules.map(function(infix) {
				return infix.rule;
			}))(tokens);
		}
		return {
			apply,
			untilExclusive,
			untilInclusive
		};
	}
	exports.infix = function(name, ruleBuilder) {
		function map$1(func) {
			return exports.infix(name, function(parser) {
				var rule = ruleBuilder(parser);
				return function(tokens) {
					return rule(tokens).map(function(right) {
						return function(left, source) {
							return func(left, right, source);
						};
					});
				};
			});
		}
		return {
			name,
			ruleBuilder,
			map: map$1
		};
	};
	var lazyRule = function(ruleBuilder) {
		var rule;
		return function(input) {
			if (!rule) rule = ruleBuilder();
			return rule(input);
		};
	};
}) });

//#endregion
//#region node_modules/lop/lib/regex-tokeniser.js
var require_regex_tokeniser = /* @__PURE__ */ __commonJS({ "node_modules/lop/lib/regex-tokeniser.js": ((exports) => {
	var Token = require_Token();
	var StringSource = require_StringSource();
	exports.RegexTokeniser = RegexTokeniser$1;
	function RegexTokeniser$1(rules$1) {
		rules$1 = rules$1.map(function(rule) {
			return {
				name: rule.name,
				regex: new RegExp(rule.regex.source, "g")
			};
		});
		function tokenise$2(input, description) {
			var source = new StringSource(input, description);
			var index = 0;
			var tokens = [];
			while (index < input.length) {
				var result$1 = readNextToken(input, index, source);
				index = result$1.endIndex;
				tokens.push(result$1.token);
			}
			tokens.push(endToken(input, source));
			return tokens;
		}
		function readNextToken(string, startIndex, source) {
			for (var i$2 = 0; i$2 < rules$1.length; i$2++) {
				var regex = rules$1[i$2].regex;
				regex.lastIndex = startIndex;
				var result$1 = regex.exec(string);
				if (result$1) {
					var endIndex = startIndex + result$1[0].length;
					if (result$1.index === startIndex && endIndex > startIndex) {
						var value = result$1[1];
						var token = new Token(rules$1[i$2].name, value, source.range(startIndex, endIndex));
						return {
							token,
							endIndex
						};
					}
				}
			}
			var endIndex = startIndex + 1;
			var token = new Token("unrecognisedCharacter", string.substring(startIndex, endIndex), source.range(startIndex, endIndex));
			return {
				token,
				endIndex
			};
		}
		function endToken(input, source) {
			return new Token("end", null, source.range(input.length, input.length));
		}
		return { tokenise: tokenise$2 };
	}
}) });

//#endregion
//#region node_modules/lop/index.js
var require_lop = /* @__PURE__ */ __commonJS({ "node_modules/lop/index.js": ((exports) => {
	exports.Parser = require_parser().Parser;
	exports.rules = require_rules();
	exports.errors = require_errors();
	exports.results = require_parsing_results();
	exports.StringSource = require_StringSource();
	exports.Token = require_Token();
	exports.bottomUp = require_bottom_up();
	exports.RegexTokeniser = require_regex_tokeniser().RegexTokeniser;
	exports.rule = function(ruleBuilder) {
		var rule;
		return function(input) {
			if (!rule) rule = ruleBuilder();
			return rule(input);
		};
	};
}) });

//#endregion
//#region node_modules/mammoth/lib/styles/document-matchers.js
var require_document_matchers = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/lib/styles/document-matchers.js": ((exports) => {
	exports.paragraph = paragraph;
	exports.run = run;
	exports.table = table;
	exports.bold = new Matcher("bold");
	exports.italic = new Matcher("italic");
	exports.underline = new Matcher("underline");
	exports.strikethrough = new Matcher("strikethrough");
	exports.allCaps = new Matcher("allCaps");
	exports.smallCaps = new Matcher("smallCaps");
	exports.highlight = highlight;
	exports.commentReference = new Matcher("commentReference");
	exports.lineBreak = new BreakMatcher({ breakType: "line" });
	exports.pageBreak = new BreakMatcher({ breakType: "page" });
	exports.columnBreak = new BreakMatcher({ breakType: "column" });
	exports.equalTo = equalTo;
	exports.startsWith = startsWith;
	function paragraph(options$1) {
		return new Matcher("paragraph", options$1);
	}
	function run(options$1) {
		return new Matcher("run", options$1);
	}
	function table(options$1) {
		return new Matcher("table", options$1);
	}
	function highlight(options$1) {
		return new HighlightMatcher(options$1);
	}
	function Matcher(elementType, options$1) {
		options$1 = options$1 || {};
		this._elementType = elementType;
		this._styleId = options$1.styleId;
		this._styleName = options$1.styleName;
		if (options$1.list) {
			this._listIndex = options$1.list.levelIndex;
			this._listIsOrdered = options$1.list.isOrdered;
		}
	}
	Matcher.prototype.matches = function(element$2) {
		return element$2.type === this._elementType && (this._styleId === void 0 || element$2.styleId === this._styleId) && (this._styleName === void 0 || element$2.styleName && this._styleName.operator(this._styleName.operand, element$2.styleName)) && (this._listIndex === void 0 || isList(element$2, this._listIndex, this._listIsOrdered)) && (this._breakType === void 0 || this._breakType === element$2.breakType);
	};
	function HighlightMatcher(options$1) {
		options$1 = options$1 || {};
		this._color = options$1.color;
	}
	HighlightMatcher.prototype.matches = function(element$2) {
		return element$2.type === "highlight" && (this._color === void 0 || element$2.color === this._color);
	};
	function BreakMatcher(options$1) {
		options$1 = options$1 || {};
		this._breakType = options$1.breakType;
	}
	BreakMatcher.prototype.matches = function(element$2) {
		return element$2.type === "break" && (this._breakType === void 0 || element$2.breakType === this._breakType);
	};
	function isList(element$2, levelIndex, isOrdered) {
		return element$2.numbering && element$2.numbering.level == levelIndex && element$2.numbering.isOrdered == isOrdered;
	}
	function equalTo(value) {
		return {
			operator: operatorEqualTo,
			operand: value
		};
	}
	function startsWith(value) {
		return {
			operator: operatorStartsWith,
			operand: value
		};
	}
	function operatorEqualTo(first$1, second) {
		return first$1.toUpperCase() === second.toUpperCase();
	}
	function operatorStartsWith(first$1, second) {
		return second.toUpperCase().indexOf(first$1.toUpperCase()) === 0;
	}
}) });

//#endregion
//#region node_modules/mammoth/lib/styles/parser/tokeniser.js
var require_tokeniser = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/lib/styles/parser/tokeniser.js": ((exports) => {
	var RegexTokeniser = require_lop().RegexTokeniser;
	exports.tokenise = tokenise$1;
	var stringPrefix = "'((?:\\\\.|[^'])*)";
	function tokenise$1(string) {
		var identifierCharacter = "(?:[a-zA-Z\\-_]|\\\\.)";
		return new RegexTokeniser([
			{
				name: "identifier",
				regex: /* @__PURE__ */ new RegExp("(" + identifierCharacter + "(?:" + identifierCharacter + "|[0-9])*)")
			},
			{
				name: "dot",
				regex: /\./
			},
			{
				name: "colon",
				regex: /:/
			},
			{
				name: "gt",
				regex: />/
			},
			{
				name: "whitespace",
				regex: /\s+/
			},
			{
				name: "arrow",
				regex: /=>/
			},
			{
				name: "equals",
				regex: /=/
			},
			{
				name: "startsWith",
				regex: /\^=/
			},
			{
				name: "open-paren",
				regex: /\(/
			},
			{
				name: "close-paren",
				regex: /\)/
			},
			{
				name: "open-square-bracket",
				regex: /\[/
			},
			{
				name: "close-square-bracket",
				regex: /\]/
			},
			{
				name: "string",
				regex: /* @__PURE__ */ new RegExp(stringPrefix + "'")
			},
			{
				name: "unterminated-string",
				regex: new RegExp(stringPrefix)
			},
			{
				name: "integer",
				regex: /([0-9]+)/
			},
			{
				name: "choice",
				regex: /\|/
			},
			{
				name: "bang",
				regex: /(!)/
			}
		]).tokenise(string);
	}
}) });

//#endregion
//#region node_modules/mammoth/lib/style-reader.js
var require_style_reader = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/lib/style-reader.js": ((exports) => {
	var _$2 = (init_index_all(), __toCommonJS(index_all_exports));
	var lop = require_lop();
	var documentMatchers = require_document_matchers();
	var htmlPaths$1 = require_html_paths();
	var tokenise = require_tokeniser().tokenise;
	var results = require_results();
	exports.readHtmlPath = readHtmlPath;
	exports.readDocumentMatcher = readDocumentMatcher;
	exports.readStyle = readStyle$1;
	function readStyle$1(string) {
		return parseString(styleRule, string);
	}
	function createStyleRule() {
		return lop.rules.sequence(lop.rules.sequence.capture(documentMatcherRule()), lop.rules.tokenOfType("whitespace"), lop.rules.tokenOfType("arrow"), lop.rules.sequence.capture(lop.rules.optional(lop.rules.sequence(lop.rules.tokenOfType("whitespace"), lop.rules.sequence.capture(htmlPathRule())).head())), lop.rules.tokenOfType("end")).map(function(documentMatcher, htmlPath) {
			return {
				from: documentMatcher,
				to: htmlPath.valueOrElse(htmlPaths$1.empty)
			};
		});
	}
	function readDocumentMatcher(string) {
		return parseString(documentMatcherRule(), string);
	}
	function documentMatcherRule() {
		var sequence = lop.rules.sequence;
		var identifierToConstant = function(identifier, constant$1) {
			return lop.rules.then(lop.rules.token("identifier", identifier), function() {
				return constant$1;
			});
		};
		var paragraphRule = identifierToConstant("p", documentMatchers.paragraph);
		var runRule = identifierToConstant("r", documentMatchers.run);
		var elementTypeRule = lop.rules.firstOf("p or r or table", paragraphRule, runRule);
		var styleIdRule = lop.rules.sequence(lop.rules.tokenOfType("dot"), lop.rules.sequence.cut(), lop.rules.sequence.capture(identifierRule)).map(function(styleId) {
			return { styleId };
		});
		var styleNameMatcherRule = lop.rules.firstOf("style name matcher", lop.rules.then(lop.rules.sequence(lop.rules.tokenOfType("equals"), lop.rules.sequence.cut(), lop.rules.sequence.capture(stringRule)).head(), function(styleName$1) {
			return { styleName: documentMatchers.equalTo(styleName$1) };
		}), lop.rules.then(lop.rules.sequence(lop.rules.tokenOfType("startsWith"), lop.rules.sequence.cut(), lop.rules.sequence.capture(stringRule)).head(), function(styleName$1) {
			return { styleName: documentMatchers.startsWith(styleName$1) };
		}));
		var styleNameRule = lop.rules.sequence(lop.rules.tokenOfType("open-square-bracket"), lop.rules.sequence.cut(), lop.rules.token("identifier", "style-name"), lop.rules.sequence.capture(styleNameMatcherRule), lop.rules.tokenOfType("close-square-bracket")).head();
		var listTypeRule = lop.rules.firstOf("list type", identifierToConstant("ordered-list", { isOrdered: true }), identifierToConstant("unordered-list", { isOrdered: false }));
		var listRule = sequence(lop.rules.tokenOfType("colon"), sequence.capture(listTypeRule), sequence.cut(), lop.rules.tokenOfType("open-paren"), sequence.capture(integerRule), lop.rules.tokenOfType("close-paren")).map(function(listType, levelNumber) {
			return { list: {
				isOrdered: listType.isOrdered,
				levelIndex: levelNumber - 1
			} };
		});
		function createMatcherSuffixesRule(rules$1) {
			var matcherSuffix = lop.rules.firstOf.apply(lop.rules.firstOf, ["matcher suffix"].concat(rules$1));
			var matcherSuffixes = lop.rules.zeroOrMore(matcherSuffix);
			return lop.rules.then(matcherSuffixes, function(suffixes) {
				var matcherOptions = {};
				suffixes.forEach(function(suffix) {
					_$2.extend(matcherOptions, suffix);
				});
				return matcherOptions;
			});
		}
		var paragraphOrRun = sequence(sequence.capture(elementTypeRule), sequence.capture(createMatcherSuffixesRule([
			styleIdRule,
			styleNameRule,
			listRule
		]))).map(function(createMatcher, matcherOptions) {
			return createMatcher(matcherOptions);
		});
		var table$1 = sequence(lop.rules.token("identifier", "table"), sequence.capture(createMatcherSuffixesRule([styleIdRule, styleNameRule]))).map(function(options$1) {
			return documentMatchers.table(options$1);
		});
		var bold = identifierToConstant("b", documentMatchers.bold);
		var italic = identifierToConstant("i", documentMatchers.italic);
		var underline = identifierToConstant("u", documentMatchers.underline);
		var strikethrough = identifierToConstant("strike", documentMatchers.strikethrough);
		var allCaps = identifierToConstant("all-caps", documentMatchers.allCaps);
		var smallCaps = identifierToConstant("small-caps", documentMatchers.smallCaps);
		var highlight$1 = sequence(lop.rules.token("identifier", "highlight"), lop.rules.sequence.capture(lop.rules.optional(lop.rules.sequence(lop.rules.tokenOfType("open-square-bracket"), lop.rules.sequence.cut(), lop.rules.token("identifier", "color"), lop.rules.tokenOfType("equals"), lop.rules.sequence.capture(stringRule), lop.rules.tokenOfType("close-square-bracket")).head()))).map(function(color) {
			return documentMatchers.highlight({ color: color.valueOrElse(void 0) });
		});
		var commentReference$1 = identifierToConstant("comment-reference", documentMatchers.commentReference);
		var breakMatcher = sequence(lop.rules.token("identifier", "br"), sequence.cut(), lop.rules.tokenOfType("open-square-bracket"), lop.rules.token("identifier", "type"), lop.rules.tokenOfType("equals"), sequence.capture(stringRule), lop.rules.tokenOfType("close-square-bracket")).map(function(breakType) {
			switch (breakType) {
				case "line": return documentMatchers.lineBreak;
				case "page": return documentMatchers.pageBreak;
				case "column": return documentMatchers.columnBreak;
				default:
			}
		});
		return lop.rules.firstOf("element type", paragraphOrRun, table$1, bold, italic, underline, strikethrough, allCaps, smallCaps, highlight$1, commentReference$1, breakMatcher);
	}
	function readHtmlPath(string) {
		return parseString(htmlPathRule(), string);
	}
	function htmlPathRule() {
		var capture = lop.rules.sequence.capture;
		var whitespaceRule = lop.rules.tokenOfType("whitespace");
		var freshRule = lop.rules.then(lop.rules.optional(lop.rules.sequence(lop.rules.tokenOfType("colon"), lop.rules.token("identifier", "fresh"))), function(option) {
			return option.map(function() {
				return true;
			}).valueOrElse(false);
		});
		var separatorRule = lop.rules.then(lop.rules.optional(lop.rules.sequence(lop.rules.tokenOfType("colon"), lop.rules.token("identifier", "separator"), lop.rules.tokenOfType("open-paren"), capture(stringRule), lop.rules.tokenOfType("close-paren")).head()), function(option) {
			return option.valueOrElse("");
		});
		var tagNamesRule = lop.rules.oneOrMoreWithSeparator(identifierRule, lop.rules.tokenOfType("choice"));
		var styleElementRule = lop.rules.sequence(capture(tagNamesRule), capture(lop.rules.zeroOrMore(attributeOrClassRule)), capture(freshRule), capture(separatorRule)).map(function(tagName, attributesList, fresh, separator) {
			var attributes = {};
			var options$1 = {};
			attributesList.forEach(function(attribute) {
				if (attribute.append && attributes[attribute.name]) attributes[attribute.name] += " " + attribute.value;
				else attributes[attribute.name] = attribute.value;
			});
			if (fresh) options$1.fresh = true;
			if (separator) options$1.separator = separator;
			return htmlPaths$1.element(tagName, attributes, options$1);
		});
		return lop.rules.firstOf("html path", lop.rules.then(lop.rules.tokenOfType("bang"), function() {
			return htmlPaths$1.ignore;
		}), lop.rules.then(lop.rules.zeroOrMoreWithSeparator(styleElementRule, lop.rules.sequence(whitespaceRule, lop.rules.tokenOfType("gt"), whitespaceRule)), htmlPaths$1.elements));
	}
	var identifierRule = lop.rules.then(lop.rules.tokenOfType("identifier"), decodeEscapeSequences);
	var integerRule = lop.rules.tokenOfType("integer");
	var stringRule = lop.rules.then(lop.rules.tokenOfType("string"), decodeEscapeSequences);
	var escapeSequences = {
		"n": "\n",
		"r": "\r",
		"t": "	"
	};
	function decodeEscapeSequences(value) {
		return value.replace(/\\(.)/g, function(match, code$1) {
			return escapeSequences[code$1] || code$1;
		});
	}
	var attributeRule = lop.rules.sequence(lop.rules.tokenOfType("open-square-bracket"), lop.rules.sequence.cut(), lop.rules.sequence.capture(identifierRule), lop.rules.tokenOfType("equals"), lop.rules.sequence.capture(stringRule), lop.rules.tokenOfType("close-square-bracket")).map(function(name, value) {
		return {
			name,
			value,
			append: false
		};
	});
	var classRule = lop.rules.sequence(lop.rules.tokenOfType("dot"), lop.rules.sequence.cut(), lop.rules.sequence.capture(identifierRule)).map(function(className) {
		return {
			name: "class",
			value: className,
			append: true
		};
	});
	var attributeOrClassRule = lop.rules.firstOf("attribute or class", attributeRule, classRule);
	function parseString(rule, string) {
		var tokens = tokenise(string);
		var parseResult = lop.Parser().parseTokens(rule, tokens);
		if (parseResult.isSuccess()) return results.success(parseResult.value());
		else return new results.Result(null, [results.warning(describeFailure(string, parseResult))]);
	}
	function describeFailure(input, parseResult) {
		return "Did not understand this style mapping, so ignored it: " + input + "\n" + parseResult.errors().map(describeError).join("\n");
	}
	function describeError(error$1) {
		return "Error was at character number " + error$1.characterNumber() + ": Expected " + error$1.expected + " but got " + error$1.actual;
	}
	var styleRule = createStyleRule();
}) });

//#endregion
//#region node_modules/mammoth/lib/options-reader.js
var require_options_reader = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/lib/options-reader.js": ((exports) => {
	exports.readOptions = readOptions$1;
	var _$1 = (init_index_all(), __toCommonJS(index_all_exports));
	var defaultStyleMap = exports._defaultStyleMap = [
		"p.Heading1 => h1:fresh",
		"p.Heading2 => h2:fresh",
		"p.Heading3 => h3:fresh",
		"p.Heading4 => h4:fresh",
		"p.Heading5 => h5:fresh",
		"p.Heading6 => h6:fresh",
		"p[style-name='Heading 1'] => h1:fresh",
		"p[style-name='Heading 2'] => h2:fresh",
		"p[style-name='Heading 3'] => h3:fresh",
		"p[style-name='Heading 4'] => h4:fresh",
		"p[style-name='Heading 5'] => h5:fresh",
		"p[style-name='Heading 6'] => h6:fresh",
		"p[style-name='heading 1'] => h1:fresh",
		"p[style-name='heading 2'] => h2:fresh",
		"p[style-name='heading 3'] => h3:fresh",
		"p[style-name='heading 4'] => h4:fresh",
		"p[style-name='heading 5'] => h5:fresh",
		"p[style-name='heading 6'] => h6:fresh",
		"p.Heading => h1:fresh",
		"p[style-name='Heading'] => h1:fresh",
		"r[style-name='Strong'] => strong",
		"p[style-name='footnote text'] => p:fresh",
		"r[style-name='footnote reference'] =>",
		"p[style-name='endnote text'] => p:fresh",
		"r[style-name='endnote reference'] =>",
		"p[style-name='annotation text'] => p:fresh",
		"r[style-name='annotation reference'] =>",
		"p[style-name='Footnote'] => p:fresh",
		"r[style-name='Footnote anchor'] =>",
		"p[style-name='Endnote'] => p:fresh",
		"r[style-name='Endnote anchor'] =>",
		"p:unordered-list(1) => ul > li:fresh",
		"p:unordered-list(2) => ul|ol > li > ul > li:fresh",
		"p:unordered-list(3) => ul|ol > li > ul|ol > li > ul > li:fresh",
		"p:unordered-list(4) => ul|ol > li > ul|ol > li > ul|ol > li > ul > li:fresh",
		"p:unordered-list(5) => ul|ol > li > ul|ol > li > ul|ol > li > ul|ol > li > ul > li:fresh",
		"p:ordered-list(1) => ol > li:fresh",
		"p:ordered-list(2) => ul|ol > li > ol > li:fresh",
		"p:ordered-list(3) => ul|ol > li > ul|ol > li > ol > li:fresh",
		"p:ordered-list(4) => ul|ol > li > ul|ol > li > ul|ol > li > ol > li:fresh",
		"p:ordered-list(5) => ul|ol > li > ul|ol > li > ul|ol > li > ul|ol > li > ol > li:fresh",
		"r[style-name='Hyperlink'] =>",
		"p[style-name='Normal'] => p:fresh",
		"p.Body => p:fresh",
		"p[style-name='Body'] => p:fresh"
	];
	var standardOptions = exports._standardOptions = {
		externalFileAccess: false,
		transformDocument: identity,
		includeDefaultStyleMap: true,
		includeEmbeddedStyleMap: true
	};
	function readOptions$1(options$1) {
		options$1 = options$1 || {};
		return _$1.extend({}, standardOptions, options$1, {
			customStyleMap: readStyleMap(options$1.styleMap),
			readStyleMap: function() {
				var styleMap = this.customStyleMap;
				if (this.includeEmbeddedStyleMap) styleMap = styleMap.concat(readStyleMap(this.embeddedStyleMap));
				if (this.includeDefaultStyleMap) styleMap = styleMap.concat(defaultStyleMap);
				return styleMap;
			}
		});
	}
	function readStyleMap(styleMap) {
		if (!styleMap) return [];
		else if (_$1.isString(styleMap)) return styleMap.split("\n").map(function(line) {
			return line.trim();
		}).filter(function(line) {
			return line !== "" && line.charAt(0) !== "#";
		});
		else return styleMap;
	}
	function identity(value) {
		return value;
	}
}) });

//#endregion
//#region node_modules/mammoth/browser/unzip.js
var require_unzip = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/browser/unzip.js": ((exports) => {
	var promises = require_promises();
	var zipfile = require_zipfile();
	exports.openZip = openZip;
	function openZip(options$1) {
		if (options$1.arrayBuffer) return promises.resolve(zipfile.openArrayBuffer(options$1.arrayBuffer));
		else return promises.reject(/* @__PURE__ */ new Error("Could not find file in options"));
	}
}) });

//#endregion
//#region node_modules/mammoth/lib/underline.js
var require_underline = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/lib/underline.js": ((exports) => {
	var htmlPaths = require_html_paths();
	var Html = require_html();
	exports.element = element;
	function element(name) {
		return function(html$1) {
			return Html.elementWithTag(htmlPaths.element(name), [html$1]);
		};
	}
}) });

//#endregion
//#region node_modules/mammoth/lib/index.js
var require_lib = /* @__PURE__ */ __commonJS({ "node_modules/mammoth/lib/index.js": ((exports) => {
	var _ = (init_index_all(), __toCommonJS(index_all_exports));
	var docxReader = require_docx_reader();
	var docxStyleMap = require_style_map();
	var DocumentConverter = require_document_to_html().DocumentConverter;
	var convertElementToRawText = require_raw_text().convertElementToRawText;
	var readStyle = require_style_reader().readStyle;
	var readOptions = require_options_reader().readOptions;
	var unzip = require_unzip();
	var Result = require_results().Result;
	exports.convertToHtml = convertToHtml;
	exports.convertToMarkdown = convertToMarkdown;
	exports.convert = convert;
	exports.extractRawText = extractRawText;
	exports.images = require_images();
	exports.transforms = require_transforms();
	exports.underline = require_underline();
	exports.embedStyleMap = embedStyleMap;
	exports.readEmbeddedStyleMap = readEmbeddedStyleMap;
	function convertToHtml(input, options$1) {
		return convert(input, options$1);
	}
	function convertToMarkdown(input, options$1) {
		var markdownOptions = Object.create(options$1 || {});
		markdownOptions.outputFormat = "markdown";
		return convert(input, markdownOptions);
	}
	function convert(input, options$1) {
		options$1 = readOptions(options$1);
		return unzip.openZip(input).tap(function(docxFile) {
			return docxStyleMap.readStyleMap(docxFile).then(function(styleMap) {
				options$1.embeddedStyleMap = styleMap;
			});
		}).then(function(docxFile) {
			return docxReader.read(docxFile, input, options$1).then(function(documentResult) {
				return documentResult.map(options$1.transformDocument);
			}).then(function(documentResult) {
				return convertDocumentToHtml(documentResult, options$1);
			});
		});
	}
	function readEmbeddedStyleMap(input) {
		return unzip.openZip(input).then(docxStyleMap.readStyleMap);
	}
	function convertDocumentToHtml(documentResult, options$1) {
		var styleMapResult = parseStyleMap(options$1.readStyleMap());
		var parsedOptions = _.extend({}, options$1, { styleMap: styleMapResult.value });
		var documentConverter = new DocumentConverter(parsedOptions);
		return documentResult.flatMapThen(function(document$1) {
			return styleMapResult.flatMapThen(function(styleMap) {
				return documentConverter.convertToHtml(document$1);
			});
		});
	}
	function parseStyleMap(styleMap) {
		return Result.combine((styleMap || []).map(readStyle)).map(function(styleMap$1) {
			return styleMap$1.filter(function(styleMapping) {
				return !!styleMapping;
			});
		});
	}
	function extractRawText(input) {
		return unzip.openZip(input).then(docxReader.read).then(function(documentResult) {
			return documentResult.map(convertElementToRawText);
		});
	}
	function embedStyleMap(input, styleMap) {
		return unzip.openZip(input).tap(function(docxFile) {
			return docxStyleMap.writeStyleMap(docxFile, styleMap);
		}).then(function(docxFile) {
			return docxFile.toArrayBuffer();
		}).then(function(arrayBuffer) {
			return {
				toArrayBuffer: function() {
					return arrayBuffer;
				},
				toBuffer: function() {
					return Buffer.from(arrayBuffer);
				}
			};
		});
	}
	exports.styleMapping = function() {
		throw new Error("Use a raw string instead of mammoth.styleMapping e.g. \"p[style-name='Title'] => h1\" instead of mammoth.styleMapping(\"p[style-name='Title'] => h1\")");
	};
}) });

//#endregion
export default require_lib();

//# sourceMappingURL=mammoth.js.map