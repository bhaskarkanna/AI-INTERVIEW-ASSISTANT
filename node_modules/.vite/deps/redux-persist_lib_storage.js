import { __commonJS } from "./chunk-DlTWrutj.js";

//#region node_modules/redux-persist/lib/storage/getStorage.js
var require_getStorage = /* @__PURE__ */ __commonJS({ "node_modules/redux-persist/lib/storage/getStorage.js": ((exports) => {
	exports.__esModule = true;
	exports.default = getStorage;
	function _typeof(obj) {
		if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") _typeof = function _typeof$1(obj$1) {
			return typeof obj$1;
		};
		else _typeof = function _typeof$1(obj$1) {
			return obj$1 && typeof Symbol === "function" && obj$1.constructor === Symbol && obj$1 !== Symbol.prototype ? "symbol" : typeof obj$1;
		};
		return _typeof(obj);
	}
	function noop() {}
	var noopStorage = {
		getItem: noop,
		setItem: noop,
		removeItem: noop
	};
	function hasStorage(storageType) {
		if ((typeof self === "undefined" ? "undefined" : _typeof(self)) !== "object" || !(storageType in self)) return false;
		try {
			var storage = self[storageType];
			var testKey = "redux-persist ".concat(storageType, " test");
			storage.setItem(testKey, "test");
			storage.getItem(testKey);
			storage.removeItem(testKey);
		} catch (e) {
			console.warn("redux-persist ".concat(storageType, " test failed, persistence will be disabled."));
			return false;
		}
		return true;
	}
	function getStorage(type) {
		var storageType = "".concat(type, "Storage");
		if (hasStorage(storageType)) return self[storageType];
		else {
			console.error("redux-persist failed to create sync storage. falling back to noop storage.");
			return noopStorage;
		}
	}
}) });

//#endregion
//#region node_modules/redux-persist/lib/storage/createWebStorage.js
var require_createWebStorage = /* @__PURE__ */ __commonJS({ "node_modules/redux-persist/lib/storage/createWebStorage.js": ((exports) => {
	exports.__esModule = true;
	exports.default = createWebStorage;
	var _getStorage = _interopRequireDefault$1(require_getStorage());
	function _interopRequireDefault$1(obj) {
		return obj && obj.__esModule ? obj : { default: obj };
	}
	function createWebStorage(type) {
		var storage = (0, _getStorage.default)(type);
		return {
			getItem: function getItem(key) {
				return new Promise(function(resolve, reject) {
					resolve(storage.getItem(key));
				});
			},
			setItem: function setItem(key, item) {
				return new Promise(function(resolve, reject) {
					resolve(storage.setItem(key, item));
				});
			},
			removeItem: function removeItem(key) {
				return new Promise(function(resolve, reject) {
					resolve(storage.removeItem(key));
				});
			}
		};
	}
}) });

//#endregion
//#region node_modules/redux-persist/lib/storage/index.js
var require_storage = /* @__PURE__ */ __commonJS({ "node_modules/redux-persist/lib/storage/index.js": ((exports) => {
	exports.__esModule = true;
	var _createWebStorage = _interopRequireDefault(require_createWebStorage());
	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : { default: obj };
	}
	var _default = (0, _createWebStorage.default)("local");
	exports.default = _default;
}) });

//#endregion
export default require_storage();

//# sourceMappingURL=redux-persist_lib_storage.js.map